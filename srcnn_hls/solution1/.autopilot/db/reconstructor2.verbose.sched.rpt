

================================================================
== Vitis HLS Report for 'reconstructor2'
================================================================
* Date:           Tue Oct 28 17:21:16 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.474 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      613|      613|  6.130 us|  6.130 us|  613|  613|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_66_1   |      612|      612|        36|          -|          -|    17|        no|
        | + VITIS_LOOP_67_2  |       34|       34|         2|          -|          -|    17|        no|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_ftmap, void @empty_5, i32 0, i32 0, void @empty_1, i32 4294967295, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tile_w_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %tile_w" [src/srcnn.cpp:61]   --->   Operation 7 'read' 'tile_w_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tile_h_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %tile_h" [src/srcnn.cpp:61]   --->   Operation 8 'read' 'tile_h_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln66 = zext i8 %tile_w_read" [src/srcnn.cpp:66]   --->   Operation 9 'zext' 'zext_ln66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln66 = store i5 0, i5 %i" [src/srcnn.cpp:66]   --->   Operation 10 'store' 'store_ln66' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln66 = br void %VITIS_LOOP_67_2" [src/srcnn.cpp:66]   --->   Operation 11 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.61>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [src/srcnn.cpp:66]   --->   Operation 12 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i5 %i_1" [src/srcnn.cpp:68]   --->   Operation 13 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i5.i4, i5 %i_1, i4 0" [src/srcnn.cpp:68]   --->   Operation 14 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.77ns)   --->   "%add_ln68_1 = add i9 %tmp, i9 %zext_ln68" [src/srcnn.cpp:68]   --->   Operation 15 'add' 'add_ln68_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln66_1 = zext i5 %i_1" [src/srcnn.cpp:66]   --->   Operation 16 'zext' 'zext_ln66_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.78ns)   --->   "%icmp_ln66 = icmp_eq  i5 %i_1, i5 17" [src/srcnn.cpp:66]   --->   Operation 17 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.78ns)   --->   "%add_ln66 = add i5 %i_1, i5 1" [src/srcnn.cpp:66]   --->   Operation 18 'add' 'add_ln66' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln66 = br i1 %icmp_ln66, void %VITIS_LOOP_67_2.split, void %for.end16" [src/srcnn.cpp:66]   --->   Operation 19 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%speclooptripcount_ln66 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 17, i64 17, i64 17" [src/srcnn.cpp:66]   --->   Operation 20 'speclooptripcount' 'speclooptripcount_ln66' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%specloopname_ln66 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [src/srcnn.cpp:66]   --->   Operation 21 'specloopname' 'specloopname_ln66' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.76ns)   --->   "%empty = add i8 %zext_ln66_1, i8 %tile_h_read" [src/srcnn.cpp:66]   --->   Operation 22 'add' 'empty' <Predicate = (!icmp_ln66)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i8 %empty" [src/srcnn.cpp:68]   --->   Operation 23 'zext' 'zext_ln68_1' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %empty, i8 0" [src/srcnn.cpp:68]   --->   Operation 24 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.85ns)   --->   "%sub_ln68 = sub i16 %tmp_1, i16 %zext_ln68_1" [src/srcnn.cpp:68]   --->   Operation 25 'sub' 'sub_ln68' <Predicate = (!icmp_ln66)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.42ns)   --->   "%br_ln67 = br void %for.inc" [src/srcnn.cpp:67]   --->   Operation 26 'br' 'br_ln67' <Predicate = (!icmp_ln66)> <Delay = 0.42>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%ret_ln71 = ret" [src/srcnn.cpp:71]   --->   Operation 27 'ret' 'ret_ln71' <Predicate = (icmp_ln66)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.01>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%j = phi i5 %add_ln67, void %for.inc.split, i5 0, void %VITIS_LOOP_67_2.split" [src/srcnn.cpp:67]   --->   Operation 28 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln68_2 = zext i5 %j" [src/srcnn.cpp:68]   --->   Operation 29 'zext' 'zext_ln68_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.77ns)   --->   "%add_ln68_2 = add i9 %add_ln68_1, i9 %zext_ln68_2" [src/srcnn.cpp:68]   --->   Operation 30 'add' 'add_ln68_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln68_3 = zext i9 %add_ln68_2" [src/srcnn.cpp:68]   --->   Operation 31 'zext' 'zext_ln68_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%output_tile_addr = getelementptr i32 %output_tile, i64 0, i64 %zext_ln68_3" [src/srcnn.cpp:68]   --->   Operation 32 'getelementptr' 'output_tile_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.78ns)   --->   "%icmp_ln67 = icmp_eq  i5 %j, i5 17" [src/srcnn.cpp:67]   --->   Operation 33 'icmp' 'icmp_ln67' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.78ns)   --->   "%add_ln67 = add i5 %j, i5 1" [src/srcnn.cpp:67]   --->   Operation 34 'add' 'add_ln67' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln67 = br i1 %icmp_ln67, void %for.inc.split, void %for.inc14" [src/srcnn.cpp:67]   --->   Operation 35 'br' 'br_ln67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (1.23ns)   --->   "%output_tile_load = load i9 %output_tile_addr" [src/srcnn.cpp:68]   --->   Operation 36 'load' 'output_tile_load' <Predicate = (!icmp_ln67)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 289> <RAM>
ST_3 : Operation 37 [1/1] (0.76ns)   --->   "%add_ln68 = add i9 %zext_ln66, i9 %zext_ln68_2" [src/srcnn.cpp:68]   --->   Operation 37 'add' 'add_ln68' <Predicate = (!icmp_ln67)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln68_4 = zext i9 %add_ln68" [src/srcnn.cpp:68]   --->   Operation 38 'zext' 'zext_ln68_4' <Predicate = (!icmp_ln67)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.85ns)   --->   "%add_ln68_3 = add i16 %sub_ln68, i16 %zext_ln68_4" [src/srcnn.cpp:68]   --->   Operation 39 'add' 'add_ln68_3' <Predicate = (!icmp_ln67)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln66 = store i5 %add_ln66, i5 %i" [src/srcnn.cpp:66]   --->   Operation 40 'store' 'store_ln66' <Predicate = (icmp_ln67)> <Delay = 0.42>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln66 = br void %VITIS_LOOP_67_2" [src/srcnn.cpp:66]   --->   Operation 41 'br' 'br_ln66' <Predicate = (icmp_ln67)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.47>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%speclooptripcount_ln67 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 17, i64 17, i64 17" [src/srcnn.cpp:67]   --->   Operation 42 'speclooptripcount' 'speclooptripcount_ln67' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%specloopname_ln67 = specloopname void @_ssdm_op_SpecLoopName, void @empty" [src/srcnn.cpp:67]   --->   Operation 43 'specloopname' 'specloopname_ln67' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/2] (1.23ns)   --->   "%output_tile_load = load i9 %output_tile_addr" [src/srcnn.cpp:68]   --->   Operation 44 'load' 'output_tile_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 289> <RAM>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln68_5 = zext i16 %add_ln68_3" [src/srcnn.cpp:68]   --->   Operation 45 'zext' 'zext_ln68_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%output_ftmap_addr = getelementptr i32 %output_ftmap, i64 0, i64 %zext_ln68_5" [src/srcnn.cpp:68]   --->   Operation 46 'getelementptr' 'output_ftmap_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%bitcast_ln68 = bitcast i32 %output_tile_load" [src/srcnn.cpp:68]   --->   Operation 47 'bitcast' 'bitcast_ln68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (1.23ns)   --->   "%store_ln68 = store i32 %bitcast_ln68, i16 %output_ftmap_addr" [src/srcnn.cpp:68]   --->   Operation 48 'store' 'store_ln68' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 65025> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln67 = br void %for.inc" [src/srcnn.cpp:67]   --->   Operation 49 'br' 'br_ln67' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0.000 ns)
	'store' operation ('store_ln66', src/srcnn.cpp:66) of constant 0 on local variable 'i' [10]  (0.427 ns)

 <State 2>: 1.618ns
The critical path consists of the following:
	'load' operation ('i', src/srcnn.cpp:66) on local variable 'i' [13]  (0.000 ns)
	'add' operation ('empty', src/srcnn.cpp:66) [24]  (0.765 ns)
	'sub' operation ('sub_ln68', src/srcnn.cpp:68) [27]  (0.853 ns)

 <State 3>: 2.013ns
The critical path consists of the following:
	'phi' operation ('j', src/srcnn.cpp:67) with incoming values : ('add_ln67', src/srcnn.cpp:67) [30]  (0.000 ns)
	'add' operation ('add_ln68_2', src/srcnn.cpp:68) [32]  (0.776 ns)
	'getelementptr' operation ('output_tile_addr', src/srcnn.cpp:68) [34]  (0.000 ns)
	'load' operation ('output_tile_load', src/srcnn.cpp:68) on array 'output_tile' [41]  (1.237 ns)

 <State 4>: 2.474ns
The critical path consists of the following:
	'load' operation ('output_tile_load', src/srcnn.cpp:68) on array 'output_tile' [41]  (1.237 ns)
	'store' operation ('store_ln68', src/srcnn.cpp:68) of variable 'bitcast_ln68', src/srcnn.cpp:68 on array 'output_ftmap' [48]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
