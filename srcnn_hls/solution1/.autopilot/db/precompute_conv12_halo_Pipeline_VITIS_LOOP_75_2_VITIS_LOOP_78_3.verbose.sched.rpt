

================================================================
== Vitis HLS Report for 'precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3'
================================================================
* Date:           Tue Oct 28 14:00:50 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.016 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      493|      493|  4.930 us|  4.930 us|  493|  493|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_75_2_VITIS_LOOP_78_3  |      491|      491|        12|          6|          6|    81|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 6, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.43>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%v_2 = alloca i32 1"   --->   Operation 15 'alloca' 'v_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%kx = alloca i32 1"   --->   Operation 16 'alloca' 'kx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%ky = alloca i32 1"   --->   Operation 17 'alloca' 'ky' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 18 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%w0_cast6_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %w0_cast6"   --->   Operation 19 'read' 'w0_cast6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln144_1_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %sext_ln144_1"   --->   Operation 20 'read' 'sext_ln144_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%gxc_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %gxc"   --->   Operation 21 'read' 'gxc_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sub_ln77_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %sub_ln77"   --->   Operation 22 'read' 'sub_ln77_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%add_ln82_read = read i11 @_ssdm_op_Read.ap_auto.i11, i11 %add_ln82"   --->   Operation 23 'read' 'add_ln82_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln142_mid2_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %trunc_ln142_mid2"   --->   Operation 24 'read' 'trunc_ln142_mid2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%sext_ln141_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %sext_ln141"   --->   Operation 25 'read' 'sext_ln141_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%v_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %v"   --->   Operation 26 'read' 'v_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%w0_cast6_cast = zext i8 %w0_cast6_read"   --->   Operation 27 'zext' 'w0_cast6_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%sext_ln144_1_cast = sext i10 %sext_ln144_1_read"   --->   Operation 28 'sext' 'sext_ln144_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln141_cast = sext i10 %sext_ln141_read"   --->   Operation 29 'sext' 'sext_ln141_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %conv1_weights, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_1 = alloca i64 1"   --->   Operation 31 'alloca' 'p_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.42ns)   --->   "%store_ln0 = store i7 0, i7 %indvar_flatten"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %ky"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %kx"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %v_read, i32 %v_2"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body10.i"   --->   Operation 36 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%ky_1 = load i4 %ky" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 37 'load' 'ky_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 38 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i4 %ky_1" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 39 'zext' 'zext_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.78ns)   --->   "%add_ln76 = add i11 %sext_ln141_cast, i11 %zext_ln75" [src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 40 'add' 'add_ln76' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln76, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 41 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.79ns)   --->   "%icmp_ln26 = icmp_sgt  i11 %add_ln76, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 42 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.79ns)   --->   "%add_ln26 = add i4 %ky_1, i4 12" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 43 'add' 'add_ln26' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln26 = sext i4 %add_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 44 'sext' 'sext_ln26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.77ns)   --->   "%add_ln26_1 = add i7 %sext_ln26, i7 %trunc_ln142_mid2_read" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 45 'add' 'add_ln26_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node gh)   --->   "%select_ln26 = select i1 %tmp, i7 0, i7 126" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 46 'select' 'select_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node gh)   --->   "%or_ln26 = or i1 %tmp, i1 %icmp_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 47 'or' 'or_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.36ns) (out node of the LUT)   --->   "%gh = select i1 %or_ln26, i7 %select_ln26, i7 %add_ln26_1" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 48 'select' 'gh' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.77ns)   --->   "%icmp_ln75 = icmp_eq  i7 %indvar_flatten_load, i7 81" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 49 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.77ns)   --->   "%add_ln75_2 = add i7 %indvar_flatten_load, i7 1" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 50 'add' 'add_ln75_2' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln75, void %for.cond.cleanup9.i, void %for.cond.cleanup3.i_ifconv.exitStub" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 51 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%kx_load = load i4 %kx" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 52 'load' 'kx_load' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.79ns)   --->   "%add_ln75 = add i4 %ky_1, i4 1" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 53 'add' 'add_ln75' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.79ns)   --->   "%icmp_ln78 = icmp_eq  i4 %kx_load, i4 9" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 54 'icmp' 'icmp_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.39ns)   --->   "%select_ln75 = select i1 %icmp_ln78, i4 0, i4 %kx_load" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 55 'select' 'select_ln75' <Predicate = (!icmp_ln75)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.39ns)   --->   "%select_ln75_1 = select i1 %icmp_ln78, i4 %add_ln75, i4 %ky_1" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 56 'select' 'select_ln75_1' <Predicate = (!icmp_ln75)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i4 %select_ln75_1" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 57 'zext' 'zext_ln82' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.79ns)   --->   "%add_ln82_1 = add i11 %add_ln82_read, i11 %zext_ln82" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 58 'add' 'add_ln82_1' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i11 %add_ln82_1" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 59 'zext' 'zext_ln82_1' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i11 %add_ln82_1" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 60 'trunc' 'trunc_ln82' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%p_shl2 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i10.i3, i10 %trunc_ln82, i3 0" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 61 'bitconcatenate' 'p_shl2' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln82_2 = add i13 %p_shl2, i13 %zext_ln82_1" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 62 'add' 'add_ln82_2' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i4 %add_ln75" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 63 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.78ns)   --->   "%add_ln76_1 = add i11 %sext_ln141_cast, i11 %zext_ln75_1" [src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 64 'add' 'add_ln76_1' <Predicate = (!icmp_ln75)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln76_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 65 'bitselect' 'tmp_2' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.79ns)   --->   "%icmp_ln26_1 = icmp_sgt  i11 %add_ln76_1, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 66 'icmp' 'icmp_ln26_1' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%add_ln26_2 = add i4 %ky_1, i4 13" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 67 'add' 'add_ln26_2' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln26_2 = sext i4 %add_ln26_2" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 68 'sext' 'sext_ln26_2' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.77ns)   --->   "%add_ln26_4 = add i7 %sext_ln26_2, i7 %trunc_ln142_mid2_read" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 69 'add' 'add_ln26_4' <Predicate = (!icmp_ln75)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln75_2)   --->   "%select_ln26_2 = select i1 %tmp_2, i7 0, i7 126" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 70 'select' 'select_ln26_2' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln75_2)   --->   "%or_ln26_1 = or i1 %tmp_2, i1 %icmp_ln26_1" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 71 'or' 'or_ln26_1' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln75_2)   --->   "%select_ln26_3 = select i1 %or_ln26_1, i7 %select_ln26_2, i7 %add_ln26_4" [src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147]   --->   Operation 72 'select' 'select_ln26_3' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 73 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln75_2 = select i1 %icmp_ln78, i7 %select_ln26_3, i7 %gh" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 73 'select' 'select_ln75_2' <Predicate = (!icmp_ln75)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (1.69ns) (grouped into DSP with root node add_ln82_4)   --->   "%add_ln75_1 = add i7 %sub_ln77_read, i7 %select_ln75_2" [src/srcnn.cpp:75->src/srcnn.cpp:147]   --->   Operation 74 'add' 'add_ln75_1' <Predicate = (!icmp_ln75)> <Delay = 1.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 75 [1/1] (0.00ns) (grouped into DSP with root node add_ln82_4)   --->   "%zext_ln78 = zext i7 %add_ln75_1" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 75 'zext' 'zext_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 76 [3/3] (0.99ns) (grouped into DSP with root node add_ln82_4)   --->   "%mul_ln78 = mul i13 %zext_ln78, i13 76" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 76 'mul' 'mul_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln82_2 = zext i4 %select_ln75" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 77 'zext' 'zext_ln82_2' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.82ns) (root node of TernaryAdder)   --->   "%add_ln82_3 = add i13 %add_ln82_2, i13 %zext_ln82_2" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 78 'add' 'add_ln82_3' <Predicate = (!icmp_ln75)> <Delay = 0.82> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln82_3 = zext i13 %add_ln82_3" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 79 'zext' 'zext_ln82_3' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%conv1_weights_addr = getelementptr i32 %conv1_weights, i64 0, i64 %zext_ln82_3" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 80 'getelementptr' 'conv1_weights_addr' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i4 %select_ln75" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 81 'zext' 'zext_ln78_1' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.78ns)   --->   "%add_ln80 = add i10 %gxc_read, i10 1020" [src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 82 'add' 'add_ln80' <Predicate = (!icmp_ln75)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln80 = sext i10 %add_ln80" [src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 83 'sext' 'sext_ln80' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.78ns)   --->   "%add_ln80_1 = add i11 %sext_ln80, i11 %zext_ln78_1" [src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 84 'add' 'add_ln80_1' <Predicate = (!icmp_ln75)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln80_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 85 'bitselect' 'tmp_3' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.79ns)   --->   "%icmp_ln26_2 = icmp_sgt  i11 %add_ln80_1, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 86 'icmp' 'icmp_ln26_2' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 87 [1/1] (0.79ns)   --->   "%add_ln26_5 = add i4 %select_ln75, i4 12" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 87 'add' 'add_ln26_5' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%sext_ln26_1 = sext i4 %add_ln26_5" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 88 'sext' 'sext_ln26_1' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.78ns)   --->   "%add_ln26_3 = add i11 %sext_ln26_1, i11 %sext_ln144_1_cast" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 89 'add' 'add_ln26_3' <Predicate = (!icmp_ln75)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln80_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 90 'bitselect' 'tmp_4' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%select_ln26_4 = select i1 %tmp_4, i11 0, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 91 'select' 'select_ln26_4' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%or_ln26_2 = or i1 %tmp_3, i1 %icmp_ln26_2" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 92 'or' 'or_ln26_2' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%gw = select i1 %or_ln26_2, i11 %select_ln26_4, i11 %add_ln26_3" [src/srcnn.cpp:26->src/srcnn.cpp:80->src/srcnn.cpp:147]   --->   Operation 93 'select' 'gw' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.76ns)   --->   "%sub_ln81 = sub i9 6, i9 %w0_cast6_cast" [src/srcnn.cpp:81->src/srcnn.cpp:147]   --->   Operation 94 'sub' 'sub_ln81' <Predicate = (!icmp_ln75)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node px)   --->   "%sext_ln81 = sext i9 %sub_ln81" [src/srcnn.cpp:81->src/srcnn.cpp:147]   --->   Operation 95 'sext' 'sext_ln81' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.79ns) (out node of the LUT)   --->   "%px = add i11 %sext_ln81, i11 %gw" [src/srcnn.cpp:81->src/srcnn.cpp:147]   --->   Operation 96 'add' 'px' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 97 [2/2] (1.23ns)   --->   "%conv1_weights_load = load i13 %conv1_weights_addr" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 97 'load' 'conv1_weights_load' <Predicate = (!icmp_ln75)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5184> <RAM>
ST_1 : Operation 98 [1/1] (0.79ns)   --->   "%add_ln78 = add i4 %select_ln75, i4 1" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 98 'add' 'add_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 99 [1/1] (0.42ns)   --->   "%store_ln78 = store i7 %add_ln75_2, i7 %indvar_flatten" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 99 'store' 'store_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.42>
ST_1 : Operation 100 [1/1] (0.42ns)   --->   "%store_ln78 = store i4 %select_ln75_1, i4 %ky" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 100 'store' 'store_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.42>
ST_1 : Operation 101 [1/1] (0.42ns)   --->   "%store_ln78 = store i4 %add_ln78, i4 %kx" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 101 'store' 'store_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 102 [2/3] (0.99ns) (grouped into DSP with root node add_ln82_4)   --->   "%mul_ln78 = mul i13 %zext_ln78, i13 76" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 102 'mul' 'mul_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 103 [1/2] (1.23ns)   --->   "%conv1_weights_load = load i13 %conv1_weights_addr" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 103 'load' 'conv1_weights_load' <Predicate = (!icmp_ln75)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5184> <RAM>

State 3 <SV = 2> <Delay = 0.64>
ST_3 : Operation 104 [1/3] (0.00ns) (grouped into DSP with root node add_ln82_4)   --->   "%mul_ln78 = mul i13 %zext_ln78, i13 76" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 104 'mul' 'mul_ln78' <Predicate = (!icmp_ln75)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i11 %px" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 105 'sext' 'sext_ln82' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_3 : Operation 106 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln82_4 = add i13 %mul_ln78, i13 %sext_ln82" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 106 'add' 'add_ln82_4' <Predicate = (!icmp_ln75)> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 1.88>
ST_4 : Operation 107 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln82_4 = add i13 %mul_ln78, i13 %sext_ln82" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 107 'add' 'add_ln82_4' <Predicate = (!icmp_ln75)> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln82_4 = zext i13 %add_ln82_4" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 108 'zext' 'zext_ln82_4' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%patch_addr = getelementptr i32 %patch, i64 0, i64 %zext_ln82_4" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 109 'getelementptr' 'patch_addr' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_4 : Operation 110 [2/2] (1.23ns)   --->   "%patch_load = load i13 %patch_addr" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 110 'load' 'patch_load' <Predicate = (!icmp_ln75)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5776> <RAM>

State 5 <SV = 4> <Delay = 1.23>
ST_5 : Operation 111 [1/2] (1.23ns)   --->   "%patch_load = load i13 %patch_addr" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 111 'load' 'patch_load' <Predicate = (!icmp_ln75)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5776> <RAM>

State 6 <SV = 5> <Delay = 7.01>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "%bitcast_ln82 = bitcast i32 %conv1_weights_load" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 112 'bitcast' 'bitcast_ln82' <Predicate = (!icmp_ln75)> <Delay = 0.00>
ST_6 : [1/1] (0.47ns)   --->   Input mux for Operation 113 '%p = fmul i32 %bitcast_ln82, i32 %patch_load'
ST_6 : Operation 113 [3/3] (6.54ns)   --->   "%p = fmul i32 %bitcast_ln82, i32 %patch_load" [src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 113 'fmul' 'p' <Predicate = (!icmp_ln75)> <Delay = 6.54> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%v_2_load_1 = load i32 %v_2"   --->   Operation 129 'load' 'v_2_load_1' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %v_2_out, i32 %v_2_load_1"   --->   Operation 130 'write' 'write_ln0' <Predicate = (icmp_ln75)> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 131 'ret' 'ret_ln0' <Predicate = (icmp_ln75)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.01>
ST_7 : Operation 114 [2/3] (7.01ns)   --->   "%p = fmul i32 %bitcast_ln82, i32 %patch_load" [src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 114 'fmul' 'p' <Predicate = true> <Delay = 7.01> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.01>
ST_8 : Operation 115 [1/3] (7.01ns)   --->   "%p = fmul i32 %bitcast_ln82, i32 %patch_load" [src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 115 'fmul' 'p' <Predicate = true> <Delay = 7.01> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%store_ln31 = store i32 %p, i32 %p_1" [src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 116 'store' 'store_ln31' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 6.43>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%v_2_load = load i32 %v_2" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 117 'load' 'v_2_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "%p_1_load = load i32 %p_1" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 118 'load' 'p_1_load' <Predicate = true> <Delay = 0.00>
ST_9 : [1/1] (0.47ns)   --->   Input mux for Operation 119 '%v_1 = fadd i32 %v_2_load, i32 %p_1_load'
ST_9 : Operation 119 [4/4] (5.96ns)   --->   "%v_1 = fadd i32 %v_2_load, i32 %p_1_load" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 119 'fadd' 'v_1' <Predicate = true> <Delay = 5.96> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.43>
ST_10 : Operation 120 [3/4] (6.43ns)   --->   "%v_1 = fadd i32 %v_2_load, i32 %p_1_load" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 120 'fadd' 'v_1' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.43>
ST_11 : Operation 121 [2/4] (6.43ns)   --->   "%v_1 = fadd i32 %v_2_load, i32 %p_1_load" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 121 'fadd' 'v_1' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.86>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_75_2_VITIS_LOOP_78_3_str"   --->   Operation 122 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 123 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 81, i64 81, i64 81"   --->   Operation 123 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 124 [1/1] (0.00ns)   --->   "%specpipeline_ln79 = specpipeline void @_ssdm_op_SpecPipeline, i32 6, i32 0, i32 0, i32 0, void @empty_0" [src/srcnn.cpp:79->src/srcnn.cpp:147]   --->   Operation 124 'specpipeline' 'specpipeline_ln79' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "%specloopname_ln78 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 125 'specloopname' 'specloopname_ln78' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 126 [1/4] (6.43ns)   --->   "%v_1 = fadd i32 %v_2_load, i32 %p_1_load" [src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 126 'fadd' 'v_1' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 127 [1/1] (0.42ns)   --->   "%store_ln78 = store i32 %v_1, i32 %v_2" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 127 'store' 'store_ln78' <Predicate = true> <Delay = 0.42>
ST_12 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln78 = br void %for.body10.i" [src/srcnn.cpp:78->src/srcnn.cpp:147]   --->   Operation 128 'br' 'br_ln78' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.434ns
The critical path consists of the following:
	'alloca' operation ('ky') [14]  (0.000 ns)
	'load' operation ('ky', src/srcnn.cpp:75->src/srcnn.cpp:147) on local variable 'ky' [35]  (0.000 ns)
	'add' operation ('add_ln75', src/srcnn.cpp:75->src/srcnn.cpp:147) [53]  (0.797 ns)
	'add' operation ('add_ln76_1', src/srcnn.cpp:76->src/srcnn.cpp:147) [66]  (0.787 ns)
	'icmp' operation ('icmp_ln26_1', src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147) [68]  (0.798 ns)
	'or' operation ('or_ln26_1', src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147) [73]  (0.000 ns)
	'select' operation ('select_ln26_3', src/srcnn.cpp:26->src/srcnn.cpp:76->src/srcnn.cpp:147) [74]  (0.000 ns)
	'select' operation ('select_ln75_2', src/srcnn.cpp:75->src/srcnn.cpp:147) [75]  (0.360 ns)
	'add' operation of DSP[104] ('add_ln75_1', src/srcnn.cpp:75->src/srcnn.cpp:147) [76]  (1.696 ns)
	'mul' operation of DSP[104] ('mul_ln78', src/srcnn.cpp:78->src/srcnn.cpp:147) [78]  (0.996 ns)

 <State 2>: 1.237ns
The critical path consists of the following:
	'load' operation ('conv1_weights_load', src/srcnn.cpp:82->src/srcnn.cpp:147) on array 'conv1_weights' [101]  (1.237 ns)

 <State 3>: 0.645ns
The critical path consists of the following:
	'mul' operation of DSP[104] ('mul_ln78', src/srcnn.cpp:78->src/srcnn.cpp:147) [78]  (0.000 ns)
	'add' operation of DSP[104] ('add_ln82_4', src/srcnn.cpp:82->src/srcnn.cpp:147) [104]  (0.645 ns)

 <State 4>: 1.882ns
The critical path consists of the following:
	'add' operation of DSP[104] ('add_ln82_4', src/srcnn.cpp:82->src/srcnn.cpp:147) [104]  (0.645 ns)
	'getelementptr' operation ('patch_addr', src/srcnn.cpp:82->src/srcnn.cpp:147) [106]  (0.000 ns)
	'load' operation ('b', src/srcnn.cpp:82->src/srcnn.cpp:147) on array 'patch' [107]  (1.237 ns)

 <State 5>: 1.237ns
The critical path consists of the following:
	'load' operation ('b', src/srcnn.cpp:82->src/srcnn.cpp:147) on array 'patch' [107]  (1.237 ns)

 <State 6>: 7.016ns
The critical path consists of the following:
	multiplexor before operation 'fmul' with delay (0.476 ns)
'fmul' operation ('p', src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147) [108]  (6.540 ns)

 <State 7>: 7.016ns
The critical path consists of the following:
	'fmul' operation ('p', src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147) [108]  (7.016 ns)

 <State 8>: 7.016ns
The critical path consists of the following:
	'fmul' operation ('p', src/srcnn.cpp:31->src/srcnn.cpp:82->src/srcnn.cpp:147) [108]  (7.016 ns)

 <State 9>: 6.437ns
The critical path consists of the following:
	'load' operation ('v_2_load', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147) on local variable 's' [51]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.476 ns)
'fadd' operation ('v_1', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147) [111]  (5.961 ns)

 <State 10>: 6.437ns
The critical path consists of the following:
	'fadd' operation ('v_1', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147) [111]  (6.437 ns)

 <State 11>: 6.437ns
The critical path consists of the following:
	'fadd' operation ('v_1', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147) [111]  (6.437 ns)

 <State 12>: 6.864ns
The critical path consists of the following:
	'fadd' operation ('v_1', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147) [111]  (6.437 ns)
	'store' operation ('store_ln78', src/srcnn.cpp:78->src/srcnn.cpp:147) of variable 'v_1', src/srcnn.cpp:32->src/srcnn.cpp:82->src/srcnn.cpp:147 on local variable 's' [116]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
