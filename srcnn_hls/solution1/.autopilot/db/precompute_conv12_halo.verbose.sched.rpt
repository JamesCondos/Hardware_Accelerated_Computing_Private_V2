

================================================================
== Vitis HLS Report for 'precompute_conv12_halo'
================================================================
* Date:           Tue Oct 28 14:00:51 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.016 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+------------+-----------+------------+---------+------------+---------+
    |   Latency (cycles)   |   Latency (absolute)   |       Interval       | Pipeline|
    |   min   |     max    |    min    |     max    |   min   |     max    |   Type  |
    +---------+------------+-----------+------------+---------+------------+---------+
    |  1214479|  3258727903|  12.145 ms|  32.587 sec|  1214479|  3258727903|       no|
    +---------+------------+-----------+------------+---------+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------+---------+------------+----------+-----------+-----------+------------+----------+
        |                                     |   Latency (cycles)   | Iteration|  Initiation Interval  |    Trip    |          |
        |              Loop Name              |   min   |     max    |  Latency |  achieved |   target  |    Count   | Pipelined|
        +-------------------------------------+---------+------------+----------+-----------+-----------+------------+----------+
        |- VITIS_LOOP_141_1_VITIS_LOOP_143_2  |  1214475|  3258727899|     48579|          -|          -|  25 ~ 67081|        no|
        | + VITIS_LOOP_73_1                   |    31808|       31808|       497|          -|          -|          64|        no|
        | + VITIS_LOOP_151_3                  |    16768|       16768|       524|          -|          -|          32|        no|
        +-------------------------------------+---------+------------+----------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 10 
7 --> 8 
8 --> 9 
9 --> 6 
10 --> 11 5 
11 --> 10 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.39>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%xi = alloca i32 1"   --->   Operation 12 'alloca' 'xi' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%yi = alloca i32 1"   --->   Operation 13 'alloca' 'yi' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten6 = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tw_eff_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %tw_eff"   --->   Operation 15 'read' 'tw_eff_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%th_eff_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %th_eff"   --->   Operation 16 'read' 'th_eff_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%v_2_loc = alloca i64 1"   --->   Operation 17 'alloca' 'v_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%th_eff_cast = zext i8 %th_eff_read"   --->   Operation 18 'zext' 'th_eff_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tw_eff_cast = zext i8 %tw_eff_read"   --->   Operation 19 'zext' 'tw_eff_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%c1_vec = alloca i64 1" [src/srcnn.cpp:136]   --->   Operation 20 'alloca' 'c1_vec' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 21 [1/1] (0.76ns)   --->   "%add_ln141_1 = add i9 %tw_eff_cast, i9 4" [src/srcnn.cpp:141]   --->   Operation 21 'add' 'add_ln141_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (2.39ns) (grouped into DSP with root node bound4)   --->   "%add_ln141_2 = add i9 %th_eff_cast, i9 4" [src/srcnn.cpp:141]   --->   Operation 22 'add' 'add_ln141_2' <Predicate = true> <Delay = 2.39> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into DSP with root node bound4)   --->   "%cast2 = zext i9 %add_ln141_2" [src/srcnn.cpp:141]   --->   Operation 23 'zext' 'cast2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%cast3 = zext i9 %add_ln141_1" [src/srcnn.cpp:141]   --->   Operation 24 'zext' 'cast3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [4/4] (0.99ns) (root node of the DSP)   --->   "%bound4 = mul i18 %cast2, i18 %cast3" [src/srcnn.cpp:141]   --->   Operation 25 'mul' 'bound4' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln141 = store i17 0, i17 %indvar_flatten6" [src/srcnn.cpp:141]   --->   Operation 26 'store' 'store_ln141' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln141 = store i9 0, i9 %yi" [src/srcnn.cpp:141]   --->   Operation 27 'store' 'store_ln141' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.42ns)   --->   "%store_ln141 = store i9 0, i9 %xi" [src/srcnn.cpp:141]   --->   Operation 28 'store' 'store_ln141' <Predicate = true> <Delay = 0.42>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 29 [3/4] (0.99ns) (root node of the DSP)   --->   "%bound4 = mul i18 %cast2, i18 %cast3" [src/srcnn.cpp:141]   --->   Operation 29 'mul' 'bound4' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 30 [2/4] (0.99ns) (root node of the DSP)   --->   "%bound4 = mul i18 %cast2, i18 %cast3" [src/srcnn.cpp:141]   --->   Operation 30 'mul' 'bound4' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.77>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%w0_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %w0"   --->   Operation 31 'read' 'w0_read' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%h0_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %h0"   --->   Operation 32 'read' 'h0_read' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%w0_cast6 = zext i8 %w0_read"   --->   Operation 33 'zext' 'w0_cast6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%w0_cast4 = zext i8 %w0_read"   --->   Operation 34 'zext' 'w0_cast4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%h0_cast2 = zext i9 %h0_read"   --->   Operation 35 'zext' 'h0_cast2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%empty = trunc i9 %h0_read"   --->   Operation 36 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %conv2_biases, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %conv2_weights, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %conv1_biases, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %conv1_weights, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 40 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.77ns)   --->   "%sub_ln77 = sub i7 6, i7 %empty" [src/srcnn.cpp:77->src/srcnn.cpp:147]   --->   Operation 41 'sub' 'sub_ln77' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.77ns)   --->   "%add_ln142 = add i9 %h0_read, i9 510" [src/srcnn.cpp:142]   --->   Operation 42 'add' 'add_ln142' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln142 = sext i9 %add_ln142" [src/srcnn.cpp:142]   --->   Operation 43 'sext' 'sext_ln142' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.76ns)   --->   "%add_ln144 = add i9 %w0_cast6, i9 510" [src/srcnn.cpp:144]   --->   Operation 44 'add' 'add_ln144' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln144 = sext i9 %add_ln144" [src/srcnn.cpp:144]   --->   Operation 45 'sext' 'sext_ln144' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/4] (0.00ns) (root node of the DSP)   --->   "%bound4 = mul i18 %cast2, i18 %cast3" [src/srcnn.cpp:141]   --->   Operation 46 'mul' 'bound4' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln141 = br void %for.body6" [src/srcnn.cpp:141]   --->   Operation 47 'br' 'br_ln141' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.54>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%yi_1 = load i9 %yi" [src/srcnn.cpp:141]   --->   Operation 48 'load' 'yi_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%indvar_flatten6_load = load i17 %indvar_flatten6" [src/srcnn.cpp:141]   --->   Operation 49 'load' 'indvar_flatten6_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln141_1 = zext i17 %indvar_flatten6_load" [src/srcnn.cpp:141]   --->   Operation 50 'zext' 'zext_ln141_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln141 = zext i9 %yi_1" [src/srcnn.cpp:141]   --->   Operation 51 'zext' 'zext_ln141' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln142 = zext i9 %yi_1" [src/srcnn.cpp:142]   --->   Operation 52 'zext' 'zext_ln142' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.77ns)   --->   "%add_ln142_1 = add i11 %sext_ln142, i11 %zext_ln141" [src/srcnn.cpp:142]   --->   Operation 53 'add' 'add_ln142_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln142_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 54 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.79ns)   --->   "%icmp_ln26_1 = icmp_sgt  i11 %add_ln142_1, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 55 'icmp' 'icmp_ln26_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_4 = add i10 %zext_ln142, i10 1022" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 56 'add' 'add_ln26_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 57 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln26 = add i10 %add_ln26_4, i10 %h0_cast2" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 57 'add' 'add_ln26' <Predicate = true> <Delay = 0.96> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node gyc)   --->   "%select_ln26 = select i1 %tmp_5, i10 0, i10 254" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 58 'select' 'select_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node gyc)   --->   "%or_ln26 = or i1 %tmp_5, i1 %icmp_ln26_1" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 59 'or' 'or_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.40ns) (out node of the LUT)   --->   "%gyc = select i1 %or_ln26, i10 %select_ln26, i10 %add_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 60 'select' 'gyc' <Predicate = true> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.87ns)   --->   "%icmp_ln141 = icmp_eq  i18 %zext_ln141_1, i18 %bound4" [src/srcnn.cpp:141]   --->   Operation 61 'icmp' 'icmp_ln141' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.86ns)   --->   "%add_ln141_4 = add i17 %indvar_flatten6_load, i17 1" [src/srcnn.cpp:141]   --->   Operation 62 'add' 'add_ln141_4' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln141 = br i1 %icmp_ln141, void %for.inc23.loopexit, void %for.end25.loopexit" [src/srcnn.cpp:141]   --->   Operation 63 'br' 'br_ln141' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%xi_load = load i9 %xi" [src/srcnn.cpp:143]   --->   Operation 64 'load' 'xi_load' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.77ns)   --->   "%add_ln141 = add i9 %yi_1, i9 1" [src/srcnn.cpp:141]   --->   Operation 65 'add' 'add_ln141' <Predicate = (!icmp_ln141)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_141_1_VITIS_LOOP_143_2_str"   --->   Operation 66 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 25, i64 67081, i64 0"   --->   Operation 67 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.77ns)   --->   "%icmp_ln143 = icmp_eq  i9 %xi_load, i9 %add_ln141_1" [src/srcnn.cpp:143]   --->   Operation 68 'icmp' 'icmp_ln143' <Predicate = (!icmp_ln141)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.39ns)   --->   "%select_ln141 = select i1 %icmp_ln143, i9 0, i9 %xi_load" [src/srcnn.cpp:141]   --->   Operation 69 'select' 'select_ln141' <Predicate = (!icmp_ln141)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.39ns)   --->   "%select_ln141_1 = select i1 %icmp_ln143, i9 %add_ln141, i9 %yi_1" [src/srcnn.cpp:141]   --->   Operation 70 'select' 'select_ln141_1' <Predicate = (!icmp_ln141)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln141_3 = zext i9 %select_ln141_1" [src/srcnn.cpp:141]   --->   Operation 71 'zext' 'zext_ln141_3' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln141_2 = zext i9 %add_ln141" [src/srcnn.cpp:141]   --->   Operation 72 'zext' 'zext_ln141_2' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln142_1 = zext i9 %add_ln141" [src/srcnn.cpp:142]   --->   Operation 73 'zext' 'zext_ln142_1' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.77ns)   --->   "%add_ln142_2 = add i11 %sext_ln142, i11 %zext_ln141_2" [src/srcnn.cpp:142]   --->   Operation 74 'add' 'add_ln142_2' <Predicate = (!icmp_ln141)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln142_2, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 75 'bitselect' 'tmp_6' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.79ns)   --->   "%icmp_ln26 = icmp_sgt  i11 %add_ln142_2, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 76 'icmp' 'icmp_ln26' <Predicate = (!icmp_ln141)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_6 = add i10 %zext_ln142_1, i10 1022" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 77 'add' 'add_ln26_6' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 78 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln26_7 = add i10 %add_ln26_6, i10 %h0_cast2" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 78 'add' 'add_ln26_7' <Predicate = (!icmp_ln141)> <Delay = 0.96> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln141_2)   --->   "%select_ln26_7 = select i1 %tmp_6, i10 0, i10 254" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 79 'select' 'select_ln26_7' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln141_2)   --->   "%or_ln26_3 = or i1 %tmp_6, i1 %icmp_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 80 'or' 'or_ln26_3' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln141_2)   --->   "%select_ln26_5 = select i1 %or_ln26_3, i10 %select_ln26_7, i10 %add_ln26_7" [src/srcnn.cpp:26->src/srcnn.cpp:142]   --->   Operation 81 'select' 'select_ln26_5' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.40ns) (out node of the LUT)   --->   "%select_ln141_2 = select i1 %icmp_ln143, i10 %select_ln26_5, i10 %gyc" [src/srcnn.cpp:141]   --->   Operation 82 'select' 'select_ln141_2' <Predicate = (!icmp_ln141)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln141 = trunc i10 %select_ln141_2" [src/srcnn.cpp:141]   --->   Operation 83 'trunc' 'trunc_ln141' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.78ns)   --->   "%add_ln141_3 = add i10 %select_ln141_2, i10 1020" [src/srcnn.cpp:141]   --->   Operation 84 'add' 'add_ln141_3' <Predicate = (!icmp_ln141)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln143 = zext i9 %select_ln141" [src/srcnn.cpp:143]   --->   Operation 85 'zext' 'zext_ln143' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln143_1 = zext i9 %select_ln141" [src/srcnn.cpp:143]   --->   Operation 86 'zext' 'zext_ln143_1' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%specloopname_ln143 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [src/srcnn.cpp:143]   --->   Operation 87 'specloopname' 'specloopname_ln143' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.77ns)   --->   "%add_ln144_1 = add i10 %sext_ln144, i10 %zext_ln143_1" [src/srcnn.cpp:144]   --->   Operation 88 'add' 'add_ln144_1' <Predicate = (!icmp_ln141)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node gxc)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i10.i32, i10 %add_ln144_1, i32 9" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 89 'bitselect' 'tmp_7' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.78ns)   --->   "%icmp_ln26_3 = icmp_sgt  i10 %add_ln144_1, i10 254" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 90 'icmp' 'icmp_ln26_3' <Predicate = (!icmp_ln141)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_5 = add i10 %zext_ln143_1, i10 1022" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 91 'add' 'add_ln26_5' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 92 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln26_1 = add i10 %add_ln26_5, i10 %w0_cast4" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 92 'add' 'add_ln26_1' <Predicate = (!icmp_ln141)> <Delay = 0.96> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node gxc)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i10.i32, i10 %add_ln144_1, i32 9" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 93 'bitselect' 'tmp_8' <Predicate = (!icmp_ln141)> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node gxc)   --->   "%select_ln26_8 = select i1 %tmp_8, i10 0, i10 254" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 94 'select' 'select_ln26_8' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node gxc)   --->   "%or_ln26_1 = or i1 %tmp_7, i1 %icmp_ln26_3" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 95 'or' 'or_ln26_1' <Predicate = (!icmp_ln141)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.40ns) (out node of the LUT)   --->   "%gxc = select i1 %or_ln26_1, i10 %select_ln26_8, i10 %add_ln26_1" [src/srcnn.cpp:26->src/srcnn.cpp:144]   --->   Operation 96 'select' 'gxc' <Predicate = (!icmp_ln141)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.42ns)   --->   "%br_ln73 = br void %for.body.i" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 97 'br' 'br_ln73' <Predicate = (!icmp_ln141)> <Delay = 0.42>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%ret_ln157 = ret" [src/srcnn.cpp:157]   --->   Operation 98 'ret' 'ret_ln157' <Predicate = (icmp_ln141)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.23>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%c1 = phi i7 0, void %for.inc23.loopexit, i7 %add_ln73, void %for.body.i.split" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 99 'phi' 'c1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.77ns)   --->   "%icmp_ln73 = icmp_eq  i7 %c1, i7 64" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 100 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 101 [1/1] (0.77ns)   --->   "%add_ln73 = add i7 %c1, i7 1" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 101 'add' 'add_ln73' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %icmp_ln73, void %for.body.i.split, void %for.inc.preheader" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 102 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i7 %c1" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 103 'zext' 'zext_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%conv1_biases_addr = getelementptr i32 %conv1_biases, i64 0, i64 %zext_ln73" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 104 'getelementptr' 'conv1_biases_addr' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_6 : Operation 105 [2/2] (1.23ns)   --->   "%conv1_biases_load = load i6 %conv1_biases_addr" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 105 'load' 'conv1_biases_load' <Predicate = (!icmp_ln73)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_6 : Operation 106 [1/1] (0.42ns)   --->   "%br_ln152 = br void %for.inc" [src/srcnn.cpp:152]   --->   Operation 106 'br' 'br_ln152' <Predicate = (icmp_ln73)> <Delay = 0.42>

State 7 <SV = 6> <Delay = 6.23>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i7 %c1" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 107 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i7.i3, i7 %c1, i3 0" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 108 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln82_5 = zext i10 %tmp" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 109 'zext' 'zext_ln82_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.78ns)   --->   "%add_ln82 = add i11 %zext_ln82_5, i11 %zext_ln82" [src/srcnn.cpp:82->src/srcnn.cpp:147]   --->   Operation 110 'add' 'add_ln82' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/2] (1.23ns)   --->   "%conv1_biases_load = load i6 %conv1_biases_addr" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 111 'load' 'conv1_biases_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%v = bitcast i32 %conv1_biases_load" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 112 'bitcast' 'v' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 113 [2/2] (4.99ns)   --->   "%call_ln74 = call void @precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3, i32 %v, i10 %add_ln141_3, i7 %trunc_ln141, i11 %add_ln82, i7 %sub_ln77, i32 %conv1_weights, i10 %gxc, i10 %gxc, i8 %w0_read, i32 %patch, i32 %v_2_loc" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 113 'call' 'call_ln74' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 114 [1/2] (0.00ns)   --->   "%call_ln74 = call void @precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3, i32 %v, i10 %add_ln141_3, i7 %trunc_ln141, i11 %add_ln82, i7 %sub_ln77, i32 %conv1_weights, i10 %gxc, i10 %gxc, i8 %w0_read, i32 %patch, i32 %v_2_loc" [src/srcnn.cpp:74->src/srcnn.cpp:147]   --->   Operation 114 'call' 'call_ln74' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 3.15>
ST_9 : Operation 115 [1/1] (0.00ns)   --->   "%speclooptripcount_ln73 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 115 'speclooptripcount' 'speclooptripcount_ln73' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (0.00ns)   --->   "%specloopname_ln73 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 116 'specloopname' 'specloopname_ln73' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%v_2_loc_load = load i32 %v_2_loc"   --->   Operation 117 'load' 'v_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "%data = bitcast i32 %v_2_loc_load" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:317->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:22->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 118 'bitcast' 'data' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 119 [1/1] (0.00ns)   --->   "%y_fp_exp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 23, i32 30" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:324->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:22->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 119 'partselect' 'y_fp_exp' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%y_fp_sig = trunc i32 %data" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:325->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:22->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 120 'trunc' 'y_fp_sig' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.76ns)   --->   "%icmp_ln25 = icmp_eq  i8 %y_fp_exp, i8 0" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:25->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 121 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.92ns)   --->   "%icmp_ln25_1 = icmp_eq  i23 %y_fp_sig, i23 0" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:25->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 122 'icmp' 'icmp_ln25_1' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node select_ln25)   --->   "%and_ln25 = and i1 %icmp_ln25, i1 %icmp_ln25_1" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:25->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 123 'and' 'and_ln25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 124 [1/1] (0.76ns)   --->   "%icmp_ln18 = icmp_eq  i8 %y_fp_exp, i8 255" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:28->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 124 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node res_1)   --->   "%xor_ln18 = xor i1 %icmp_ln25_1, i1 1" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:34->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 125 'xor' 'xor_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (1.01ns)   --->   "%ymaggreater = icmp_sgt  i32 %data, i32 0" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:38->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 126 'icmp' 'ymaggreater' <Predicate = true> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node select_ln25)   --->   "%res = select i1 %ymaggreater, i32 %v_2_loc_load, i32 0" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:40->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 127 'select' 'res' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln25 = select i1 %and_ln25, i32 %v_2_loc_load, i32 %res" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:25->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 128 'select' 'select_ln25' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node res_1)   --->   "%and_ln18 = and i1 %icmp_ln18, i1 %xor_ln18" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:34->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 129 'and' 'and_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (0.44ns) (out node of the LUT)   --->   "%res_1 = select i1 %and_ln18, i32 0, i32 %select_ln25" [C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:34->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 130 'select' 'res_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%c1_vec_addr = getelementptr i32 %c1_vec, i64 0, i64 %zext_ln73" [src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 131 'getelementptr' 'c1_vec_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (1.23ns)   --->   "%store_ln85 = store i32 %res_1, i6 %c1_vec_addr" [src/srcnn.cpp:85->src/srcnn.cpp:147]   --->   Operation 132 'store' 'store_ln85' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%br_ln73 = br void %for.body.i" [src/srcnn.cpp:73->src/srcnn.cpp:147]   --->   Operation 133 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>

State 10 <SV = 6> <Delay = 2.81>
ST_10 : Operation 134 [1/1] (0.00ns)   --->   "%n2 = phi i6 %add_ln151, void %for.inc.split, i6 0, void %for.inc.preheader" [src/srcnn.cpp:151]   --->   Operation 134 'phi' 'n2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i6.i6, i6 %n2, i6 0" [src/srcnn.cpp:152]   --->   Operation 135 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln152 = zext i12 %tmp_1" [src/srcnn.cpp:152]   --->   Operation 136 'zext' 'zext_ln152' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i6.i2, i6 %n2, i2 0" [src/srcnn.cpp:152]   --->   Operation 137 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln152_1 = zext i8 %tmp_2" [src/srcnn.cpp:152]   --->   Operation 138 'zext' 'zext_ln152_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln152 = add i13 %zext_ln152, i13 %zext_ln152_1" [src/srcnn.cpp:152]   --->   Operation 139 'add' 'add_ln152' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 140 [1/1] (0.82ns) (root node of TernaryAdder)   --->   "%add_ln152_1 = add i13 %add_ln152, i13 %zext_ln141_3" [src/srcnn.cpp:152]   --->   Operation 140 'add' 'add_ln152_1' <Predicate = true> <Delay = 0.82> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%trunc_ln152 = trunc i13 %add_ln152_1" [src/srcnn.cpp:152]   --->   Operation 141 'trunc' 'trunc_ln152' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%p_shl3 = bitconcatenate i18 @_ssdm_op_BitConcatenate.i18.i12.i6, i12 %trunc_ln152, i6 0" [src/srcnn.cpp:152]   --->   Operation 142 'bitconcatenate' 'p_shl3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns)   --->   "%p_shl4 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i13.i2, i13 %add_ln152_1, i2 0" [src/srcnn.cpp:152]   --->   Operation 143 'bitconcatenate' 'p_shl4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln152_2 = zext i15 %p_shl4" [src/srcnn.cpp:152]   --->   Operation 144 'zext' 'zext_ln152_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 145 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln152_2 = add i18 %p_shl3, i18 %zext_ln152_2" [src/srcnn.cpp:152]   --->   Operation 145 'add' 'add_ln152_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 146 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%add_ln152_3 = add i18 %add_ln152_2, i18 %zext_ln143" [src/srcnn.cpp:152]   --->   Operation 146 'add' 'add_ln152_3' <Predicate = true> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln152_3 = zext i18 %add_ln152_3" [src/srcnn.cpp:152]   --->   Operation 147 'zext' 'zext_ln152_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 148 [1/1] (0.00ns)   --->   "%conv2_buf_addr = getelementptr i32 %conv2_buf, i64 0, i64 %zext_ln152_3" [src/srcnn.cpp:152]   --->   Operation 148 'getelementptr' 'conv2_buf_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.78ns)   --->   "%icmp_ln151 = icmp_eq  i6 %n2, i6 32" [src/srcnn.cpp:151]   --->   Operation 149 'icmp' 'icmp_ln151' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (0.78ns)   --->   "%add_ln151 = add i6 %n2, i6 1" [src/srcnn.cpp:151]   --->   Operation 150 'add' 'add_ln151' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%br_ln151 = br i1 %icmp_ln151, void %for.inc.split, void %for.inc20" [src/srcnn.cpp:151]   --->   Operation 151 'br' 'br_ln151' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln153 = trunc i6 %n2" [src/srcnn.cpp:153]   --->   Operation 152 'trunc' 'trunc_ln153' <Predicate = (!icmp_ln151)> <Delay = 0.00>
ST_10 : Operation 153 [2/2] (2.03ns)   --->   "%tmp1 = call i32 @conv2_single_from_c1, i5 %trunc_ln153, i32 %conv2_weights, i32 %conv2_biases, i32 %c1_vec" [src/srcnn.cpp:153]   --->   Operation 153 'call' 'tmp1' <Predicate = (!icmp_ln151)> <Delay = 2.03> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 154 [1/1] (0.77ns)   --->   "%add_ln143 = add i9 %select_ln141, i9 1" [src/srcnn.cpp:143]   --->   Operation 154 'add' 'add_ln143' <Predicate = (icmp_ln151)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (0.42ns)   --->   "%store_ln143 = store i17 %add_ln141_4, i17 %indvar_flatten6" [src/srcnn.cpp:143]   --->   Operation 155 'store' 'store_ln143' <Predicate = (icmp_ln151)> <Delay = 0.42>
ST_10 : Operation 156 [1/1] (0.42ns)   --->   "%store_ln143 = store i9 %select_ln141_1, i9 %yi" [src/srcnn.cpp:143]   --->   Operation 156 'store' 'store_ln143' <Predicate = (icmp_ln151)> <Delay = 0.42>
ST_10 : Operation 157 [1/1] (0.42ns)   --->   "%store_ln143 = store i9 %add_ln143, i9 %xi" [src/srcnn.cpp:143]   --->   Operation 157 'store' 'store_ln143' <Predicate = (icmp_ln151)> <Delay = 0.42>
ST_10 : Operation 158 [1/1] (0.00ns)   --->   "%br_ln143 = br void %for.body6" [src/srcnn.cpp:143]   --->   Operation 158 'br' 'br_ln143' <Predicate = (icmp_ln151)> <Delay = 0.00>

State 11 <SV = 7> <Delay = 3.15>
ST_11 : Operation 159 [1/1] (0.00ns)   --->   "%speclooptripcount_ln151 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32" [src/srcnn.cpp:151]   --->   Operation 159 'speclooptripcount' 'speclooptripcount_ln151' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "%specloopname_ln151 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [src/srcnn.cpp:151]   --->   Operation 160 'specloopname' 'specloopname_ln151' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 161 [1/2] (1.91ns)   --->   "%tmp1 = call i32 @conv2_single_from_c1, i5 %trunc_ln153, i32 %conv2_weights, i32 %conv2_biases, i32 %c1_vec" [src/srcnn.cpp:153]   --->   Operation 161 'call' 'tmp1' <Predicate = true> <Delay = 1.91> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 162 [1/1] (1.23ns)   --->   "%store_ln152 = store i32 %tmp1, i18 %conv2_buf_addr" [src/srcnn.cpp:152]   --->   Operation 162 'store' 'store_ln152' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 147968> <RAM>
ST_11 : Operation 163 [1/1] (0.00ns)   --->   "%br_ln151 = br void %for.inc" [src/srcnn.cpp:151]   --->   Operation 163 'br' 'br_ln151' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.392ns
The critical path consists of the following:
	wire read operation ('th_eff_read') on port 'th_eff' [15]  (0.000 ns)
	'add' operation of DSP[39] ('add_ln141_2', src/srcnn.cpp:141) [32]  (2.396 ns)
	'mul' operation of DSP[39] ('bound4', src/srcnn.cpp:141) [39]  (0.996 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[39] ('bound4', src/srcnn.cpp:141) [39]  (0.996 ns)

 <State 3>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[39] ('bound4', src/srcnn.cpp:141) [39]  (0.996 ns)

 <State 4>: 0.776ns
The critical path consists of the following:
	wire read operation ('h0_read') on port 'h0' [17]  (0.000 ns)
	'add' operation ('add_ln142', src/srcnn.cpp:142) [33]  (0.776 ns)

 <State 5>: 3.540ns
The critical path consists of the following:
	'load' operation ('yi', src/srcnn.cpp:141) on local variable 'yi' [45]  (0.000 ns)
	'add' operation ('add_ln141', src/srcnn.cpp:141) [63]  (0.776 ns)
	'add' operation ('add_ln142_2', src/srcnn.cpp:142) [72]  (0.776 ns)
	'icmp' operation ('icmp_ln26', src/srcnn.cpp:26->src/srcnn.cpp:142) [74]  (0.798 ns)
	'or' operation ('or_ln26_3', src/srcnn.cpp:26->src/srcnn.cpp:142) [78]  (0.000 ns)
	'select' operation ('select_ln26_5', src/srcnn.cpp:26->src/srcnn.cpp:142) [79]  (0.000 ns)
	'select' operation ('select_ln141_2', src/srcnn.cpp:141) [80]  (0.403 ns)
	'add' operation ('add_ln141_3', src/srcnn.cpp:141) [82]  (0.787 ns)

 <State 6>: 1.237ns
The critical path consists of the following:
	'phi' operation ('c1', src/srcnn.cpp:73->src/srcnn.cpp:147) with incoming values : ('add_ln73', src/srcnn.cpp:73->src/srcnn.cpp:147) [97]  (0.000 ns)
	'getelementptr' operation ('conv1_biases_addr', src/srcnn.cpp:74->src/srcnn.cpp:147) [109]  (0.000 ns)
	'load' operation ('conv1_biases_load', src/srcnn.cpp:74->src/srcnn.cpp:147) on array 'conv1_biases' [110]  (1.237 ns)

 <State 7>: 6.234ns
The critical path consists of the following:
	'load' operation ('conv1_biases_load', src/srcnn.cpp:74->src/srcnn.cpp:147) on array 'conv1_biases' [110]  (1.237 ns)
	'call' operation ('call_ln74', src/srcnn.cpp:74->src/srcnn.cpp:147) to 'precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3' [112]  (4.997 ns)

 <State 8>: 0.000ns
The critical path consists of the following:

 <State 9>: 3.151ns
The critical path consists of the following:
	'load' operation ('v_2_loc_load') on local variable 'v_2_loc' [113]  (0.000 ns)
	'icmp' operation ('ymaggreater', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:38->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147) [122]  (1.016 ns)
	'select' operation ('res', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:40->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147) [123]  (0.000 ns)
	'select' operation ('select_ln25', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:25->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147) [124]  (0.449 ns)
	'select' operation ('res', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:34->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147) [126]  (0.449 ns)
	'store' operation ('store_ln85', src/srcnn.cpp:85->src/srcnn.cpp:147) of variable 'res', C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_isnan.h:18->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib/hlsmath/include/FloatingPoint\hls_fmax.h:34->C:\scratch\2023.1\hls_product\1026\2023.1\src\shared\hls\clib\hlsmath\src\c\fmaxfloat.cpp:7->src/srcnn.cpp:85->src/srcnn.cpp:147 on array 'c1_vec', src/srcnn.cpp:136 [128]  (1.237 ns)

 <State 10>: 2.816ns
The critical path consists of the following:
	'phi' operation ('n2', src/srcnn.cpp:151) with incoming values : ('add_ln151', src/srcnn.cpp:151) [133]  (0.000 ns)
	'call' operation ('tmp1', src/srcnn.cpp:153) to 'conv2_single_from_c1' [155]  (2.035 ns)
	blocking operation 0.781 ns on control path)

 <State 11>: 3.151ns
The critical path consists of the following:
	'call' operation ('tmp1', src/srcnn.cpp:153) to 'conv2_single_from_c1' [155]  (1.914 ns)
	'store' operation ('store_ln152', src/srcnn.cpp:152) of variable 'tmp1', src/srcnn.cpp:153 on array 'conv2_buf' [156]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
