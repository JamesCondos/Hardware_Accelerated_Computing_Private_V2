

================================================================
== Vitis HLS Report for 'load_patch_tile_Pipeline_VITIS_LOOP_50_1_VITIS_LOOP_51_2'
================================================================
* Date:           Tue Oct 28 14:00:49 2025

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.661 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   | min |  max  |   Type  |
    +---------+---------+----------+----------+-----+-------+---------+
    |      173|    71293|  1.730 us|  0.713 ms|  173|  71293|       no|
    +---------+---------+----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |     Trip    |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  |    Count    | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------------+----------+
        |- VITIS_LOOP_50_1_VITIS_LOOP_51_2  |      171|    71291|         4|          1|          1|  169 ~ 71289|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%px = alloca i32 1"   --->   Operation 7 'alloca' 'px' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%py = alloca i32 1"   --->   Operation 8 'alloca' 'py' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%w0_cast3_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %w0_cast3"   --->   Operation 10 'read' 'w0_cast3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln50_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %zext_ln50"   --->   Operation 11 'read' 'zext_ln50_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%add_ln50_1_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %add_ln50_1"   --->   Operation 12 'read' 'add_ln50_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%bound_read = read i17 @_ssdm_op_Read.ap_auto.i17, i17 %bound"   --->   Operation 13 'read' 'bound_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%h0_cast_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %h0_cast"   --->   Operation 14 'read' 'h0_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_cast_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %tmp_cast"   --->   Operation 15 'read' 'tmp_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%w0_cast3_cast = zext i8 %w0_cast3_read"   --->   Operation 16 'zext' 'w0_cast3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln50_cast = zext i8 %zext_ln50_read"   --->   Operation 17 'zext' 'zext_ln50_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_cast_cast = sext i9 %tmp_cast_read"   --->   Operation 18 'sext' 'tmp_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_ftmap, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.42ns)   --->   "%store_ln0 = store i17 0, i17 %indvar_flatten"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 21 [1/1] (0.42ns)   --->   "%store_ln0 = store i9 0, i9 %py"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i9 0, i9 %px"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.74>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%py_1 = load i9 %py"   --->   Operation 24 'load' 'py_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i17 %indvar_flatten" [src/srcnn.cpp:50]   --->   Operation 25 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i9 %py_1" [src/srcnn.cpp:50]   --->   Operation 26 'zext' 'zext_ln50_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty = trunc i9 %py_1"   --->   Operation 27 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.77ns)   --->   "%empty_21 = add i11 %tmp_cast_cast, i11 %zext_ln50_1" [src/srcnn.cpp:50]   --->   Operation 28 'add' 'empty_21' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %empty_21, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 29 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.79ns)   --->   "%icmp_ln26 = icmp_sgt  i11 %empty_21, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 30 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_8 = add i8 %empty, i8 250" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 31 'add' 'add_ln26_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 32 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%add_ln26 = add i8 %add_ln26_8, i8 %h0_cast_read" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 32 'add' 'add_ln26' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node yy)   --->   "%select_ln26 = select i1 %tmp, i8 0, i8 254" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 33 'select' 'select_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node yy)   --->   "%or_ln26 = or i1 %tmp, i1 %icmp_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 34 'or' 'or_ln26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.39ns) (out node of the LUT)   --->   "%yy = select i1 %or_ln26, i8 %select_ln26, i8 %add_ln26" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 35 'select' 'yy' <Predicate = true> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.86ns)   --->   "%icmp_ln50 = icmp_eq  i17 %indvar_flatten_load, i17 %bound_read" [src/srcnn.cpp:50]   --->   Operation 36 'icmp' 'icmp_ln50' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.86ns)   --->   "%add_ln50_2 = add i17 %indvar_flatten_load, i17 1" [src/srcnn.cpp:50]   --->   Operation 37 'add' 'add_ln50_2' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln50 = br i1 %icmp_ln50, void %for.inc17.loopexit, void %for.end19.loopexit.exitStub" [src/srcnn.cpp:50]   --->   Operation 38 'br' 'br_ln50' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%px_load = load i9 %px" [src/srcnn.cpp:51]   --->   Operation 39 'load' 'px_load' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.77ns)   --->   "%add_ln50 = add i9 %py_1, i9 1" [src/srcnn.cpp:50]   --->   Operation 40 'add' 'add_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.77ns)   --->   "%icmp_ln51 = icmp_eq  i9 %px_load, i9 %add_ln50_1_read" [src/srcnn.cpp:51]   --->   Operation 41 'icmp' 'icmp_ln51' <Predicate = (!icmp_ln50)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.39ns)   --->   "%select_ln50 = select i1 %icmp_ln51, i9 0, i9 %px_load" [src/srcnn.cpp:50]   --->   Operation 42 'select' 'select_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.39ns)   --->   "%select_ln50_1 = select i1 %icmp_ln51, i9 %add_ln50, i9 %py_1" [src/srcnn.cpp:50]   --->   Operation 43 'select' 'select_ln50_1' <Predicate = (!icmp_ln50)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i9 %select_ln50_1" [src/srcnn.cpp:50]   --->   Operation 44 'zext' 'zext_ln50_2' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 45 [3/3] (0.99ns) (grouped into DSP with root node add_ln56)   --->   "%mul_ln50 = mul i13 %zext_ln50_2, i13 76" [src/srcnn.cpp:50]   --->   Operation 45 'mul' 'mul_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i9 %add_ln50" [src/srcnn.cpp:50]   --->   Operation 46 'zext' 'zext_ln50_3' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty_22 = trunc i9 %add_ln50" [src/srcnn.cpp:50]   --->   Operation 47 'trunc' 'empty_22' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.77ns)   --->   "%p_mid1 = add i11 %tmp_cast_cast, i11 %zext_ln50_3" [src/srcnn.cpp:50]   --->   Operation 48 'add' 'p_mid1' <Predicate = (!icmp_ln50)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %p_mid1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 49 'bitselect' 'tmp_9' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.79ns)   --->   "%icmp_ln26_4 = icmp_sgt  i11 %p_mid1, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 50 'icmp' 'icmp_ln26_4' <Predicate = (!icmp_ln50)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln26_10 = add i8 %empty_22, i8 250" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 51 'add' 'add_ln26_10' <Predicate = (!icmp_ln50)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 52 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%add_ln26_11 = add i8 %add_ln26_10, i8 %h0_cast_read" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 52 'add' 'add_ln26_11' <Predicate = (!icmp_ln50)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln50_2)   --->   "%select_ln26_11 = select i1 %tmp_9, i8 0, i8 254" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 53 'select' 'select_ln26_11' <Predicate = (!icmp_ln50)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.17> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln50_2)   --->   "%or_ln26_5 = or i1 %tmp_9, i1 %icmp_ln26_4" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 54 'or' 'or_ln26_5' <Predicate = (!icmp_ln50)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln50_2)   --->   "%select_ln26_12 = select i1 %or_ln26_5, i8 %select_ln26_11, i8 %add_ln26_11" [src/srcnn.cpp:26->src/srcnn.cpp:53]   --->   Operation 55 'select' 'select_ln26_12' <Predicate = (!icmp_ln50)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.39ns) (out node of the LUT)   --->   "%select_ln50_2 = select i1 %icmp_ln51, i8 %select_ln26_12, i8 %yy" [src/srcnn.cpp:50]   --->   Operation 56 'select' 'select_ln50_2' <Predicate = (!icmp_ln50)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.77ns)   --->   "%add_ln51 = add i9 %select_ln50, i9 1" [src/srcnn.cpp:51]   --->   Operation 57 'add' 'add_ln51' <Predicate = (!icmp_ln50)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.42ns)   --->   "%store_ln51 = store i17 %add_ln50_2, i17 %indvar_flatten" [src/srcnn.cpp:51]   --->   Operation 58 'store' 'store_ln51' <Predicate = (!icmp_ln50)> <Delay = 0.42>
ST_2 : Operation 59 [1/1] (0.42ns)   --->   "%store_ln51 = store i9 %select_ln50_1, i9 %py" [src/srcnn.cpp:51]   --->   Operation 59 'store' 'store_ln51' <Predicate = (!icmp_ln50)> <Delay = 0.42>
ST_2 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln51 = store i9 %add_ln51, i9 %px" [src/srcnn.cpp:51]   --->   Operation 60 'store' 'store_ln51' <Predicate = (!icmp_ln50)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 61 [2/3] (0.99ns) (grouped into DSP with root node add_ln56)   --->   "%mul_ln50 = mul i13 %zext_ln50_2, i13 76" [src/srcnn.cpp:50]   --->   Operation 61 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 4.66>
ST_4 : Operation 62 [1/3] (0.00ns) (grouped into DSP with root node add_ln56)   --->   "%mul_ln50 = mul i13 %zext_ln50_2, i13 76" [src/srcnn.cpp:50]   --->   Operation 62 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln56 = zext i8 %select_ln50_2" [src/srcnn.cpp:56]   --->   Operation 63 'zext' 'zext_ln56' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_6 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %select_ln50_2, i8 0" [src/srcnn.cpp:56]   --->   Operation 64 'bitconcatenate' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln56 = sub i16 %tmp_6, i16 %zext_ln56" [src/srcnn.cpp:56]   --->   Operation 65 'sub' 'sub_ln56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln56_1 = zext i9 %select_ln50" [src/srcnn.cpp:56]   --->   Operation 66 'zext' 'zext_ln56_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln56 = add i13 %mul_ln50, i13 %zext_ln56_1" [src/srcnn.cpp:56]   --->   Operation 67 'add' 'add_ln56' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i9 %select_ln50" [src/srcnn.cpp:51]   --->   Operation 68 'zext' 'zext_ln51' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i9 %select_ln50" [src/srcnn.cpp:54]   --->   Operation 69 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.76ns)   --->   "%add_ln54 = add i9 %zext_ln50_cast, i9 506" [src/srcnn.cpp:54]   --->   Operation 70 'add' 'add_ln54' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%sext_ln54 = sext i9 %add_ln54" [src/srcnn.cpp:54]   --->   Operation 71 'sext' 'sext_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.77ns)   --->   "%add_ln54_1 = add i11 %sext_ln54, i11 %zext_ln51" [src/srcnn.cpp:54]   --->   Operation 72 'add' 'add_ln54_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node xx)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln54_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 73 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.79ns)   --->   "%icmp_ln26_5 = icmp_sgt  i11 %add_ln54_1, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 74 'icmp' 'icmp_ln26_5' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.77ns)   --->   "%add_ln26_9 = add i10 %zext_ln54, i10 1018" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 75 'add' 'add_ln26_9' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%sext_ln26 = sext i10 %add_ln26_9" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 76 'sext' 'sext_ln26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.78ns)   --->   "%add_ln26_4 = add i11 %sext_ln26, i11 %w0_cast3_cast" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 77 'add' 'add_ln26_4' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node xx)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %add_ln54_1, i32 10" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 78 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xx)   --->   "%select_ln26_13 = select i1 %tmp_11, i11 0, i11 254" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 79 'select' 'select_ln26_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node xx)   --->   "%or_ln26_4 = or i1 %tmp_10, i1 %icmp_ln26_5" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 80 'or' 'or_ln26_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (0.39ns) (out node of the LUT)   --->   "%xx = select i1 %or_ln26_4, i11 %select_ln26_13, i11 %add_ln26_4" [src/srcnn.cpp:26->src/srcnn.cpp:54]   --->   Operation 81 'select' 'xx' <Predicate = true> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%sext_ln56 = sext i11 %xx" [src/srcnn.cpp:56]   --->   Operation 82 'sext' 'sext_ln56' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.68ns) (root node of TernaryAdder)   --->   "%add_ln56_1 = add i16 %sub_ln56, i16 %sext_ln56" [src/srcnn.cpp:56]   --->   Operation 83 'add' 'add_ln56_1' <Predicate = true> <Delay = 0.68> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln56_3 = zext i16 %add_ln56_1" [src/srcnn.cpp:56]   --->   Operation 84 'zext' 'zext_ln56_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%input_ftmap_addr = getelementptr i32 %input_ftmap, i64 0, i64 %zext_ln56_3" [src/srcnn.cpp:56]   --->   Operation 85 'getelementptr' 'input_ftmap_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [2/2] (1.23ns)   --->   "%input_ftmap_load = load i16 %input_ftmap_addr" [src/srcnn.cpp:56]   --->   Operation 86 'load' 'input_ftmap_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 65025> <RAM>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 98 'ret' 'ret_ln0' <Predicate = (icmp_ln50)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.47>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_50_1_VITIS_LOOP_51_2_str"   --->   Operation 87 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 169, i64 71289, i64 0"   --->   Operation 88 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln56 = add i13 %mul_ln50, i13 %zext_ln56_1" [src/srcnn.cpp:56]   --->   Operation 89 'add' 'add_ln56' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln56_2 = zext i13 %add_ln56" [src/srcnn.cpp:56]   --->   Operation 90 'zext' 'zext_ln56_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%patch_addr = getelementptr i32 %patch, i64 0, i64 %zext_ln56_2" [src/srcnn.cpp:56]   --->   Operation 91 'getelementptr' 'patch_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%specpipeline_ln52 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [src/srcnn.cpp:52]   --->   Operation 92 'specpipeline' 'specpipeline_ln52' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%specloopname_ln51 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [src/srcnn.cpp:51]   --->   Operation 93 'specloopname' 'specloopname_ln51' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/2] (1.23ns)   --->   "%input_ftmap_load = load i16 %input_ftmap_addr" [src/srcnn.cpp:56]   --->   Operation 94 'load' 'input_ftmap_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 65025> <RAM>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%bitcast_ln56 = bitcast i32 %input_ftmap_load" [src/srcnn.cpp:56]   --->   Operation 95 'bitcast' 'bitcast_ln56' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (1.23ns)   --->   "%store_ln56 = store i32 %bitcast_ln56, i13 %patch_addr" [src/srcnn.cpp:56]   --->   Operation 96 'store' 'store_ln56' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5776> <RAM>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln51 = br void %for.inc" [src/srcnn.cpp:51]   --->   Operation 97 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [11]  (0.000 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten' [22]  (0.427 ns)

 <State 2>: 2.743ns
The critical path consists of the following:
	'load' operation ('py') on local variable 'py' [27]  (0.000 ns)
	'add' operation ('add_ln50', src/srcnn.cpp:50) [44]  (0.776 ns)
	'add' operation ('p_mid1', src/srcnn.cpp:50) [54]  (0.776 ns)
	'icmp' operation ('icmp_ln26_4', src/srcnn.cpp:26->src/srcnn.cpp:53) [56]  (0.798 ns)
	'or' operation ('or_ln26_5', src/srcnn.cpp:26->src/srcnn.cpp:53) [60]  (0.000 ns)
	'select' operation ('select_ln26_12', src/srcnn.cpp:26->src/srcnn.cpp:53) [61]  (0.000 ns)
	'select' operation ('select_ln50_2', src/srcnn.cpp:50) [62]  (0.393 ns)

 <State 3>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[67] ('mul_ln50', src/srcnn.cpp:50) [51]  (0.996 ns)

 <State 4>: 4.661ns
The critical path consists of the following:
	'add' operation ('add_ln54', src/srcnn.cpp:54) [74]  (0.765 ns)
	'add' operation ('add_ln54_1', src/srcnn.cpp:54) [76]  (0.776 ns)
	'icmp' operation ('icmp_ln26_5', src/srcnn.cpp:26->src/srcnn.cpp:54) [78]  (0.798 ns)
	'or' operation ('or_ln26_4', src/srcnn.cpp:26->src/srcnn.cpp:54) [84]  (0.000 ns)
	'select' operation ('xx', src/srcnn.cpp:26->src/srcnn.cpp:54) [85]  (0.398 ns)
	'add' operation ('add_ln56_1', src/srcnn.cpp:56) [87]  (0.687 ns)
	'getelementptr' operation ('input_ftmap_addr', src/srcnn.cpp:56) [89]  (0.000 ns)
	'load' operation ('input_ftmap_load', src/srcnn.cpp:56) on array 'input_ftmap' [90]  (1.237 ns)

 <State 5>: 2.474ns
The critical path consists of the following:
	'load' operation ('input_ftmap_load', src/srcnn.cpp:56) on array 'input_ftmap' [90]  (1.237 ns)
	'store' operation ('store_ln56', src/srcnn.cpp:56) of variable 'bitcast_ln56', src/srcnn.cpp:56 on array 'patch' [92]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
