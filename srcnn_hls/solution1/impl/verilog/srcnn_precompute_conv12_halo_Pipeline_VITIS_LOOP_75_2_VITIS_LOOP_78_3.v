// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v,
        sext_ln141,
        trunc_ln142_mid2,
        add_ln82,
        sub_ln77,
        conv1_weights_address0,
        conv1_weights_ce0,
        conv1_weights_q0,
        gxc,
        sext_ln144_1,
        w0_cast6,
        patch_address0,
        patch_ce0,
        patch_q0,
        v_2_out,
        v_2_out_ap_vld,
        grp_fu_1021_p_din0,
        grp_fu_1021_p_din1,
        grp_fu_1021_p_opcode,
        grp_fu_1021_p_dout0,
        grp_fu_1021_p_ce,
        grp_fu_1025_p_din0,
        grp_fu_1025_p_din1,
        grp_fu_1025_p_dout0,
        grp_fu_1025_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v;
input  [9:0] sext_ln141;
input  [6:0] trunc_ln142_mid2;
input  [10:0] add_ln82;
input  [6:0] sub_ln77;
output  [12:0] conv1_weights_address0;
output   conv1_weights_ce0;
input  [31:0] conv1_weights_q0;
input  [9:0] gxc;
input  [9:0] sext_ln144_1;
input  [7:0] w0_cast6;
output  [12:0] patch_address0;
output   patch_ce0;
input  [31:0] patch_q0;
output  [31:0] v_2_out;
output   v_2_out_ap_vld;
output  [31:0] grp_fu_1021_p_din0;
output  [31:0] grp_fu_1021_p_din1;
output  [1:0] grp_fu_1021_p_opcode;
input  [31:0] grp_fu_1021_p_dout0;
output   grp_fu_1021_p_ce;
output  [31:0] grp_fu_1025_p_din0;
output  [31:0] grp_fu_1025_p_din1;
input  [31:0] grp_fu_1025_p_dout0;
output   grp_fu_1025_p_ce;

reg ap_idle;
reg conv1_weights_ce0;
reg patch_ce0;
reg v_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state12_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln75_reg_665;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln75_fu_309_p2;
wire   [10:0] px_fu_559_p2;
reg  signed [10:0] px_reg_674;
reg   [31:0] conv1_weights_load_reg_679;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] patch_load_reg_694;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] bitcast_ln82_fu_593_p1;
wire    ap_block_pp0_stage5_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln82_3_fu_464_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln82_4_fu_589_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] v_2_fu_100;
wire    ap_block_pp0_stage5;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [3:0] kx_fu_104;
wire   [3:0] add_ln78_fu_565_p2;
reg   [3:0] ap_sig_allocacmp_kx_load;
reg   [3:0] ky_fu_108;
wire   [3:0] select_ln75_1_fu_344_p3;
reg   [3:0] ap_sig_allocacmp_ky_1;
reg   [6:0] indvar_flatten_fu_112;
wire   [6:0] add_ln75_2_fu_315_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] p_1_fu_116;
wire    ap_block_pp0_stage5_01001;
wire  signed [10:0] sext_ln141_cast_fu_217_p1;
wire   [10:0] zext_ln75_fu_247_p1;
wire   [10:0] add_ln76_fu_251_p2;
wire   [3:0] add_ln26_fu_271_p2;
wire  signed [6:0] sext_ln26_fu_277_p1;
wire   [0:0] tmp_fu_257_p3;
wire   [0:0] icmp_ln26_fu_265_p2;
wire   [0:0] or_ln26_fu_295_p2;
wire   [6:0] select_ln26_fu_287_p3;
wire   [6:0] add_ln26_1_fu_281_p2;
wire   [0:0] icmp_ln78_fu_330_p2;
wire   [3:0] add_ln75_fu_324_p2;
wire   [10:0] zext_ln82_fu_352_p1;
wire   [10:0] add_ln82_1_fu_356_p2;
wire   [9:0] trunc_ln82_fu_366_p1;
wire   [12:0] p_shl2_fu_370_p3;
wire   [12:0] zext_ln82_1_fu_362_p1;
wire   [10:0] zext_ln75_1_fu_384_p1;
wire   [10:0] add_ln76_1_fu_388_p2;
wire   [3:0] add_ln26_2_fu_408_p2;
wire  signed [6:0] sext_ln26_2_fu_414_p1;
wire   [0:0] tmp_2_fu_394_p3;
wire   [0:0] icmp_ln26_1_fu_402_p2;
wire   [0:0] or_ln26_1_fu_432_p2;
wire   [6:0] select_ln26_2_fu_424_p3;
wire   [6:0] add_ln26_4_fu_418_p2;
wire   [6:0] select_ln26_3_fu_438_p3;
wire   [6:0] gh_fu_301_p3;
wire   [3:0] select_ln75_fu_336_p3;
wire   [12:0] add_ln82_2_fu_378_p2;
wire   [12:0] zext_ln82_2_fu_454_p1;
wire   [12:0] add_ln82_3_fu_458_p2;
wire   [9:0] add_ln80_fu_473_p2;
wire  signed [10:0] sext_ln80_fu_479_p1;
wire   [10:0] zext_ln78_1_fu_469_p1;
wire   [10:0] add_ln80_1_fu_483_p2;
wire   [3:0] add_ln26_5_fu_503_p2;
wire  signed [10:0] sext_ln26_1_fu_509_p1;
wire  signed [10:0] sext_ln144_1_cast_fu_213_p1;
wire   [0:0] tmp_4_fu_519_p3;
wire   [0:0] tmp_3_fu_489_p3;
wire   [0:0] icmp_ln26_2_fu_497_p2;
wire   [0:0] or_ln26_2_fu_535_p2;
wire   [10:0] select_ln26_4_fu_527_p3;
wire   [10:0] add_ln26_3_fu_513_p2;
wire   [8:0] w0_cast6_cast_fu_209_p1;
wire   [8:0] sub_ln81_fu_549_p2;
wire  signed [10:0] sext_ln81_fu_555_p1;
wire   [10:0] gw_fu_541_p3;
wire  signed [12:0] zext_ln82_4_fu_589_p0;
wire   [12:0] grp_fu_619_p4;
wire   [6:0] grp_fu_619_p1;
wire   [6:0] grp_fu_619_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage2_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_ama_addmuladd_7ns_7ns_7ns_11s_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 11 ),
    .dout_WIDTH( 13 ))
ama_addmuladd_7ns_7ns_7ns_11s_13_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln77),
    .din1(grp_fu_619_p1),
    .din2(grp_fu_619_p2),
    .din3(px_reg_674),
    .ce(1'b1),
    .dout(grp_fu_619_p4)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln75_fu_309_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_112 <= add_ln75_2_fu_315_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_112 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln75_fu_309_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            kx_fu_104 <= add_ln78_fu_565_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            kx_fu_104 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln75_fu_309_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ky_fu_108 <= select_ln75_1_fu_344_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ky_fu_108 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        v_2_fu_100 <= v;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v_2_fu_100 <= grp_fu_1021_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_665 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_weights_load_reg_679 <= conv1_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln75_reg_665 <= icmp_ln75_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_1_fu_116 <= grp_fu_1025_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_665 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        patch_load_reg_694 <= patch_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_309_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        px_reg_674 <= px_fu_559_p2;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_665 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_kx_load = 4'd0;
    end else begin
        ap_sig_allocacmp_kx_load = kx_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ky_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_ky_1 = ky_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_weights_ce0 = 1'b1;
    end else begin
        conv1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        patch_ce0 = 1'b1;
    end else begin
        patch_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_665 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v_2_out_ap_vld = 1'b1;
    end else begin
        v_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_1_fu_281_p2 = ($signed(sext_ln26_fu_277_p1) + $signed(trunc_ln142_mid2));

assign add_ln26_2_fu_408_p2 = ($signed(ap_sig_allocacmp_ky_1) + $signed(4'd13));

assign add_ln26_3_fu_513_p2 = ($signed(sext_ln26_1_fu_509_p1) + $signed(sext_ln144_1_cast_fu_213_p1));

assign add_ln26_4_fu_418_p2 = ($signed(sext_ln26_2_fu_414_p1) + $signed(trunc_ln142_mid2));

assign add_ln26_5_fu_503_p2 = ($signed(select_ln75_fu_336_p3) + $signed(4'd12));

assign add_ln26_fu_271_p2 = ($signed(ap_sig_allocacmp_ky_1) + $signed(4'd12));

assign add_ln75_2_fu_315_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln75_fu_324_p2 = (ap_sig_allocacmp_ky_1 + 4'd1);

assign add_ln76_1_fu_388_p2 = ($signed(sext_ln141_cast_fu_217_p1) + $signed(zext_ln75_1_fu_384_p1));

assign add_ln76_fu_251_p2 = ($signed(sext_ln141_cast_fu_217_p1) + $signed(zext_ln75_fu_247_p1));

assign add_ln78_fu_565_p2 = (select_ln75_fu_336_p3 + 4'd1);

assign add_ln80_1_fu_483_p2 = ($signed(sext_ln80_fu_479_p1) + $signed(zext_ln78_1_fu_469_p1));

assign add_ln80_fu_473_p2 = ($signed(gxc) + $signed(10'd1020));

assign add_ln82_1_fu_356_p2 = (add_ln82 + zext_ln82_fu_352_p1);

assign add_ln82_2_fu_378_p2 = (p_shl2_fu_370_p3 + zext_ln82_1_fu_362_p1);

assign add_ln82_3_fu_458_p2 = (add_ln82_2_fu_378_p2 + zext_ln82_2_fu_454_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign bitcast_ln82_fu_593_p1 = conv1_weights_load_reg_679;

assign conv1_weights_address0 = zext_ln82_3_fu_464_p1;

assign gh_fu_301_p3 = ((or_ln26_fu_295_p2[0:0] == 1'b1) ? select_ln26_fu_287_p3 : add_ln26_1_fu_281_p2);

assign grp_fu_1021_p_ce = 1'b1;

assign grp_fu_1021_p_din0 = v_2_fu_100;

assign grp_fu_1021_p_din1 = p_1_fu_116;

assign grp_fu_1021_p_opcode = 2'd0;

assign grp_fu_1025_p_ce = 1'b1;

assign grp_fu_1025_p_din0 = bitcast_ln82_fu_593_p1;

assign grp_fu_1025_p_din1 = patch_load_reg_694;

assign grp_fu_619_p1 = ((icmp_ln78_fu_330_p2[0:0] == 1'b1) ? select_ln26_3_fu_438_p3 : gh_fu_301_p3);

assign grp_fu_619_p2 = 13'd76;

assign gw_fu_541_p3 = ((or_ln26_2_fu_535_p2[0:0] == 1'b1) ? select_ln26_4_fu_527_p3 : add_ln26_3_fu_513_p2);

assign icmp_ln26_1_fu_402_p2 = (($signed(add_ln76_1_fu_388_p2) > $signed(11'd254)) ? 1'b1 : 1'b0);

assign icmp_ln26_2_fu_497_p2 = (($signed(add_ln80_1_fu_483_p2) > $signed(11'd254)) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_265_p2 = (($signed(add_ln76_fu_251_p2) > $signed(11'd254)) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_309_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd81) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_330_p2 = ((ap_sig_allocacmp_kx_load == 4'd9) ? 1'b1 : 1'b0);

assign or_ln26_1_fu_432_p2 = (tmp_2_fu_394_p3 | icmp_ln26_1_fu_402_p2);

assign or_ln26_2_fu_535_p2 = (tmp_3_fu_489_p3 | icmp_ln26_2_fu_497_p2);

assign or_ln26_fu_295_p2 = (tmp_fu_257_p3 | icmp_ln26_fu_265_p2);

assign p_shl2_fu_370_p3 = {{trunc_ln82_fu_366_p1}, {3'd0}};

assign patch_address0 = zext_ln82_4_fu_589_p1;

assign px_fu_559_p2 = ($signed(sext_ln81_fu_555_p1) + $signed(gw_fu_541_p3));

assign select_ln26_2_fu_424_p3 = ((tmp_2_fu_394_p3[0:0] == 1'b1) ? 7'd0 : 7'd126);

assign select_ln26_3_fu_438_p3 = ((or_ln26_1_fu_432_p2[0:0] == 1'b1) ? select_ln26_2_fu_424_p3 : add_ln26_4_fu_418_p2);

assign select_ln26_4_fu_527_p3 = ((tmp_4_fu_519_p3[0:0] == 1'b1) ? 11'd0 : 11'd254);

assign select_ln26_fu_287_p3 = ((tmp_fu_257_p3[0:0] == 1'b1) ? 7'd0 : 7'd126);

assign select_ln75_1_fu_344_p3 = ((icmp_ln78_fu_330_p2[0:0] == 1'b1) ? add_ln75_fu_324_p2 : ap_sig_allocacmp_ky_1);

assign select_ln75_fu_336_p3 = ((icmp_ln78_fu_330_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_kx_load);

assign sext_ln141_cast_fu_217_p1 = $signed(sext_ln141);

assign sext_ln144_1_cast_fu_213_p1 = $signed(sext_ln144_1);

assign sext_ln26_1_fu_509_p1 = $signed(add_ln26_5_fu_503_p2);

assign sext_ln26_2_fu_414_p1 = $signed(add_ln26_2_fu_408_p2);

assign sext_ln26_fu_277_p1 = $signed(add_ln26_fu_271_p2);

assign sext_ln80_fu_479_p1 = $signed(add_ln80_fu_473_p2);

assign sext_ln81_fu_555_p1 = $signed(sub_ln81_fu_549_p2);

assign sub_ln81_fu_549_p2 = (9'd6 - w0_cast6_cast_fu_209_p1);

assign tmp_2_fu_394_p3 = add_ln76_1_fu_388_p2[32'd10];

assign tmp_3_fu_489_p3 = add_ln80_1_fu_483_p2[32'd10];

assign tmp_4_fu_519_p3 = add_ln80_1_fu_483_p2[32'd10];

assign tmp_fu_257_p3 = add_ln76_fu_251_p2[32'd10];

assign trunc_ln82_fu_366_p1 = add_ln82_1_fu_356_p2[9:0];

assign v_2_out = v_2_fu_100;

assign w0_cast6_cast_fu_209_p1 = w0_cast6;

assign zext_ln75_1_fu_384_p1 = add_ln75_fu_324_p2;

assign zext_ln75_fu_247_p1 = ap_sig_allocacmp_ky_1;

assign zext_ln78_1_fu_469_p1 = select_ln75_fu_336_p3;

assign zext_ln82_1_fu_362_p1 = add_ln82_1_fu_356_p2;

assign zext_ln82_2_fu_454_p1 = select_ln75_fu_336_p3;

assign zext_ln82_3_fu_464_p1 = add_ln82_3_fu_458_p2;

assign zext_ln82_4_fu_589_p0 = grp_fu_619_p4;

assign zext_ln82_4_fu_589_p1 = $unsigned(zext_ln82_4_fu_589_p0);

assign zext_ln82_fu_352_p1 = select_ln75_1_fu_344_p3;

endmodule //srcnn_precompute_conv12_halo_Pipeline_VITIS_LOOP_75_2_VITIS_LOOP_78_3
