// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_STREAM_OUT_CONV2_VITIS_LOOP_372_7_VITIS_LOOP_373_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_to_conv3_din,
        conv2_to_conv3_num_data_valid,
        conv2_to_conv3_fifo_cap,
        conv2_to_conv3_full_n,
        conv2_to_conv3_write,
        layer2_output_tile_address0,
        layer2_output_tile_ce0,
        layer2_output_tile_q0,
        layer2_output_tile_1_address0,
        layer2_output_tile_1_ce0,
        layer2_output_tile_1_q0,
        layer2_output_tile_2_address0,
        layer2_output_tile_2_ce0,
        layer2_output_tile_2_q0,
        layer2_output_tile_3_address0,
        layer2_output_tile_3_ce0,
        layer2_output_tile_3_q0,
        layer2_output_tile_4_address0,
        layer2_output_tile_4_ce0,
        layer2_output_tile_4_q0,
        layer2_output_tile_5_address0,
        layer2_output_tile_5_ce0,
        layer2_output_tile_5_q0,
        layer2_output_tile_6_address0,
        layer2_output_tile_6_ce0,
        layer2_output_tile_6_q0,
        layer2_output_tile_7_address0,
        layer2_output_tile_7_ce0,
        layer2_output_tile_7_q0,
        layer2_output_tile_8_address0,
        layer2_output_tile_8_ce0,
        layer2_output_tile_8_q0,
        layer2_output_tile_9_address0,
        layer2_output_tile_9_ce0,
        layer2_output_tile_9_q0,
        layer2_output_tile_10_address0,
        layer2_output_tile_10_ce0,
        layer2_output_tile_10_q0,
        layer2_output_tile_11_address0,
        layer2_output_tile_11_ce0,
        layer2_output_tile_11_q0,
        layer2_output_tile_12_address0,
        layer2_output_tile_12_ce0,
        layer2_output_tile_12_q0,
        layer2_output_tile_13_address0,
        layer2_output_tile_13_ce0,
        layer2_output_tile_13_q0,
        layer2_output_tile_14_address0,
        layer2_output_tile_14_ce0,
        layer2_output_tile_14_q0,
        layer2_output_tile_15_address0,
        layer2_output_tile_15_ce0,
        layer2_output_tile_15_q0,
        layer2_output_tile_16_address0,
        layer2_output_tile_16_ce0,
        layer2_output_tile_16_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] conv2_to_conv3_din;
input  [9:0] conv2_to_conv3_num_data_valid;
input  [9:0] conv2_to_conv3_fifo_cap;
input   conv2_to_conv3_full_n;
output   conv2_to_conv3_write;
output  [9:0] layer2_output_tile_address0;
output   layer2_output_tile_ce0;
input  [31:0] layer2_output_tile_q0;
output  [9:0] layer2_output_tile_1_address0;
output   layer2_output_tile_1_ce0;
input  [31:0] layer2_output_tile_1_q0;
output  [9:0] layer2_output_tile_2_address0;
output   layer2_output_tile_2_ce0;
input  [31:0] layer2_output_tile_2_q0;
output  [9:0] layer2_output_tile_3_address0;
output   layer2_output_tile_3_ce0;
input  [31:0] layer2_output_tile_3_q0;
output  [9:0] layer2_output_tile_4_address0;
output   layer2_output_tile_4_ce0;
input  [31:0] layer2_output_tile_4_q0;
output  [9:0] layer2_output_tile_5_address0;
output   layer2_output_tile_5_ce0;
input  [31:0] layer2_output_tile_5_q0;
output  [9:0] layer2_output_tile_6_address0;
output   layer2_output_tile_6_ce0;
input  [31:0] layer2_output_tile_6_q0;
output  [9:0] layer2_output_tile_7_address0;
output   layer2_output_tile_7_ce0;
input  [31:0] layer2_output_tile_7_q0;
output  [9:0] layer2_output_tile_8_address0;
output   layer2_output_tile_8_ce0;
input  [31:0] layer2_output_tile_8_q0;
output  [9:0] layer2_output_tile_9_address0;
output   layer2_output_tile_9_ce0;
input  [31:0] layer2_output_tile_9_q0;
output  [9:0] layer2_output_tile_10_address0;
output   layer2_output_tile_10_ce0;
input  [31:0] layer2_output_tile_10_q0;
output  [9:0] layer2_output_tile_11_address0;
output   layer2_output_tile_11_ce0;
input  [31:0] layer2_output_tile_11_q0;
output  [9:0] layer2_output_tile_12_address0;
output   layer2_output_tile_12_ce0;
input  [31:0] layer2_output_tile_12_q0;
output  [9:0] layer2_output_tile_13_address0;
output   layer2_output_tile_13_ce0;
input  [31:0] layer2_output_tile_13_q0;
output  [9:0] layer2_output_tile_14_address0;
output   layer2_output_tile_14_ce0;
input  [31:0] layer2_output_tile_14_q0;
output  [9:0] layer2_output_tile_15_address0;
output   layer2_output_tile_15_ce0;
input  [31:0] layer2_output_tile_15_q0;
output  [9:0] layer2_output_tile_16_address0;
output   layer2_output_tile_16_ce0;
input  [31:0] layer2_output_tile_16_q0;

reg ap_idle;
reg conv2_to_conv3_write;
reg layer2_output_tile_ce0;
reg layer2_output_tile_1_ce0;
reg layer2_output_tile_2_ce0;
reg layer2_output_tile_3_ce0;
reg layer2_output_tile_4_ce0;
reg layer2_output_tile_5_ce0;
reg layer2_output_tile_6_ce0;
reg layer2_output_tile_7_ce0;
reg layer2_output_tile_8_ce0;
reg layer2_output_tile_9_ce0;
reg layer2_output_tile_10_ce0;
reg layer2_output_tile_11_ce0;
reg layer2_output_tile_12_ce0;
reg layer2_output_tile_13_ce0;
reg layer2_output_tile_14_ce0;
reg layer2_output_tile_15_ce0;
reg layer2_output_tile_16_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln371_fu_382_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv2_to_conv3_blk_n;
wire    ap_block_pp0_stage0;
wire   [4:0] select_ln372_fu_482_p3;
reg   [4:0] select_ln372_reg_656;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln374_2_fu_508_p1;
reg   [4:0] j_fu_106;
wire   [4:0] add_ln373_fu_529_p2;
wire    ap_loop_init;
reg   [4:0] i_3_fu_110;
wire   [4:0] select_ln372_1_fu_490_p3;
reg   [9:0] indvar_flatten132_fu_114;
wire   [9:0] select_ln372_2_fu_541_p3;
reg   [5:0] feat_fu_118;
wire   [5:0] select_ln371_1_fu_426_p3;
reg   [13:0] indvar_flatten145_fu_122;
wire   [13:0] add_ln371_1_fu_388_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln372_fu_412_p2;
wire   [5:0] add_ln371_fu_406_p2;
wire   [9:0] tmp_s_fu_438_p3;
wire   [9:0] zext_ln374_fu_434_p1;
wire   [0:0] icmp_ln373_fu_458_p2;
wire   [0:0] xor_ln371_fu_452_p2;
wire   [4:0] select_ln371_fu_418_p3;
wire   [0:0] and_ln371_fu_464_p2;
wire   [0:0] or_ln372_fu_476_p2;
wire   [4:0] add_ln372_fu_470_p2;
wire   [9:0] add_ln374_fu_446_p2;
wire   [9:0] zext_ln374_1_fu_498_p1;
wire   [9:0] add_ln374_1_fu_502_p2;
wire   [9:0] add_ln372_1_fu_535_p2;
wire   [31:0] tmp_1_fu_574_p19;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_17_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_17_5_32_1_1_U1879(
    .din0(layer2_output_tile_q0),
    .din1(layer2_output_tile_1_q0),
    .din2(layer2_output_tile_2_q0),
    .din3(layer2_output_tile_3_q0),
    .din4(layer2_output_tile_4_q0),
    .din5(layer2_output_tile_5_q0),
    .din6(layer2_output_tile_6_q0),
    .din7(layer2_output_tile_7_q0),
    .din8(layer2_output_tile_8_q0),
    .din9(layer2_output_tile_9_q0),
    .din10(layer2_output_tile_10_q0),
    .din11(layer2_output_tile_11_q0),
    .din12(layer2_output_tile_12_q0),
    .din13(layer2_output_tile_13_q0),
    .din14(layer2_output_tile_14_q0),
    .din15(layer2_output_tile_15_q0),
    .din16(layer2_output_tile_16_q0),
    .din17(select_ln372_reg_656),
    .dout(tmp_1_fu_574_p19)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            feat_fu_118 <= 6'd0;
        end else if (((icmp_ln371_fu_382_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            feat_fu_118 <= select_ln371_1_fu_426_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_3_fu_110 <= 5'd0;
        end else if (((icmp_ln371_fu_382_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_3_fu_110 <= select_ln372_1_fu_490_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten132_fu_114 <= 10'd0;
        end else if (((icmp_ln371_fu_382_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten132_fu_114 <= select_ln372_2_fu_541_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten145_fu_122 <= 14'd0;
        end else if (((icmp_ln371_fu_382_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten145_fu_122 <= add_ln371_1_fu_388_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_106 <= 5'd0;
        end else if (((icmp_ln371_fu_382_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_106 <= add_ln373_fu_529_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln371_fu_382_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln372_reg_656 <= select_ln372_fu_482_p3;
    end
end

always @ (*) begin
    if (((icmp_ln371_fu_382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv2_to_conv3_blk_n = conv2_to_conv3_full_n;
    end else begin
        conv2_to_conv3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv2_to_conv3_write = 1'b1;
    end else begin
        conv2_to_conv3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_10_ce0 = 1'b1;
    end else begin
        layer2_output_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_11_ce0 = 1'b1;
    end else begin
        layer2_output_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_12_ce0 = 1'b1;
    end else begin
        layer2_output_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_13_ce0 = 1'b1;
    end else begin
        layer2_output_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_14_ce0 = 1'b1;
    end else begin
        layer2_output_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_15_ce0 = 1'b1;
    end else begin
        layer2_output_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_16_ce0 = 1'b1;
    end else begin
        layer2_output_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_1_ce0 = 1'b1;
    end else begin
        layer2_output_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_2_ce0 = 1'b1;
    end else begin
        layer2_output_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_3_ce0 = 1'b1;
    end else begin
        layer2_output_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_4_ce0 = 1'b1;
    end else begin
        layer2_output_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_5_ce0 = 1'b1;
    end else begin
        layer2_output_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_6_ce0 = 1'b1;
    end else begin
        layer2_output_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_7_ce0 = 1'b1;
    end else begin
        layer2_output_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_8_ce0 = 1'b1;
    end else begin
        layer2_output_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_9_ce0 = 1'b1;
    end else begin
        layer2_output_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_ce0 = 1'b1;
    end else begin
        layer2_output_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln371_1_fu_388_p2 = (indvar_flatten145_fu_122 + 14'd1);

assign add_ln371_fu_406_p2 = (feat_fu_118 + 6'd1);

assign add_ln372_1_fu_535_p2 = (indvar_flatten132_fu_114 + 10'd1);

assign add_ln372_fu_470_p2 = (select_ln371_fu_418_p3 + 5'd1);

assign add_ln373_fu_529_p2 = (select_ln372_fu_482_p3 + 5'd1);

assign add_ln374_1_fu_502_p2 = (add_ln374_fu_446_p2 + zext_ln374_1_fu_498_p1);

assign add_ln374_fu_446_p2 = (tmp_s_fu_438_p3 + zext_ln374_fu_434_p1);

assign and_ln371_fu_464_p2 = (xor_ln371_fu_452_p2 & icmp_ln373_fu_458_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((conv2_to_conv3_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((conv2_to_conv3_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((conv2_to_conv3_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (conv2_to_conv3_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign conv2_to_conv3_din = tmp_1_fu_574_p19;

assign icmp_ln371_fu_382_p2 = ((indvar_flatten145_fu_122 == 14'd9248) ? 1'b1 : 1'b0);

assign icmp_ln372_fu_412_p2 = ((indvar_flatten132_fu_114 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln373_fu_458_p2 = ((j_fu_106 == 5'd17) ? 1'b1 : 1'b0);

assign layer2_output_tile_10_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_11_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_12_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_13_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_14_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_15_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_16_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_1_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_2_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_3_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_4_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_5_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_6_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_7_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_8_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_9_address0 = zext_ln374_2_fu_508_p1;

assign layer2_output_tile_address0 = zext_ln374_2_fu_508_p1;

assign or_ln372_fu_476_p2 = (icmp_ln372_fu_412_p2 | and_ln371_fu_464_p2);

assign select_ln371_1_fu_426_p3 = ((icmp_ln372_fu_412_p2[0:0] == 1'b1) ? add_ln371_fu_406_p2 : feat_fu_118);

assign select_ln371_fu_418_p3 = ((icmp_ln372_fu_412_p2[0:0] == 1'b1) ? 5'd0 : i_3_fu_110);

assign select_ln372_1_fu_490_p3 = ((and_ln371_fu_464_p2[0:0] == 1'b1) ? add_ln372_fu_470_p2 : select_ln371_fu_418_p3);

assign select_ln372_2_fu_541_p3 = ((icmp_ln372_fu_412_p2[0:0] == 1'b1) ? 10'd1 : add_ln372_1_fu_535_p2);

assign select_ln372_fu_482_p3 = ((or_ln372_fu_476_p2[0:0] == 1'b1) ? 5'd0 : j_fu_106);

assign tmp_s_fu_438_p3 = {{select_ln371_1_fu_426_p3}, {4'd0}};

assign xor_ln371_fu_452_p2 = (icmp_ln372_fu_412_p2 ^ 1'd1);

assign zext_ln374_1_fu_498_p1 = select_ln372_1_fu_490_p3;

assign zext_ln374_2_fu_508_p1 = add_ln374_1_fu_502_p2;

assign zext_ln374_fu_434_p1 = select_ln371_1_fu_426_p3;

endmodule //srcnn_conv2_Pipeline_STREAM_OUT_CONV2_VITIS_LOOP_372_7_VITIS_LOOP_373_8
