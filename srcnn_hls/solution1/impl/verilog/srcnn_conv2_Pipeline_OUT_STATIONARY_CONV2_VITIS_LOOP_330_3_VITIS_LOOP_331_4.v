// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_OUT_STATIONARY_CONV2_VITIS_LOOP_330_3_VITIS_LOOP_331_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_biases_address0,
        conv2_biases_ce0,
        conv2_biases_q0,
        layer2_output_tile_address0,
        layer2_output_tile_ce0,
        layer2_output_tile_we0,
        layer2_output_tile_d0,
        layer2_output_tile_1_address0,
        layer2_output_tile_1_ce0,
        layer2_output_tile_1_we0,
        layer2_output_tile_1_d0,
        layer2_output_tile_2_address0,
        layer2_output_tile_2_ce0,
        layer2_output_tile_2_we0,
        layer2_output_tile_2_d0,
        layer2_output_tile_3_address0,
        layer2_output_tile_3_ce0,
        layer2_output_tile_3_we0,
        layer2_output_tile_3_d0,
        layer2_output_tile_4_address0,
        layer2_output_tile_4_ce0,
        layer2_output_tile_4_we0,
        layer2_output_tile_4_d0,
        layer2_output_tile_5_address0,
        layer2_output_tile_5_ce0,
        layer2_output_tile_5_we0,
        layer2_output_tile_5_d0,
        layer2_output_tile_6_address0,
        layer2_output_tile_6_ce0,
        layer2_output_tile_6_we0,
        layer2_output_tile_6_d0,
        layer2_output_tile_7_address0,
        layer2_output_tile_7_ce0,
        layer2_output_tile_7_we0,
        layer2_output_tile_7_d0,
        layer2_output_tile_8_address0,
        layer2_output_tile_8_ce0,
        layer2_output_tile_8_we0,
        layer2_output_tile_8_d0,
        layer2_output_tile_9_address0,
        layer2_output_tile_9_ce0,
        layer2_output_tile_9_we0,
        layer2_output_tile_9_d0,
        layer2_output_tile_10_address0,
        layer2_output_tile_10_ce0,
        layer2_output_tile_10_we0,
        layer2_output_tile_10_d0,
        layer2_output_tile_11_address0,
        layer2_output_tile_11_ce0,
        layer2_output_tile_11_we0,
        layer2_output_tile_11_d0,
        layer2_output_tile_12_address0,
        layer2_output_tile_12_ce0,
        layer2_output_tile_12_we0,
        layer2_output_tile_12_d0,
        layer2_output_tile_13_address0,
        layer2_output_tile_13_ce0,
        layer2_output_tile_13_we0,
        layer2_output_tile_13_d0,
        layer2_output_tile_14_address0,
        layer2_output_tile_14_ce0,
        layer2_output_tile_14_we0,
        layer2_output_tile_14_d0,
        layer2_output_tile_15_address0,
        layer2_output_tile_15_ce0,
        layer2_output_tile_15_we0,
        layer2_output_tile_15_d0,
        layer2_output_tile_16_address0,
        layer2_output_tile_16_ce0,
        layer2_output_tile_16_we0,
        layer2_output_tile_16_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] conv2_biases_address0;
output   conv2_biases_ce0;
input  [31:0] conv2_biases_q0;
output  [9:0] layer2_output_tile_address0;
output   layer2_output_tile_ce0;
output   layer2_output_tile_we0;
output  [31:0] layer2_output_tile_d0;
output  [9:0] layer2_output_tile_1_address0;
output   layer2_output_tile_1_ce0;
output   layer2_output_tile_1_we0;
output  [31:0] layer2_output_tile_1_d0;
output  [9:0] layer2_output_tile_2_address0;
output   layer2_output_tile_2_ce0;
output   layer2_output_tile_2_we0;
output  [31:0] layer2_output_tile_2_d0;
output  [9:0] layer2_output_tile_3_address0;
output   layer2_output_tile_3_ce0;
output   layer2_output_tile_3_we0;
output  [31:0] layer2_output_tile_3_d0;
output  [9:0] layer2_output_tile_4_address0;
output   layer2_output_tile_4_ce0;
output   layer2_output_tile_4_we0;
output  [31:0] layer2_output_tile_4_d0;
output  [9:0] layer2_output_tile_5_address0;
output   layer2_output_tile_5_ce0;
output   layer2_output_tile_5_we0;
output  [31:0] layer2_output_tile_5_d0;
output  [9:0] layer2_output_tile_6_address0;
output   layer2_output_tile_6_ce0;
output   layer2_output_tile_6_we0;
output  [31:0] layer2_output_tile_6_d0;
output  [9:0] layer2_output_tile_7_address0;
output   layer2_output_tile_7_ce0;
output   layer2_output_tile_7_we0;
output  [31:0] layer2_output_tile_7_d0;
output  [9:0] layer2_output_tile_8_address0;
output   layer2_output_tile_8_ce0;
output   layer2_output_tile_8_we0;
output  [31:0] layer2_output_tile_8_d0;
output  [9:0] layer2_output_tile_9_address0;
output   layer2_output_tile_9_ce0;
output   layer2_output_tile_9_we0;
output  [31:0] layer2_output_tile_9_d0;
output  [9:0] layer2_output_tile_10_address0;
output   layer2_output_tile_10_ce0;
output   layer2_output_tile_10_we0;
output  [31:0] layer2_output_tile_10_d0;
output  [9:0] layer2_output_tile_11_address0;
output   layer2_output_tile_11_ce0;
output   layer2_output_tile_11_we0;
output  [31:0] layer2_output_tile_11_d0;
output  [9:0] layer2_output_tile_12_address0;
output   layer2_output_tile_12_ce0;
output   layer2_output_tile_12_we0;
output  [31:0] layer2_output_tile_12_d0;
output  [9:0] layer2_output_tile_13_address0;
output   layer2_output_tile_13_ce0;
output   layer2_output_tile_13_we0;
output  [31:0] layer2_output_tile_13_d0;
output  [9:0] layer2_output_tile_14_address0;
output   layer2_output_tile_14_ce0;
output   layer2_output_tile_14_we0;
output  [31:0] layer2_output_tile_14_d0;
output  [9:0] layer2_output_tile_15_address0;
output   layer2_output_tile_15_ce0;
output   layer2_output_tile_15_we0;
output  [31:0] layer2_output_tile_15_d0;
output  [9:0] layer2_output_tile_16_address0;
output   layer2_output_tile_16_ce0;
output   layer2_output_tile_16_we0;
output  [31:0] layer2_output_tile_16_d0;

reg ap_idle;
reg conv2_biases_ce0;
reg layer2_output_tile_ce0;
reg layer2_output_tile_we0;
reg layer2_output_tile_1_ce0;
reg layer2_output_tile_1_we0;
reg layer2_output_tile_2_ce0;
reg layer2_output_tile_2_we0;
reg layer2_output_tile_3_ce0;
reg layer2_output_tile_3_we0;
reg layer2_output_tile_4_ce0;
reg layer2_output_tile_4_we0;
reg layer2_output_tile_5_ce0;
reg layer2_output_tile_5_we0;
reg layer2_output_tile_6_ce0;
reg layer2_output_tile_6_we0;
reg layer2_output_tile_7_ce0;
reg layer2_output_tile_7_we0;
reg layer2_output_tile_8_ce0;
reg layer2_output_tile_8_we0;
reg layer2_output_tile_9_ce0;
reg layer2_output_tile_9_we0;
reg layer2_output_tile_10_ce0;
reg layer2_output_tile_10_we0;
reg layer2_output_tile_11_ce0;
reg layer2_output_tile_11_we0;
reg layer2_output_tile_12_ce0;
reg layer2_output_tile_12_we0;
reg layer2_output_tile_13_ce0;
reg layer2_output_tile_13_we0;
reg layer2_output_tile_14_ce0;
reg layer2_output_tile_14_we0;
reg layer2_output_tile_15_ce0;
reg layer2_output_tile_15_we0;
reg layer2_output_tile_16_ce0;
reg layer2_output_tile_16_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln329_fu_424_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln330_fu_445_p2;
reg   [0:0] icmp_ln330_reg_651;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] select_ln329_1_fu_451_p3;
reg   [5:0] select_ln329_1_reg_658;
wire   [63:0] zext_ln329_fu_459_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln333_2_fu_576_p1;
reg   [4:0] j_fu_122;
wire   [4:0] add_ln331_fu_597_p2;
wire    ap_loop_init;
reg   [4:0] i_2_fu_126;
wire   [4:0] select_ln330_1_fu_558_p3;
reg   [9:0] indvar_flatten53_fu_130;
wire   [9:0] select_ln330_2_fu_470_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten53_load;
reg   [5:0] out_feat_fu_134;
reg   [5:0] ap_sig_allocacmp_out_feat_load;
reg   [13:0] indvar_flatten67_fu_138;
wire   [13:0] add_ln329_1_fu_430_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten67_load;
wire   [4:0] select_ln330_fu_550_p3;
wire   [5:0] add_ln329_fu_439_p2;
wire   [9:0] add_ln330_1_fu_464_p2;
wire   [9:0] tmp_s_fu_509_p3;
wire   [9:0] zext_ln333_fu_506_p1;
wire   [0:0] icmp_ln331_fu_527_p2;
wire   [0:0] xor_ln329_fu_522_p2;
wire   [4:0] select_ln329_fu_499_p3;
wire   [0:0] and_ln329_fu_533_p2;
wire   [0:0] or_ln330_fu_545_p2;
wire   [4:0] add_ln330_fu_539_p2;
wire   [9:0] add_ln333_fu_516_p2;
wire   [9:0] zext_ln333_1_fu_566_p1;
wire   [9:0] add_ln333_1_fu_570_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_2_fu_126 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i_2_fu_126 <= select_ln330_1_fu_558_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln329_fu_424_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten53_fu_130 <= select_ln330_2_fu_470_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten53_fu_130 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln329_fu_424_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten67_fu_138 <= add_ln329_1_fu_430_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten67_fu_138 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_122 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_122 <= add_ln331_fu_597_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln329_fu_424_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            out_feat_fu_134 <= select_ln329_1_fu_451_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            out_feat_fu_134 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_424_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln330_reg_651 <= icmp_ln330_fu_445_p2;
        select_ln329_1_reg_658 <= select_ln329_1_fu_451_p3;
    end
end

always @ (*) begin
    if (((icmp_ln329_fu_424_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten53_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten53_load = indvar_flatten53_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten67_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten67_load = indvar_flatten67_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_feat_load = 6'd0;
    end else begin
        ap_sig_allocacmp_out_feat_load = out_feat_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_biases_ce0 = 1'b1;
    end else begin
        conv2_biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_10_ce0 = 1'b1;
    end else begin
        layer2_output_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_10_we0 = 1'b1;
    end else begin
        layer2_output_tile_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_11_ce0 = 1'b1;
    end else begin
        layer2_output_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_11_we0 = 1'b1;
    end else begin
        layer2_output_tile_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_12_ce0 = 1'b1;
    end else begin
        layer2_output_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_12_we0 = 1'b1;
    end else begin
        layer2_output_tile_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_13_ce0 = 1'b1;
    end else begin
        layer2_output_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_13_we0 = 1'b1;
    end else begin
        layer2_output_tile_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_14_ce0 = 1'b1;
    end else begin
        layer2_output_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_14_we0 = 1'b1;
    end else begin
        layer2_output_tile_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_15_ce0 = 1'b1;
    end else begin
        layer2_output_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_15_we0 = 1'b1;
    end else begin
        layer2_output_tile_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_16_ce0 = 1'b1;
    end else begin
        layer2_output_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln330_fu_550_p3 == 5'd0) & ~(select_ln330_fu_550_p3 == 5'd1) & ~(select_ln330_fu_550_p3 == 5'd2) & ~(select_ln330_fu_550_p3 == 5'd3) & ~(select_ln330_fu_550_p3 == 5'd4) & ~(select_ln330_fu_550_p3 == 5'd5) & ~(select_ln330_fu_550_p3 == 5'd6) & ~(select_ln330_fu_550_p3 == 5'd7) & ~(select_ln330_fu_550_p3 == 5'd8) & ~(select_ln330_fu_550_p3 == 5'd9) & ~(select_ln330_fu_550_p3 == 5'd10) & ~(select_ln330_fu_550_p3 == 5'd11) & ~(select_ln330_fu_550_p3 == 5'd12) & ~(select_ln330_fu_550_p3 == 5'd13) & ~(select_ln330_fu_550_p3 == 5'd14) & ~(select_ln330_fu_550_p3 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_16_we0 = 1'b1;
    end else begin
        layer2_output_tile_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_1_ce0 = 1'b1;
    end else begin
        layer2_output_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_1_we0 = 1'b1;
    end else begin
        layer2_output_tile_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_2_ce0 = 1'b1;
    end else begin
        layer2_output_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_2_we0 = 1'b1;
    end else begin
        layer2_output_tile_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_3_ce0 = 1'b1;
    end else begin
        layer2_output_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_3_we0 = 1'b1;
    end else begin
        layer2_output_tile_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_4_ce0 = 1'b1;
    end else begin
        layer2_output_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_4_we0 = 1'b1;
    end else begin
        layer2_output_tile_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_5_ce0 = 1'b1;
    end else begin
        layer2_output_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_5_we0 = 1'b1;
    end else begin
        layer2_output_tile_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_6_ce0 = 1'b1;
    end else begin
        layer2_output_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_6_we0 = 1'b1;
    end else begin
        layer2_output_tile_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_7_ce0 = 1'b1;
    end else begin
        layer2_output_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_7_we0 = 1'b1;
    end else begin
        layer2_output_tile_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_8_ce0 = 1'b1;
    end else begin
        layer2_output_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_8_we0 = 1'b1;
    end else begin
        layer2_output_tile_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_9_ce0 = 1'b1;
    end else begin
        layer2_output_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_9_we0 = 1'b1;
    end else begin
        layer2_output_tile_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_ce0 = 1'b1;
    end else begin
        layer2_output_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln330_fu_550_p3 == 5'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_we0 = 1'b1;
    end else begin
        layer2_output_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln329_1_fu_430_p2 = (ap_sig_allocacmp_indvar_flatten67_load + 14'd1);

assign add_ln329_fu_439_p2 = (ap_sig_allocacmp_out_feat_load + 6'd1);

assign add_ln330_1_fu_464_p2 = (ap_sig_allocacmp_indvar_flatten53_load + 10'd1);

assign add_ln330_fu_539_p2 = (select_ln329_fu_499_p3 + 5'd1);

assign add_ln331_fu_597_p2 = (select_ln330_fu_550_p3 + 5'd1);

assign add_ln333_1_fu_570_p2 = (add_ln333_fu_516_p2 + zext_ln333_1_fu_566_p1);

assign add_ln333_fu_516_p2 = (tmp_s_fu_509_p3 + zext_ln333_fu_506_p1);

assign and_ln329_fu_533_p2 = (xor_ln329_fu_522_p2 & icmp_ln331_fu_527_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv2_biases_address0 = zext_ln329_fu_459_p1;

assign icmp_ln329_fu_424_p2 = ((ap_sig_allocacmp_indvar_flatten67_load == 14'd9248) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_445_p2 = ((ap_sig_allocacmp_indvar_flatten53_load == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_527_p2 = ((j_fu_122 == 5'd17) ? 1'b1 : 1'b0);

assign layer2_output_tile_10_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_10_d0 = conv2_biases_q0;

assign layer2_output_tile_11_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_11_d0 = conv2_biases_q0;

assign layer2_output_tile_12_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_12_d0 = conv2_biases_q0;

assign layer2_output_tile_13_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_13_d0 = conv2_biases_q0;

assign layer2_output_tile_14_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_14_d0 = conv2_biases_q0;

assign layer2_output_tile_15_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_15_d0 = conv2_biases_q0;

assign layer2_output_tile_16_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_16_d0 = conv2_biases_q0;

assign layer2_output_tile_1_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_1_d0 = conv2_biases_q0;

assign layer2_output_tile_2_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_2_d0 = conv2_biases_q0;

assign layer2_output_tile_3_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_3_d0 = conv2_biases_q0;

assign layer2_output_tile_4_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_4_d0 = conv2_biases_q0;

assign layer2_output_tile_5_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_5_d0 = conv2_biases_q0;

assign layer2_output_tile_6_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_6_d0 = conv2_biases_q0;

assign layer2_output_tile_7_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_7_d0 = conv2_biases_q0;

assign layer2_output_tile_8_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_8_d0 = conv2_biases_q0;

assign layer2_output_tile_9_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_9_d0 = conv2_biases_q0;

assign layer2_output_tile_address0 = zext_ln333_2_fu_576_p1;

assign layer2_output_tile_d0 = conv2_biases_q0;

assign or_ln330_fu_545_p2 = (icmp_ln330_reg_651 | and_ln329_fu_533_p2);

assign select_ln329_1_fu_451_p3 = ((icmp_ln330_fu_445_p2[0:0] == 1'b1) ? add_ln329_fu_439_p2 : ap_sig_allocacmp_out_feat_load);

assign select_ln329_fu_499_p3 = ((icmp_ln330_reg_651[0:0] == 1'b1) ? 5'd0 : i_2_fu_126);

assign select_ln330_1_fu_558_p3 = ((and_ln329_fu_533_p2[0:0] == 1'b1) ? add_ln330_fu_539_p2 : select_ln329_fu_499_p3);

assign select_ln330_2_fu_470_p3 = ((icmp_ln330_fu_445_p2[0:0] == 1'b1) ? 10'd1 : add_ln330_1_fu_464_p2);

assign select_ln330_fu_550_p3 = ((or_ln330_fu_545_p2[0:0] == 1'b1) ? 5'd0 : j_fu_122);

assign tmp_s_fu_509_p3 = {{select_ln329_1_reg_658}, {4'd0}};

assign xor_ln329_fu_522_p2 = (icmp_ln330_reg_651 ^ 1'd1);

assign zext_ln329_fu_459_p1 = select_ln329_1_fu_451_p3;

assign zext_ln333_1_fu_566_p1 = select_ln330_1_fu_558_p3;

assign zext_ln333_2_fu_576_p1 = add_ln333_1_fu_570_p2;

assign zext_ln333_fu_506_p1 = select_ln329_1_reg_658;

endmodule //srcnn_conv2_Pipeline_OUT_STATIONARY_CONV2_VITIS_LOOP_330_3_VITIS_LOOP_331_4
