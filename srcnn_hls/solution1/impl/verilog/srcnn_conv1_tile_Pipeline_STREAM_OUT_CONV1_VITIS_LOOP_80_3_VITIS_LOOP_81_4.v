// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1_tile_Pipeline_STREAM_OUT_CONV1_VITIS_LOOP_80_3_VITIS_LOOP_81_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv1_to_conv2_din,
        conv1_to_conv2_full_n,
        conv1_to_conv2_write,
        layer1_output_tile_address0,
        layer1_output_tile_ce0,
        layer1_output_tile_q0,
        layer1_output_tile_1_address0,
        layer1_output_tile_1_ce0,
        layer1_output_tile_1_q0,
        layer1_output_tile_2_address0,
        layer1_output_tile_2_ce0,
        layer1_output_tile_2_q0,
        layer1_output_tile_3_address0,
        layer1_output_tile_3_ce0,
        layer1_output_tile_3_q0,
        layer1_output_tile_4_address0,
        layer1_output_tile_4_ce0,
        layer1_output_tile_4_q0,
        layer1_output_tile_5_address0,
        layer1_output_tile_5_ce0,
        layer1_output_tile_5_q0,
        layer1_output_tile_6_address0,
        layer1_output_tile_6_ce0,
        layer1_output_tile_6_q0,
        layer1_output_tile_7_address0,
        layer1_output_tile_7_ce0,
        layer1_output_tile_7_q0,
        layer1_output_tile_8_address0,
        layer1_output_tile_8_ce0,
        layer1_output_tile_8_q0,
        layer1_output_tile_9_address0,
        layer1_output_tile_9_ce0,
        layer1_output_tile_9_q0,
        layer1_output_tile_10_address0,
        layer1_output_tile_10_ce0,
        layer1_output_tile_10_q0,
        layer1_output_tile_11_address0,
        layer1_output_tile_11_ce0,
        layer1_output_tile_11_q0,
        layer1_output_tile_12_address0,
        layer1_output_tile_12_ce0,
        layer1_output_tile_12_q0,
        layer1_output_tile_13_address0,
        layer1_output_tile_13_ce0,
        layer1_output_tile_13_q0,
        layer1_output_tile_14_address0,
        layer1_output_tile_14_ce0,
        layer1_output_tile_14_q0,
        layer1_output_tile_15_address0,
        layer1_output_tile_15_ce0,
        layer1_output_tile_15_q0,
        layer1_output_tile_16_address0,
        layer1_output_tile_16_ce0,
        layer1_output_tile_16_q0,
        layer1_output_tile_17_address0,
        layer1_output_tile_17_ce0,
        layer1_output_tile_17_q0,
        layer1_output_tile_18_address0,
        layer1_output_tile_18_ce0,
        layer1_output_tile_18_q0,
        layer1_output_tile_19_address0,
        layer1_output_tile_19_ce0,
        layer1_output_tile_19_q0,
        layer1_output_tile_20_address0,
        layer1_output_tile_20_ce0,
        layer1_output_tile_20_q0,
        layer1_output_tile_21_address0,
        layer1_output_tile_21_ce0,
        layer1_output_tile_21_q0,
        layer1_output_tile_22_address0,
        layer1_output_tile_22_ce0,
        layer1_output_tile_22_q0,
        layer1_output_tile_23_address0,
        layer1_output_tile_23_ce0,
        layer1_output_tile_23_q0,
        layer1_output_tile_24_address0,
        layer1_output_tile_24_ce0,
        layer1_output_tile_24_q0,
        layer1_output_tile_25_address0,
        layer1_output_tile_25_ce0,
        layer1_output_tile_25_q0,
        layer1_output_tile_26_address0,
        layer1_output_tile_26_ce0,
        layer1_output_tile_26_q0,
        layer1_output_tile_27_address0,
        layer1_output_tile_27_ce0,
        layer1_output_tile_27_q0,
        layer1_output_tile_28_address0,
        layer1_output_tile_28_ce0,
        layer1_output_tile_28_q0,
        layer1_output_tile_29_address0,
        layer1_output_tile_29_ce0,
        layer1_output_tile_29_q0,
        layer1_output_tile_30_address0,
        layer1_output_tile_30_ce0,
        layer1_output_tile_30_q0,
        layer1_output_tile_31_address0,
        layer1_output_tile_31_ce0,
        layer1_output_tile_31_q0,
        layer1_output_tile_32_address0,
        layer1_output_tile_32_ce0,
        layer1_output_tile_32_q0,
        layer1_output_tile_33_address0,
        layer1_output_tile_33_ce0,
        layer1_output_tile_33_q0,
        layer1_output_tile_34_address0,
        layer1_output_tile_34_ce0,
        layer1_output_tile_34_q0,
        layer1_output_tile_35_address0,
        layer1_output_tile_35_ce0,
        layer1_output_tile_35_q0,
        layer1_output_tile_36_address0,
        layer1_output_tile_36_ce0,
        layer1_output_tile_36_q0,
        layer1_output_tile_37_address0,
        layer1_output_tile_37_ce0,
        layer1_output_tile_37_q0,
        layer1_output_tile_38_address0,
        layer1_output_tile_38_ce0,
        layer1_output_tile_38_q0,
        layer1_output_tile_39_address0,
        layer1_output_tile_39_ce0,
        layer1_output_tile_39_q0,
        layer1_output_tile_40_address0,
        layer1_output_tile_40_ce0,
        layer1_output_tile_40_q0,
        layer1_output_tile_41_address0,
        layer1_output_tile_41_ce0,
        layer1_output_tile_41_q0,
        layer1_output_tile_42_address0,
        layer1_output_tile_42_ce0,
        layer1_output_tile_42_q0,
        layer1_output_tile_43_address0,
        layer1_output_tile_43_ce0,
        layer1_output_tile_43_q0,
        layer1_output_tile_44_address0,
        layer1_output_tile_44_ce0,
        layer1_output_tile_44_q0,
        layer1_output_tile_45_address0,
        layer1_output_tile_45_ce0,
        layer1_output_tile_45_q0,
        layer1_output_tile_46_address0,
        layer1_output_tile_46_ce0,
        layer1_output_tile_46_q0,
        layer1_output_tile_47_address0,
        layer1_output_tile_47_ce0,
        layer1_output_tile_47_q0,
        layer1_output_tile_48_address0,
        layer1_output_tile_48_ce0,
        layer1_output_tile_48_q0,
        layer1_output_tile_49_address0,
        layer1_output_tile_49_ce0,
        layer1_output_tile_49_q0,
        layer1_output_tile_50_address0,
        layer1_output_tile_50_ce0,
        layer1_output_tile_50_q0,
        layer1_output_tile_51_address0,
        layer1_output_tile_51_ce0,
        layer1_output_tile_51_q0,
        layer1_output_tile_52_address0,
        layer1_output_tile_52_ce0,
        layer1_output_tile_52_q0,
        layer1_output_tile_53_address0,
        layer1_output_tile_53_ce0,
        layer1_output_tile_53_q0,
        layer1_output_tile_54_address0,
        layer1_output_tile_54_ce0,
        layer1_output_tile_54_q0,
        layer1_output_tile_55_address0,
        layer1_output_tile_55_ce0,
        layer1_output_tile_55_q0,
        layer1_output_tile_56_address0,
        layer1_output_tile_56_ce0,
        layer1_output_tile_56_q0,
        layer1_output_tile_57_address0,
        layer1_output_tile_57_ce0,
        layer1_output_tile_57_q0,
        layer1_output_tile_58_address0,
        layer1_output_tile_58_ce0,
        layer1_output_tile_58_q0,
        layer1_output_tile_59_address0,
        layer1_output_tile_59_ce0,
        layer1_output_tile_59_q0,
        layer1_output_tile_60_address0,
        layer1_output_tile_60_ce0,
        layer1_output_tile_60_q0,
        layer1_output_tile_61_address0,
        layer1_output_tile_61_ce0,
        layer1_output_tile_61_q0,
        layer1_output_tile_62_address0,
        layer1_output_tile_62_ce0,
        layer1_output_tile_62_q0,
        layer1_output_tile_63_address0,
        layer1_output_tile_63_ce0,
        layer1_output_tile_63_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] conv1_to_conv2_din;
input   conv1_to_conv2_full_n;
output   conv1_to_conv2_write;
output  [8:0] layer1_output_tile_address0;
output   layer1_output_tile_ce0;
input  [31:0] layer1_output_tile_q0;
output  [8:0] layer1_output_tile_1_address0;
output   layer1_output_tile_1_ce0;
input  [31:0] layer1_output_tile_1_q0;
output  [8:0] layer1_output_tile_2_address0;
output   layer1_output_tile_2_ce0;
input  [31:0] layer1_output_tile_2_q0;
output  [8:0] layer1_output_tile_3_address0;
output   layer1_output_tile_3_ce0;
input  [31:0] layer1_output_tile_3_q0;
output  [8:0] layer1_output_tile_4_address0;
output   layer1_output_tile_4_ce0;
input  [31:0] layer1_output_tile_4_q0;
output  [8:0] layer1_output_tile_5_address0;
output   layer1_output_tile_5_ce0;
input  [31:0] layer1_output_tile_5_q0;
output  [8:0] layer1_output_tile_6_address0;
output   layer1_output_tile_6_ce0;
input  [31:0] layer1_output_tile_6_q0;
output  [8:0] layer1_output_tile_7_address0;
output   layer1_output_tile_7_ce0;
input  [31:0] layer1_output_tile_7_q0;
output  [8:0] layer1_output_tile_8_address0;
output   layer1_output_tile_8_ce0;
input  [31:0] layer1_output_tile_8_q0;
output  [8:0] layer1_output_tile_9_address0;
output   layer1_output_tile_9_ce0;
input  [31:0] layer1_output_tile_9_q0;
output  [8:0] layer1_output_tile_10_address0;
output   layer1_output_tile_10_ce0;
input  [31:0] layer1_output_tile_10_q0;
output  [8:0] layer1_output_tile_11_address0;
output   layer1_output_tile_11_ce0;
input  [31:0] layer1_output_tile_11_q0;
output  [8:0] layer1_output_tile_12_address0;
output   layer1_output_tile_12_ce0;
input  [31:0] layer1_output_tile_12_q0;
output  [8:0] layer1_output_tile_13_address0;
output   layer1_output_tile_13_ce0;
input  [31:0] layer1_output_tile_13_q0;
output  [8:0] layer1_output_tile_14_address0;
output   layer1_output_tile_14_ce0;
input  [31:0] layer1_output_tile_14_q0;
output  [8:0] layer1_output_tile_15_address0;
output   layer1_output_tile_15_ce0;
input  [31:0] layer1_output_tile_15_q0;
output  [8:0] layer1_output_tile_16_address0;
output   layer1_output_tile_16_ce0;
input  [31:0] layer1_output_tile_16_q0;
output  [8:0] layer1_output_tile_17_address0;
output   layer1_output_tile_17_ce0;
input  [31:0] layer1_output_tile_17_q0;
output  [8:0] layer1_output_tile_18_address0;
output   layer1_output_tile_18_ce0;
input  [31:0] layer1_output_tile_18_q0;
output  [8:0] layer1_output_tile_19_address0;
output   layer1_output_tile_19_ce0;
input  [31:0] layer1_output_tile_19_q0;
output  [8:0] layer1_output_tile_20_address0;
output   layer1_output_tile_20_ce0;
input  [31:0] layer1_output_tile_20_q0;
output  [8:0] layer1_output_tile_21_address0;
output   layer1_output_tile_21_ce0;
input  [31:0] layer1_output_tile_21_q0;
output  [8:0] layer1_output_tile_22_address0;
output   layer1_output_tile_22_ce0;
input  [31:0] layer1_output_tile_22_q0;
output  [8:0] layer1_output_tile_23_address0;
output   layer1_output_tile_23_ce0;
input  [31:0] layer1_output_tile_23_q0;
output  [8:0] layer1_output_tile_24_address0;
output   layer1_output_tile_24_ce0;
input  [31:0] layer1_output_tile_24_q0;
output  [8:0] layer1_output_tile_25_address0;
output   layer1_output_tile_25_ce0;
input  [31:0] layer1_output_tile_25_q0;
output  [8:0] layer1_output_tile_26_address0;
output   layer1_output_tile_26_ce0;
input  [31:0] layer1_output_tile_26_q0;
output  [8:0] layer1_output_tile_27_address0;
output   layer1_output_tile_27_ce0;
input  [31:0] layer1_output_tile_27_q0;
output  [8:0] layer1_output_tile_28_address0;
output   layer1_output_tile_28_ce0;
input  [31:0] layer1_output_tile_28_q0;
output  [8:0] layer1_output_tile_29_address0;
output   layer1_output_tile_29_ce0;
input  [31:0] layer1_output_tile_29_q0;
output  [8:0] layer1_output_tile_30_address0;
output   layer1_output_tile_30_ce0;
input  [31:0] layer1_output_tile_30_q0;
output  [8:0] layer1_output_tile_31_address0;
output   layer1_output_tile_31_ce0;
input  [31:0] layer1_output_tile_31_q0;
output  [8:0] layer1_output_tile_32_address0;
output   layer1_output_tile_32_ce0;
input  [31:0] layer1_output_tile_32_q0;
output  [8:0] layer1_output_tile_33_address0;
output   layer1_output_tile_33_ce0;
input  [31:0] layer1_output_tile_33_q0;
output  [8:0] layer1_output_tile_34_address0;
output   layer1_output_tile_34_ce0;
input  [31:0] layer1_output_tile_34_q0;
output  [8:0] layer1_output_tile_35_address0;
output   layer1_output_tile_35_ce0;
input  [31:0] layer1_output_tile_35_q0;
output  [8:0] layer1_output_tile_36_address0;
output   layer1_output_tile_36_ce0;
input  [31:0] layer1_output_tile_36_q0;
output  [8:0] layer1_output_tile_37_address0;
output   layer1_output_tile_37_ce0;
input  [31:0] layer1_output_tile_37_q0;
output  [8:0] layer1_output_tile_38_address0;
output   layer1_output_tile_38_ce0;
input  [31:0] layer1_output_tile_38_q0;
output  [8:0] layer1_output_tile_39_address0;
output   layer1_output_tile_39_ce0;
input  [31:0] layer1_output_tile_39_q0;
output  [8:0] layer1_output_tile_40_address0;
output   layer1_output_tile_40_ce0;
input  [31:0] layer1_output_tile_40_q0;
output  [8:0] layer1_output_tile_41_address0;
output   layer1_output_tile_41_ce0;
input  [31:0] layer1_output_tile_41_q0;
output  [8:0] layer1_output_tile_42_address0;
output   layer1_output_tile_42_ce0;
input  [31:0] layer1_output_tile_42_q0;
output  [8:0] layer1_output_tile_43_address0;
output   layer1_output_tile_43_ce0;
input  [31:0] layer1_output_tile_43_q0;
output  [8:0] layer1_output_tile_44_address0;
output   layer1_output_tile_44_ce0;
input  [31:0] layer1_output_tile_44_q0;
output  [8:0] layer1_output_tile_45_address0;
output   layer1_output_tile_45_ce0;
input  [31:0] layer1_output_tile_45_q0;
output  [8:0] layer1_output_tile_46_address0;
output   layer1_output_tile_46_ce0;
input  [31:0] layer1_output_tile_46_q0;
output  [8:0] layer1_output_tile_47_address0;
output   layer1_output_tile_47_ce0;
input  [31:0] layer1_output_tile_47_q0;
output  [8:0] layer1_output_tile_48_address0;
output   layer1_output_tile_48_ce0;
input  [31:0] layer1_output_tile_48_q0;
output  [8:0] layer1_output_tile_49_address0;
output   layer1_output_tile_49_ce0;
input  [31:0] layer1_output_tile_49_q0;
output  [8:0] layer1_output_tile_50_address0;
output   layer1_output_tile_50_ce0;
input  [31:0] layer1_output_tile_50_q0;
output  [8:0] layer1_output_tile_51_address0;
output   layer1_output_tile_51_ce0;
input  [31:0] layer1_output_tile_51_q0;
output  [8:0] layer1_output_tile_52_address0;
output   layer1_output_tile_52_ce0;
input  [31:0] layer1_output_tile_52_q0;
output  [8:0] layer1_output_tile_53_address0;
output   layer1_output_tile_53_ce0;
input  [31:0] layer1_output_tile_53_q0;
output  [8:0] layer1_output_tile_54_address0;
output   layer1_output_tile_54_ce0;
input  [31:0] layer1_output_tile_54_q0;
output  [8:0] layer1_output_tile_55_address0;
output   layer1_output_tile_55_ce0;
input  [31:0] layer1_output_tile_55_q0;
output  [8:0] layer1_output_tile_56_address0;
output   layer1_output_tile_56_ce0;
input  [31:0] layer1_output_tile_56_q0;
output  [8:0] layer1_output_tile_57_address0;
output   layer1_output_tile_57_ce0;
input  [31:0] layer1_output_tile_57_q0;
output  [8:0] layer1_output_tile_58_address0;
output   layer1_output_tile_58_ce0;
input  [31:0] layer1_output_tile_58_q0;
output  [8:0] layer1_output_tile_59_address0;
output   layer1_output_tile_59_ce0;
input  [31:0] layer1_output_tile_59_q0;
output  [8:0] layer1_output_tile_60_address0;
output   layer1_output_tile_60_ce0;
input  [31:0] layer1_output_tile_60_q0;
output  [8:0] layer1_output_tile_61_address0;
output   layer1_output_tile_61_ce0;
input  [31:0] layer1_output_tile_61_q0;
output  [8:0] layer1_output_tile_62_address0;
output   layer1_output_tile_62_ce0;
input  [31:0] layer1_output_tile_62_q0;
output  [8:0] layer1_output_tile_63_address0;
output   layer1_output_tile_63_ce0;
input  [31:0] layer1_output_tile_63_q0;

reg ap_idle;
reg conv1_to_conv2_write;
reg layer1_output_tile_ce0;
reg layer1_output_tile_1_ce0;
reg layer1_output_tile_2_ce0;
reg layer1_output_tile_3_ce0;
reg layer1_output_tile_4_ce0;
reg layer1_output_tile_5_ce0;
reg layer1_output_tile_6_ce0;
reg layer1_output_tile_7_ce0;
reg layer1_output_tile_8_ce0;
reg layer1_output_tile_9_ce0;
reg layer1_output_tile_10_ce0;
reg layer1_output_tile_11_ce0;
reg layer1_output_tile_12_ce0;
reg layer1_output_tile_13_ce0;
reg layer1_output_tile_14_ce0;
reg layer1_output_tile_15_ce0;
reg layer1_output_tile_16_ce0;
reg layer1_output_tile_17_ce0;
reg layer1_output_tile_18_ce0;
reg layer1_output_tile_19_ce0;
reg layer1_output_tile_20_ce0;
reg layer1_output_tile_21_ce0;
reg layer1_output_tile_22_ce0;
reg layer1_output_tile_23_ce0;
reg layer1_output_tile_24_ce0;
reg layer1_output_tile_25_ce0;
reg layer1_output_tile_26_ce0;
reg layer1_output_tile_27_ce0;
reg layer1_output_tile_28_ce0;
reg layer1_output_tile_29_ce0;
reg layer1_output_tile_30_ce0;
reg layer1_output_tile_31_ce0;
reg layer1_output_tile_32_ce0;
reg layer1_output_tile_33_ce0;
reg layer1_output_tile_34_ce0;
reg layer1_output_tile_35_ce0;
reg layer1_output_tile_36_ce0;
reg layer1_output_tile_37_ce0;
reg layer1_output_tile_38_ce0;
reg layer1_output_tile_39_ce0;
reg layer1_output_tile_40_ce0;
reg layer1_output_tile_41_ce0;
reg layer1_output_tile_42_ce0;
reg layer1_output_tile_43_ce0;
reg layer1_output_tile_44_ce0;
reg layer1_output_tile_45_ce0;
reg layer1_output_tile_46_ce0;
reg layer1_output_tile_47_ce0;
reg layer1_output_tile_48_ce0;
reg layer1_output_tile_49_ce0;
reg layer1_output_tile_50_ce0;
reg layer1_output_tile_51_ce0;
reg layer1_output_tile_52_ce0;
reg layer1_output_tile_53_ce0;
reg layer1_output_tile_54_ce0;
reg layer1_output_tile_55_ce0;
reg layer1_output_tile_56_ce0;
reg layer1_output_tile_57_ce0;
reg layer1_output_tile_58_ce0;
reg layer1_output_tile_59_ce0;
reg layer1_output_tile_60_ce0;
reg layer1_output_tile_61_ce0;
reg layer1_output_tile_62_ce0;
reg layer1_output_tile_63_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln79_fu_1079_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv1_to_conv2_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln80_fu_1100_p2;
reg   [0:0] icmp_ln80_reg_1498;
wire   [63:0] zext_ln82_2_fu_1188_p1;
reg   [4:0] tw_fu_192;
wire   [4:0] add_ln81_fu_1256_p2;
wire    ap_loop_init;
reg   [4:0] th_1_fu_196;
wire   [4:0] select_ln80_1_fu_1152_p3;
reg   [9:0] indvar_flatten479_fu_200;
wire   [9:0] select_ln80_2_fu_1268_p3;
reg   [6:0] feat_fu_204;
wire   [6:0] select_ln79_1_fu_1305_p3;
reg   [14:0] indvar_flatten492_fu_208;
wire   [14:0] add_ln79_1_fu_1085_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln81_fu_1120_p2;
wire   [0:0] xor_ln79_fu_1114_p2;
wire   [4:0] select_ln79_fu_1106_p3;
wire   [0:0] and_ln79_fu_1126_p2;
wire   [0:0] or_ln80_fu_1138_p2;
wire   [4:0] add_ln80_fu_1132_p2;
wire   [8:0] p_shl2_fu_1164_p3;
wire   [8:0] zext_ln82_fu_1160_p1;
wire   [4:0] select_ln80_fu_1144_p3;
wire   [8:0] add_ln82_fu_1172_p2;
wire   [8:0] zext_ln82_1_fu_1178_p1;
wire   [8:0] add_ln82_1_fu_1182_p2;
wire   [9:0] add_ln80_1_fu_1262_p2;
wire   [6:0] add_ln79_fu_1299_p2;
wire   [5:0] tmp_253_fu_1316_p65;
wire   [31:0] tmp_253_fu_1316_p66;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_64_6_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_64_6_32_1_1_U1198(
    .din0(layer1_output_tile_q0),
    .din1(layer1_output_tile_1_q0),
    .din2(layer1_output_tile_2_q0),
    .din3(layer1_output_tile_3_q0),
    .din4(layer1_output_tile_4_q0),
    .din5(layer1_output_tile_5_q0),
    .din6(layer1_output_tile_6_q0),
    .din7(layer1_output_tile_7_q0),
    .din8(layer1_output_tile_8_q0),
    .din9(layer1_output_tile_9_q0),
    .din10(layer1_output_tile_10_q0),
    .din11(layer1_output_tile_11_q0),
    .din12(layer1_output_tile_12_q0),
    .din13(layer1_output_tile_13_q0),
    .din14(layer1_output_tile_14_q0),
    .din15(layer1_output_tile_15_q0),
    .din16(layer1_output_tile_16_q0),
    .din17(layer1_output_tile_17_q0),
    .din18(layer1_output_tile_18_q0),
    .din19(layer1_output_tile_19_q0),
    .din20(layer1_output_tile_20_q0),
    .din21(layer1_output_tile_21_q0),
    .din22(layer1_output_tile_22_q0),
    .din23(layer1_output_tile_23_q0),
    .din24(layer1_output_tile_24_q0),
    .din25(layer1_output_tile_25_q0),
    .din26(layer1_output_tile_26_q0),
    .din27(layer1_output_tile_27_q0),
    .din28(layer1_output_tile_28_q0),
    .din29(layer1_output_tile_29_q0),
    .din30(layer1_output_tile_30_q0),
    .din31(layer1_output_tile_31_q0),
    .din32(layer1_output_tile_32_q0),
    .din33(layer1_output_tile_33_q0),
    .din34(layer1_output_tile_34_q0),
    .din35(layer1_output_tile_35_q0),
    .din36(layer1_output_tile_36_q0),
    .din37(layer1_output_tile_37_q0),
    .din38(layer1_output_tile_38_q0),
    .din39(layer1_output_tile_39_q0),
    .din40(layer1_output_tile_40_q0),
    .din41(layer1_output_tile_41_q0),
    .din42(layer1_output_tile_42_q0),
    .din43(layer1_output_tile_43_q0),
    .din44(layer1_output_tile_44_q0),
    .din45(layer1_output_tile_45_q0),
    .din46(layer1_output_tile_46_q0),
    .din47(layer1_output_tile_47_q0),
    .din48(layer1_output_tile_48_q0),
    .din49(layer1_output_tile_49_q0),
    .din50(layer1_output_tile_50_q0),
    .din51(layer1_output_tile_51_q0),
    .din52(layer1_output_tile_52_q0),
    .din53(layer1_output_tile_53_q0),
    .din54(layer1_output_tile_54_q0),
    .din55(layer1_output_tile_55_q0),
    .din56(layer1_output_tile_56_q0),
    .din57(layer1_output_tile_57_q0),
    .din58(layer1_output_tile_58_q0),
    .din59(layer1_output_tile_59_q0),
    .din60(layer1_output_tile_60_q0),
    .din61(layer1_output_tile_61_q0),
    .din62(layer1_output_tile_62_q0),
    .din63(layer1_output_tile_63_q0),
    .din64(tmp_253_fu_1316_p65),
    .dout(tmp_253_fu_1316_p66)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            feat_fu_204 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            feat_fu_204 <= select_ln79_1_fu_1305_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten479_fu_200 <= 10'd0;
        end else if (((icmp_ln79_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten479_fu_200 <= select_ln80_2_fu_1268_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten492_fu_208 <= 15'd0;
        end else if (((icmp_ln79_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten492_fu_208 <= add_ln79_1_fu_1085_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            th_1_fu_196 <= 5'd0;
        end else if (((icmp_ln79_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            th_1_fu_196 <= select_ln80_1_fu_1152_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tw_fu_192 <= 5'd0;
        end else if (((icmp_ln79_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            tw_fu_192 <= add_ln81_fu_1256_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_1079_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln80_reg_1498 <= icmp_ln80_fu_1100_p2;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_1079_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv1_to_conv2_blk_n = conv1_to_conv2_full_n;
    end else begin
        conv1_to_conv2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv1_to_conv2_write = 1'b1;
    end else begin
        conv1_to_conv2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_10_ce0 = 1'b1;
    end else begin
        layer1_output_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_11_ce0 = 1'b1;
    end else begin
        layer1_output_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_12_ce0 = 1'b1;
    end else begin
        layer1_output_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_13_ce0 = 1'b1;
    end else begin
        layer1_output_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_14_ce0 = 1'b1;
    end else begin
        layer1_output_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_15_ce0 = 1'b1;
    end else begin
        layer1_output_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_16_ce0 = 1'b1;
    end else begin
        layer1_output_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_17_ce0 = 1'b1;
    end else begin
        layer1_output_tile_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_18_ce0 = 1'b1;
    end else begin
        layer1_output_tile_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_19_ce0 = 1'b1;
    end else begin
        layer1_output_tile_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_1_ce0 = 1'b1;
    end else begin
        layer1_output_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_20_ce0 = 1'b1;
    end else begin
        layer1_output_tile_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_21_ce0 = 1'b1;
    end else begin
        layer1_output_tile_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_22_ce0 = 1'b1;
    end else begin
        layer1_output_tile_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_23_ce0 = 1'b1;
    end else begin
        layer1_output_tile_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_24_ce0 = 1'b1;
    end else begin
        layer1_output_tile_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_25_ce0 = 1'b1;
    end else begin
        layer1_output_tile_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_26_ce0 = 1'b1;
    end else begin
        layer1_output_tile_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_27_ce0 = 1'b1;
    end else begin
        layer1_output_tile_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_28_ce0 = 1'b1;
    end else begin
        layer1_output_tile_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_29_ce0 = 1'b1;
    end else begin
        layer1_output_tile_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_2_ce0 = 1'b1;
    end else begin
        layer1_output_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_30_ce0 = 1'b1;
    end else begin
        layer1_output_tile_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_31_ce0 = 1'b1;
    end else begin
        layer1_output_tile_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_32_ce0 = 1'b1;
    end else begin
        layer1_output_tile_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_33_ce0 = 1'b1;
    end else begin
        layer1_output_tile_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_34_ce0 = 1'b1;
    end else begin
        layer1_output_tile_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_35_ce0 = 1'b1;
    end else begin
        layer1_output_tile_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_36_ce0 = 1'b1;
    end else begin
        layer1_output_tile_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_37_ce0 = 1'b1;
    end else begin
        layer1_output_tile_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_38_ce0 = 1'b1;
    end else begin
        layer1_output_tile_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_39_ce0 = 1'b1;
    end else begin
        layer1_output_tile_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_3_ce0 = 1'b1;
    end else begin
        layer1_output_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_40_ce0 = 1'b1;
    end else begin
        layer1_output_tile_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_41_ce0 = 1'b1;
    end else begin
        layer1_output_tile_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_42_ce0 = 1'b1;
    end else begin
        layer1_output_tile_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_43_ce0 = 1'b1;
    end else begin
        layer1_output_tile_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_44_ce0 = 1'b1;
    end else begin
        layer1_output_tile_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_45_ce0 = 1'b1;
    end else begin
        layer1_output_tile_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_46_ce0 = 1'b1;
    end else begin
        layer1_output_tile_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_47_ce0 = 1'b1;
    end else begin
        layer1_output_tile_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_48_ce0 = 1'b1;
    end else begin
        layer1_output_tile_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_49_ce0 = 1'b1;
    end else begin
        layer1_output_tile_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_4_ce0 = 1'b1;
    end else begin
        layer1_output_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_50_ce0 = 1'b1;
    end else begin
        layer1_output_tile_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_51_ce0 = 1'b1;
    end else begin
        layer1_output_tile_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_52_ce0 = 1'b1;
    end else begin
        layer1_output_tile_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_53_ce0 = 1'b1;
    end else begin
        layer1_output_tile_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_54_ce0 = 1'b1;
    end else begin
        layer1_output_tile_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_55_ce0 = 1'b1;
    end else begin
        layer1_output_tile_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_56_ce0 = 1'b1;
    end else begin
        layer1_output_tile_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_57_ce0 = 1'b1;
    end else begin
        layer1_output_tile_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_58_ce0 = 1'b1;
    end else begin
        layer1_output_tile_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_59_ce0 = 1'b1;
    end else begin
        layer1_output_tile_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_5_ce0 = 1'b1;
    end else begin
        layer1_output_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_60_ce0 = 1'b1;
    end else begin
        layer1_output_tile_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_61_ce0 = 1'b1;
    end else begin
        layer1_output_tile_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_62_ce0 = 1'b1;
    end else begin
        layer1_output_tile_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_63_ce0 = 1'b1;
    end else begin
        layer1_output_tile_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_6_ce0 = 1'b1;
    end else begin
        layer1_output_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_7_ce0 = 1'b1;
    end else begin
        layer1_output_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_8_ce0 = 1'b1;
    end else begin
        layer1_output_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_9_ce0 = 1'b1;
    end else begin
        layer1_output_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer1_output_tile_ce0 = 1'b1;
    end else begin
        layer1_output_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln79_1_fu_1085_p2 = (indvar_flatten492_fu_208 + 15'd1);

assign add_ln79_fu_1299_p2 = (feat_fu_204 + 7'd1);

assign add_ln80_1_fu_1262_p2 = (indvar_flatten479_fu_200 + 10'd1);

assign add_ln80_fu_1132_p2 = (select_ln79_fu_1106_p3 + 5'd1);

assign add_ln81_fu_1256_p2 = (select_ln80_fu_1144_p3 + 5'd1);

assign add_ln82_1_fu_1182_p2 = (add_ln82_fu_1172_p2 + zext_ln82_1_fu_1178_p1);

assign add_ln82_fu_1172_p2 = (p_shl2_fu_1164_p3 + zext_ln82_fu_1160_p1);

assign and_ln79_fu_1126_p2 = (xor_ln79_fu_1114_p2 & icmp_ln81_fu_1120_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((conv1_to_conv2_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((conv1_to_conv2_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((conv1_to_conv2_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (conv1_to_conv2_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign conv1_to_conv2_din = tmp_253_fu_1316_p66;

assign icmp_ln79_fu_1079_p2 = ((indvar_flatten492_fu_208 == 15'd18496) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_1100_p2 = ((indvar_flatten479_fu_200 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_1120_p2 = ((tw_fu_192 == 5'd17) ? 1'b1 : 1'b0);

assign layer1_output_tile_10_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_11_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_12_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_13_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_14_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_15_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_16_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_17_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_18_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_19_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_1_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_20_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_21_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_22_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_23_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_24_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_25_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_26_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_27_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_28_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_29_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_2_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_30_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_31_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_32_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_33_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_34_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_35_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_36_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_37_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_38_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_39_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_3_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_40_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_41_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_42_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_43_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_44_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_45_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_46_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_47_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_48_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_49_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_4_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_50_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_51_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_52_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_53_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_54_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_55_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_56_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_57_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_58_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_59_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_5_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_60_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_61_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_62_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_63_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_6_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_7_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_8_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_9_address0 = zext_ln82_2_fu_1188_p1;

assign layer1_output_tile_address0 = zext_ln82_2_fu_1188_p1;

assign or_ln80_fu_1138_p2 = (icmp_ln80_fu_1100_p2 | and_ln79_fu_1126_p2);

assign p_shl2_fu_1164_p3 = {{select_ln80_1_fu_1152_p3}, {4'd0}};

assign select_ln79_1_fu_1305_p3 = ((icmp_ln80_reg_1498[0:0] == 1'b1) ? add_ln79_fu_1299_p2 : feat_fu_204);

assign select_ln79_fu_1106_p3 = ((icmp_ln80_fu_1100_p2[0:0] == 1'b1) ? 5'd0 : th_1_fu_196);

assign select_ln80_1_fu_1152_p3 = ((and_ln79_fu_1126_p2[0:0] == 1'b1) ? add_ln80_fu_1132_p2 : select_ln79_fu_1106_p3);

assign select_ln80_2_fu_1268_p3 = ((icmp_ln80_fu_1100_p2[0:0] == 1'b1) ? 10'd1 : add_ln80_1_fu_1262_p2);

assign select_ln80_fu_1144_p3 = ((or_ln80_fu_1138_p2[0:0] == 1'b1) ? 5'd0 : tw_fu_192);

assign tmp_253_fu_1316_p65 = select_ln79_1_fu_1305_p3[5:0];

assign xor_ln79_fu_1114_p2 = (icmp_ln80_fu_1100_p2 ^ 1'd1);

assign zext_ln82_1_fu_1178_p1 = select_ln80_fu_1144_p3;

assign zext_ln82_2_fu_1188_p1 = add_ln82_1_fu_1182_p2;

assign zext_ln82_fu_1160_p1 = select_ln80_1_fu_1152_p3;

endmodule //srcnn_conv1_tile_Pipeline_STREAM_OUT_CONV1_VITIS_LOOP_80_3_VITIS_LOOP_81_4
