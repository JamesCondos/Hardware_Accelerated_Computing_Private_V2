// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_STREAM_READ_CONV2_VITIS_LOOP_33_1_VITIS_LOOP_34_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv1_to_conv2_dout,
        conv1_to_conv2_empty_n,
        conv1_to_conv2_read,
        input_tile_address0,
        input_tile_ce0,
        input_tile_we0,
        input_tile_d0,
        input_tile_1_address0,
        input_tile_1_ce0,
        input_tile_1_we0,
        input_tile_1_d0,
        input_tile_2_address0,
        input_tile_2_ce0,
        input_tile_2_we0,
        input_tile_2_d0,
        input_tile_3_address0,
        input_tile_3_ce0,
        input_tile_3_we0,
        input_tile_3_d0,
        input_tile_4_address0,
        input_tile_4_ce0,
        input_tile_4_we0,
        input_tile_4_d0,
        input_tile_5_address0,
        input_tile_5_ce0,
        input_tile_5_we0,
        input_tile_5_d0,
        input_tile_6_address0,
        input_tile_6_ce0,
        input_tile_6_we0,
        input_tile_6_d0,
        input_tile_7_address0,
        input_tile_7_ce0,
        input_tile_7_we0,
        input_tile_7_d0,
        input_tile_8_address0,
        input_tile_8_ce0,
        input_tile_8_we0,
        input_tile_8_d0,
        input_tile_9_address0,
        input_tile_9_ce0,
        input_tile_9_we0,
        input_tile_9_d0,
        input_tile_10_address0,
        input_tile_10_ce0,
        input_tile_10_we0,
        input_tile_10_d0,
        input_tile_11_address0,
        input_tile_11_ce0,
        input_tile_11_we0,
        input_tile_11_d0,
        input_tile_12_address0,
        input_tile_12_ce0,
        input_tile_12_we0,
        input_tile_12_d0,
        input_tile_13_address0,
        input_tile_13_ce0,
        input_tile_13_we0,
        input_tile_13_d0,
        input_tile_14_address0,
        input_tile_14_ce0,
        input_tile_14_we0,
        input_tile_14_d0,
        input_tile_15_address0,
        input_tile_15_ce0,
        input_tile_15_we0,
        input_tile_15_d0,
        input_tile_16_address0,
        input_tile_16_ce0,
        input_tile_16_we0,
        input_tile_16_d0,
        input_tile_17_address0,
        input_tile_17_ce0,
        input_tile_17_we0,
        input_tile_17_d0,
        input_tile_18_address0,
        input_tile_18_ce0,
        input_tile_18_we0,
        input_tile_18_d0,
        input_tile_19_address0,
        input_tile_19_ce0,
        input_tile_19_we0,
        input_tile_19_d0,
        input_tile_20_address0,
        input_tile_20_ce0,
        input_tile_20_we0,
        input_tile_20_d0,
        input_tile_21_address0,
        input_tile_21_ce0,
        input_tile_21_we0,
        input_tile_21_d0,
        input_tile_22_address0,
        input_tile_22_ce0,
        input_tile_22_we0,
        input_tile_22_d0,
        input_tile_23_address0,
        input_tile_23_ce0,
        input_tile_23_we0,
        input_tile_23_d0,
        input_tile_24_address0,
        input_tile_24_ce0,
        input_tile_24_we0,
        input_tile_24_d0,
        input_tile_25_address0,
        input_tile_25_ce0,
        input_tile_25_we0,
        input_tile_25_d0,
        input_tile_26_address0,
        input_tile_26_ce0,
        input_tile_26_we0,
        input_tile_26_d0,
        input_tile_27_address0,
        input_tile_27_ce0,
        input_tile_27_we0,
        input_tile_27_d0,
        input_tile_28_address0,
        input_tile_28_ce0,
        input_tile_28_we0,
        input_tile_28_d0,
        input_tile_29_address0,
        input_tile_29_ce0,
        input_tile_29_we0,
        input_tile_29_d0,
        input_tile_30_address0,
        input_tile_30_ce0,
        input_tile_30_we0,
        input_tile_30_d0,
        input_tile_31_address0,
        input_tile_31_ce0,
        input_tile_31_we0,
        input_tile_31_d0,
        input_tile_32_address0,
        input_tile_32_ce0,
        input_tile_32_we0,
        input_tile_32_d0,
        input_tile_33_address0,
        input_tile_33_ce0,
        input_tile_33_we0,
        input_tile_33_d0,
        input_tile_34_address0,
        input_tile_34_ce0,
        input_tile_34_we0,
        input_tile_34_d0,
        input_tile_35_address0,
        input_tile_35_ce0,
        input_tile_35_we0,
        input_tile_35_d0,
        input_tile_36_address0,
        input_tile_36_ce0,
        input_tile_36_we0,
        input_tile_36_d0,
        input_tile_37_address0,
        input_tile_37_ce0,
        input_tile_37_we0,
        input_tile_37_d0,
        input_tile_38_address0,
        input_tile_38_ce0,
        input_tile_38_we0,
        input_tile_38_d0,
        input_tile_39_address0,
        input_tile_39_ce0,
        input_tile_39_we0,
        input_tile_39_d0,
        input_tile_40_address0,
        input_tile_40_ce0,
        input_tile_40_we0,
        input_tile_40_d0,
        input_tile_41_address0,
        input_tile_41_ce0,
        input_tile_41_we0,
        input_tile_41_d0,
        input_tile_42_address0,
        input_tile_42_ce0,
        input_tile_42_we0,
        input_tile_42_d0,
        input_tile_43_address0,
        input_tile_43_ce0,
        input_tile_43_we0,
        input_tile_43_d0,
        input_tile_44_address0,
        input_tile_44_ce0,
        input_tile_44_we0,
        input_tile_44_d0,
        input_tile_45_address0,
        input_tile_45_ce0,
        input_tile_45_we0,
        input_tile_45_d0,
        input_tile_46_address0,
        input_tile_46_ce0,
        input_tile_46_we0,
        input_tile_46_d0,
        input_tile_47_address0,
        input_tile_47_ce0,
        input_tile_47_we0,
        input_tile_47_d0,
        input_tile_48_address0,
        input_tile_48_ce0,
        input_tile_48_we0,
        input_tile_48_d0,
        input_tile_49_address0,
        input_tile_49_ce0,
        input_tile_49_we0,
        input_tile_49_d0,
        input_tile_50_address0,
        input_tile_50_ce0,
        input_tile_50_we0,
        input_tile_50_d0,
        input_tile_51_address0,
        input_tile_51_ce0,
        input_tile_51_we0,
        input_tile_51_d0,
        input_tile_52_address0,
        input_tile_52_ce0,
        input_tile_52_we0,
        input_tile_52_d0,
        input_tile_53_address0,
        input_tile_53_ce0,
        input_tile_53_we0,
        input_tile_53_d0,
        input_tile_54_address0,
        input_tile_54_ce0,
        input_tile_54_we0,
        input_tile_54_d0,
        input_tile_55_address0,
        input_tile_55_ce0,
        input_tile_55_we0,
        input_tile_55_d0,
        input_tile_56_address0,
        input_tile_56_ce0,
        input_tile_56_we0,
        input_tile_56_d0,
        input_tile_57_address0,
        input_tile_57_ce0,
        input_tile_57_we0,
        input_tile_57_d0,
        input_tile_58_address0,
        input_tile_58_ce0,
        input_tile_58_we0,
        input_tile_58_d0,
        input_tile_59_address0,
        input_tile_59_ce0,
        input_tile_59_we0,
        input_tile_59_d0,
        input_tile_60_address0,
        input_tile_60_ce0,
        input_tile_60_we0,
        input_tile_60_d0,
        input_tile_61_address0,
        input_tile_61_ce0,
        input_tile_61_we0,
        input_tile_61_d0,
        input_tile_62_address0,
        input_tile_62_ce0,
        input_tile_62_we0,
        input_tile_62_d0,
        input_tile_63_address0,
        input_tile_63_ce0,
        input_tile_63_we0,
        input_tile_63_d0,
        input_tile_64_address0,
        input_tile_64_ce0,
        input_tile_64_we0,
        input_tile_64_d0,
        input_tile_65_address0,
        input_tile_65_ce0,
        input_tile_65_we0,
        input_tile_65_d0,
        input_tile_66_address0,
        input_tile_66_ce0,
        input_tile_66_we0,
        input_tile_66_d0,
        input_tile_67_address0,
        input_tile_67_ce0,
        input_tile_67_we0,
        input_tile_67_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] conv1_to_conv2_dout;
input   conv1_to_conv2_empty_n;
output   conv1_to_conv2_read;
output  [8:0] input_tile_address0;
output   input_tile_ce0;
output   input_tile_we0;
output  [31:0] input_tile_d0;
output  [8:0] input_tile_1_address0;
output   input_tile_1_ce0;
output   input_tile_1_we0;
output  [31:0] input_tile_1_d0;
output  [8:0] input_tile_2_address0;
output   input_tile_2_ce0;
output   input_tile_2_we0;
output  [31:0] input_tile_2_d0;
output  [8:0] input_tile_3_address0;
output   input_tile_3_ce0;
output   input_tile_3_we0;
output  [31:0] input_tile_3_d0;
output  [8:0] input_tile_4_address0;
output   input_tile_4_ce0;
output   input_tile_4_we0;
output  [31:0] input_tile_4_d0;
output  [8:0] input_tile_5_address0;
output   input_tile_5_ce0;
output   input_tile_5_we0;
output  [31:0] input_tile_5_d0;
output  [8:0] input_tile_6_address0;
output   input_tile_6_ce0;
output   input_tile_6_we0;
output  [31:0] input_tile_6_d0;
output  [8:0] input_tile_7_address0;
output   input_tile_7_ce0;
output   input_tile_7_we0;
output  [31:0] input_tile_7_d0;
output  [8:0] input_tile_8_address0;
output   input_tile_8_ce0;
output   input_tile_8_we0;
output  [31:0] input_tile_8_d0;
output  [8:0] input_tile_9_address0;
output   input_tile_9_ce0;
output   input_tile_9_we0;
output  [31:0] input_tile_9_d0;
output  [8:0] input_tile_10_address0;
output   input_tile_10_ce0;
output   input_tile_10_we0;
output  [31:0] input_tile_10_d0;
output  [8:0] input_tile_11_address0;
output   input_tile_11_ce0;
output   input_tile_11_we0;
output  [31:0] input_tile_11_d0;
output  [8:0] input_tile_12_address0;
output   input_tile_12_ce0;
output   input_tile_12_we0;
output  [31:0] input_tile_12_d0;
output  [8:0] input_tile_13_address0;
output   input_tile_13_ce0;
output   input_tile_13_we0;
output  [31:0] input_tile_13_d0;
output  [8:0] input_tile_14_address0;
output   input_tile_14_ce0;
output   input_tile_14_we0;
output  [31:0] input_tile_14_d0;
output  [8:0] input_tile_15_address0;
output   input_tile_15_ce0;
output   input_tile_15_we0;
output  [31:0] input_tile_15_d0;
output  [8:0] input_tile_16_address0;
output   input_tile_16_ce0;
output   input_tile_16_we0;
output  [31:0] input_tile_16_d0;
output  [8:0] input_tile_17_address0;
output   input_tile_17_ce0;
output   input_tile_17_we0;
output  [31:0] input_tile_17_d0;
output  [8:0] input_tile_18_address0;
output   input_tile_18_ce0;
output   input_tile_18_we0;
output  [31:0] input_tile_18_d0;
output  [8:0] input_tile_19_address0;
output   input_tile_19_ce0;
output   input_tile_19_we0;
output  [31:0] input_tile_19_d0;
output  [8:0] input_tile_20_address0;
output   input_tile_20_ce0;
output   input_tile_20_we0;
output  [31:0] input_tile_20_d0;
output  [8:0] input_tile_21_address0;
output   input_tile_21_ce0;
output   input_tile_21_we0;
output  [31:0] input_tile_21_d0;
output  [8:0] input_tile_22_address0;
output   input_tile_22_ce0;
output   input_tile_22_we0;
output  [31:0] input_tile_22_d0;
output  [8:0] input_tile_23_address0;
output   input_tile_23_ce0;
output   input_tile_23_we0;
output  [31:0] input_tile_23_d0;
output  [8:0] input_tile_24_address0;
output   input_tile_24_ce0;
output   input_tile_24_we0;
output  [31:0] input_tile_24_d0;
output  [8:0] input_tile_25_address0;
output   input_tile_25_ce0;
output   input_tile_25_we0;
output  [31:0] input_tile_25_d0;
output  [8:0] input_tile_26_address0;
output   input_tile_26_ce0;
output   input_tile_26_we0;
output  [31:0] input_tile_26_d0;
output  [8:0] input_tile_27_address0;
output   input_tile_27_ce0;
output   input_tile_27_we0;
output  [31:0] input_tile_27_d0;
output  [8:0] input_tile_28_address0;
output   input_tile_28_ce0;
output   input_tile_28_we0;
output  [31:0] input_tile_28_d0;
output  [8:0] input_tile_29_address0;
output   input_tile_29_ce0;
output   input_tile_29_we0;
output  [31:0] input_tile_29_d0;
output  [8:0] input_tile_30_address0;
output   input_tile_30_ce0;
output   input_tile_30_we0;
output  [31:0] input_tile_30_d0;
output  [8:0] input_tile_31_address0;
output   input_tile_31_ce0;
output   input_tile_31_we0;
output  [31:0] input_tile_31_d0;
output  [8:0] input_tile_32_address0;
output   input_tile_32_ce0;
output   input_tile_32_we0;
output  [31:0] input_tile_32_d0;
output  [8:0] input_tile_33_address0;
output   input_tile_33_ce0;
output   input_tile_33_we0;
output  [31:0] input_tile_33_d0;
output  [8:0] input_tile_34_address0;
output   input_tile_34_ce0;
output   input_tile_34_we0;
output  [31:0] input_tile_34_d0;
output  [8:0] input_tile_35_address0;
output   input_tile_35_ce0;
output   input_tile_35_we0;
output  [31:0] input_tile_35_d0;
output  [8:0] input_tile_36_address0;
output   input_tile_36_ce0;
output   input_tile_36_we0;
output  [31:0] input_tile_36_d0;
output  [8:0] input_tile_37_address0;
output   input_tile_37_ce0;
output   input_tile_37_we0;
output  [31:0] input_tile_37_d0;
output  [8:0] input_tile_38_address0;
output   input_tile_38_ce0;
output   input_tile_38_we0;
output  [31:0] input_tile_38_d0;
output  [8:0] input_tile_39_address0;
output   input_tile_39_ce0;
output   input_tile_39_we0;
output  [31:0] input_tile_39_d0;
output  [8:0] input_tile_40_address0;
output   input_tile_40_ce0;
output   input_tile_40_we0;
output  [31:0] input_tile_40_d0;
output  [8:0] input_tile_41_address0;
output   input_tile_41_ce0;
output   input_tile_41_we0;
output  [31:0] input_tile_41_d0;
output  [8:0] input_tile_42_address0;
output   input_tile_42_ce0;
output   input_tile_42_we0;
output  [31:0] input_tile_42_d0;
output  [8:0] input_tile_43_address0;
output   input_tile_43_ce0;
output   input_tile_43_we0;
output  [31:0] input_tile_43_d0;
output  [8:0] input_tile_44_address0;
output   input_tile_44_ce0;
output   input_tile_44_we0;
output  [31:0] input_tile_44_d0;
output  [8:0] input_tile_45_address0;
output   input_tile_45_ce0;
output   input_tile_45_we0;
output  [31:0] input_tile_45_d0;
output  [8:0] input_tile_46_address0;
output   input_tile_46_ce0;
output   input_tile_46_we0;
output  [31:0] input_tile_46_d0;
output  [8:0] input_tile_47_address0;
output   input_tile_47_ce0;
output   input_tile_47_we0;
output  [31:0] input_tile_47_d0;
output  [8:0] input_tile_48_address0;
output   input_tile_48_ce0;
output   input_tile_48_we0;
output  [31:0] input_tile_48_d0;
output  [8:0] input_tile_49_address0;
output   input_tile_49_ce0;
output   input_tile_49_we0;
output  [31:0] input_tile_49_d0;
output  [8:0] input_tile_50_address0;
output   input_tile_50_ce0;
output   input_tile_50_we0;
output  [31:0] input_tile_50_d0;
output  [8:0] input_tile_51_address0;
output   input_tile_51_ce0;
output   input_tile_51_we0;
output  [31:0] input_tile_51_d0;
output  [8:0] input_tile_52_address0;
output   input_tile_52_ce0;
output   input_tile_52_we0;
output  [31:0] input_tile_52_d0;
output  [8:0] input_tile_53_address0;
output   input_tile_53_ce0;
output   input_tile_53_we0;
output  [31:0] input_tile_53_d0;
output  [8:0] input_tile_54_address0;
output   input_tile_54_ce0;
output   input_tile_54_we0;
output  [31:0] input_tile_54_d0;
output  [8:0] input_tile_55_address0;
output   input_tile_55_ce0;
output   input_tile_55_we0;
output  [31:0] input_tile_55_d0;
output  [8:0] input_tile_56_address0;
output   input_tile_56_ce0;
output   input_tile_56_we0;
output  [31:0] input_tile_56_d0;
output  [8:0] input_tile_57_address0;
output   input_tile_57_ce0;
output   input_tile_57_we0;
output  [31:0] input_tile_57_d0;
output  [8:0] input_tile_58_address0;
output   input_tile_58_ce0;
output   input_tile_58_we0;
output  [31:0] input_tile_58_d0;
output  [8:0] input_tile_59_address0;
output   input_tile_59_ce0;
output   input_tile_59_we0;
output  [31:0] input_tile_59_d0;
output  [8:0] input_tile_60_address0;
output   input_tile_60_ce0;
output   input_tile_60_we0;
output  [31:0] input_tile_60_d0;
output  [8:0] input_tile_61_address0;
output   input_tile_61_ce0;
output   input_tile_61_we0;
output  [31:0] input_tile_61_d0;
output  [8:0] input_tile_62_address0;
output   input_tile_62_ce0;
output   input_tile_62_we0;
output  [31:0] input_tile_62_d0;
output  [8:0] input_tile_63_address0;
output   input_tile_63_ce0;
output   input_tile_63_we0;
output  [31:0] input_tile_63_d0;
output  [8:0] input_tile_64_address0;
output   input_tile_64_ce0;
output   input_tile_64_we0;
output  [31:0] input_tile_64_d0;
output  [8:0] input_tile_65_address0;
output   input_tile_65_ce0;
output   input_tile_65_we0;
output  [31:0] input_tile_65_d0;
output  [8:0] input_tile_66_address0;
output   input_tile_66_ce0;
output   input_tile_66_we0;
output  [31:0] input_tile_66_d0;
output  [8:0] input_tile_67_address0;
output   input_tile_67_ce0;
output   input_tile_67_we0;
output  [31:0] input_tile_67_d0;

reg ap_idle;
reg conv1_to_conv2_read;
reg input_tile_ce0;
reg input_tile_we0;
reg input_tile_1_ce0;
reg input_tile_1_we0;
reg input_tile_2_ce0;
reg input_tile_2_we0;
reg input_tile_3_ce0;
reg input_tile_3_we0;
reg input_tile_4_ce0;
reg input_tile_4_we0;
reg input_tile_5_ce0;
reg input_tile_5_we0;
reg input_tile_6_ce0;
reg input_tile_6_we0;
reg input_tile_7_ce0;
reg input_tile_7_we0;
reg input_tile_8_ce0;
reg input_tile_8_we0;
reg input_tile_9_ce0;
reg input_tile_9_we0;
reg input_tile_10_ce0;
reg input_tile_10_we0;
reg input_tile_11_ce0;
reg input_tile_11_we0;
reg input_tile_12_ce0;
reg input_tile_12_we0;
reg input_tile_13_ce0;
reg input_tile_13_we0;
reg input_tile_14_ce0;
reg input_tile_14_we0;
reg input_tile_15_ce0;
reg input_tile_15_we0;
reg input_tile_16_ce0;
reg input_tile_16_we0;
reg input_tile_17_ce0;
reg input_tile_17_we0;
reg input_tile_18_ce0;
reg input_tile_18_we0;
reg input_tile_19_ce0;
reg input_tile_19_we0;
reg input_tile_20_ce0;
reg input_tile_20_we0;
reg input_tile_21_ce0;
reg input_tile_21_we0;
reg input_tile_22_ce0;
reg input_tile_22_we0;
reg input_tile_23_ce0;
reg input_tile_23_we0;
reg input_tile_24_ce0;
reg input_tile_24_we0;
reg input_tile_25_ce0;
reg input_tile_25_we0;
reg input_tile_26_ce0;
reg input_tile_26_we0;
reg input_tile_27_ce0;
reg input_tile_27_we0;
reg input_tile_28_ce0;
reg input_tile_28_we0;
reg input_tile_29_ce0;
reg input_tile_29_we0;
reg input_tile_30_ce0;
reg input_tile_30_we0;
reg input_tile_31_ce0;
reg input_tile_31_we0;
reg input_tile_32_ce0;
reg input_tile_32_we0;
reg input_tile_33_ce0;
reg input_tile_33_we0;
reg input_tile_34_ce0;
reg input_tile_34_we0;
reg input_tile_35_ce0;
reg input_tile_35_we0;
reg input_tile_36_ce0;
reg input_tile_36_we0;
reg input_tile_37_ce0;
reg input_tile_37_we0;
reg input_tile_38_ce0;
reg input_tile_38_we0;
reg input_tile_39_ce0;
reg input_tile_39_we0;
reg input_tile_40_ce0;
reg input_tile_40_we0;
reg input_tile_41_ce0;
reg input_tile_41_we0;
reg input_tile_42_ce0;
reg input_tile_42_we0;
reg input_tile_43_ce0;
reg input_tile_43_we0;
reg input_tile_44_ce0;
reg input_tile_44_we0;
reg input_tile_45_ce0;
reg input_tile_45_we0;
reg input_tile_46_ce0;
reg input_tile_46_we0;
reg input_tile_47_ce0;
reg input_tile_47_we0;
reg input_tile_48_ce0;
reg input_tile_48_we0;
reg input_tile_49_ce0;
reg input_tile_49_we0;
reg input_tile_50_ce0;
reg input_tile_50_we0;
reg input_tile_51_ce0;
reg input_tile_51_we0;
reg input_tile_52_ce0;
reg input_tile_52_we0;
reg input_tile_53_ce0;
reg input_tile_53_we0;
reg input_tile_54_ce0;
reg input_tile_54_we0;
reg input_tile_55_ce0;
reg input_tile_55_we0;
reg input_tile_56_ce0;
reg input_tile_56_we0;
reg input_tile_57_ce0;
reg input_tile_57_we0;
reg input_tile_58_ce0;
reg input_tile_58_we0;
reg input_tile_59_ce0;
reg input_tile_59_we0;
reg input_tile_60_ce0;
reg input_tile_60_we0;
reg input_tile_61_ce0;
reg input_tile_61_we0;
reg input_tile_62_ce0;
reg input_tile_62_we0;
reg input_tile_63_ce0;
reg input_tile_63_we0;
reg input_tile_64_ce0;
reg input_tile_64_we0;
reg input_tile_65_ce0;
reg input_tile_65_we0;
reg input_tile_66_ce0;
reg input_tile_66_we0;
reg input_tile_67_ce0;
reg input_tile_67_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln32_fu_1177_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    conv1_to_conv2_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln33_fu_1201_p2;
reg   [0:0] icmp_ln33_reg_1531;
wire   [1:0] trunc_ln32_fu_1215_p1;
reg   [1:0] trunc_ln32_reg_1536;
reg   [3:0] zext_ln32_mid2_v_reg_1540;
wire   [0:0] and_ln32_fu_1241_p2;
reg   [0:0] and_ln32_reg_1546;
wire   [4:0] select_ln33_fu_1253_p3;
reg   [4:0] select_ln33_reg_1551;
wire   [63:0] zext_ln35_1_fu_1344_p1;
reg   [4:0] j_fu_236;
wire   [4:0] add_ln34_fu_1261_p2;
wire    ap_loop_init;
reg   [4:0] i_fu_240;
wire   [4:0] select_ln33_2_fu_1327_p3;
reg   [9:0] indvar_flatten_fu_244;
wire   [9:0] select_ln33_3_fu_1273_p3;
reg   [6:0] feat_fu_248;
wire   [6:0] select_ln32_1_fu_1207_p3;
reg   [14:0] indvar_flatten80_fu_252;
wire   [14:0] add_ln32_1_fu_1183_p2;
wire   [31:0] bitcast_ln35_fu_1416_p1;
wire   [6:0] add_ln32_fu_1195_p2;
wire   [0:0] icmp_ln34_fu_1235_p2;
wire   [0:0] xor_ln32_fu_1229_p2;
wire   [0:0] or_ln33_fu_1247_p2;
wire   [9:0] add_ln33_2_fu_1267_p2;
wire   [7:0] or_ln_fu_1311_p3;
wire   [4:0] select_ln32_fu_1304_p3;
wire   [4:0] add_ln33_fu_1321_p2;
wire   [8:0] zext_ln33_fu_1317_p1;
wire   [8:0] zext_ln35_fu_1334_p1;
wire   [8:0] add_ln35_fu_1338_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            feat_fu_248 <= 7'd0;
        end else if (((icmp_ln32_fu_1177_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            feat_fu_248 <= select_ln32_1_fu_1207_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_240 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            i_fu_240 <= select_ln33_2_fu_1327_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten80_fu_252 <= 15'd0;
        end else if (((icmp_ln32_fu_1177_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten80_fu_252 <= add_ln32_1_fu_1183_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_244 <= 10'd0;
        end else if (((icmp_ln32_fu_1177_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_244 <= select_ln33_3_fu_1273_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_236 <= 5'd0;
        end else if (((icmp_ln32_fu_1177_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_236 <= add_ln34_fu_1261_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1177_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln32_reg_1546 <= and_ln32_fu_1241_p2;
        icmp_ln33_reg_1531 <= icmp_ln33_fu_1201_p2;
        select_ln33_reg_1551 <= select_ln33_fu_1253_p3;
        trunc_ln32_reg_1536 <= trunc_ln32_fu_1215_p1;
        zext_ln32_mid2_v_reg_1540 <= {{select_ln32_1_fu_1207_p3[5:2]}};
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_1177_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv1_to_conv2_blk_n = conv1_to_conv2_empty_n;
    end else begin
        conv1_to_conv2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv1_to_conv2_read = 1'b1;
    end else begin
        conv1_to_conv2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_10_ce0 = 1'b1;
    end else begin
        input_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd10) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_10_we0 = 1'b1;
    end else begin
        input_tile_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_11_ce0 = 1'b1;
    end else begin
        input_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd11) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_11_we0 = 1'b1;
    end else begin
        input_tile_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_12_ce0 = 1'b1;
    end else begin
        input_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd12) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_12_we0 = 1'b1;
    end else begin
        input_tile_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_13_ce0 = 1'b1;
    end else begin
        input_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd13) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_13_we0 = 1'b1;
    end else begin
        input_tile_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_14_ce0 = 1'b1;
    end else begin
        input_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd14) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_14_we0 = 1'b1;
    end else begin
        input_tile_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_15_ce0 = 1'b1;
    end else begin
        input_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_15_we0 = 1'b1;
    end else begin
        input_tile_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_16_ce0 = 1'b1;
    end else begin
        input_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln33_reg_1551 == 5'd0) & ~(select_ln33_reg_1551 == 5'd1) & ~(select_ln33_reg_1551 == 5'd2) & ~(select_ln33_reg_1551 == 5'd3) & ~(select_ln33_reg_1551 == 5'd4) & ~(select_ln33_reg_1551 == 5'd5) & ~(select_ln33_reg_1551 == 5'd6) & ~(select_ln33_reg_1551 == 5'd7) & ~(select_ln33_reg_1551 == 5'd8) & ~(select_ln33_reg_1551 == 5'd9) & ~(select_ln33_reg_1551 == 5'd10) & ~(select_ln33_reg_1551 == 5'd11) & ~(select_ln33_reg_1551 == 5'd12) & ~(select_ln33_reg_1551 == 5'd13) & ~(select_ln33_reg_1551 == 5'd14) & ~(select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_16_we0 = 1'b1;
    end else begin
        input_tile_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_17_ce0 = 1'b1;
    end else begin
        input_tile_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd0) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_17_we0 = 1'b1;
    end else begin
        input_tile_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_18_ce0 = 1'b1;
    end else begin
        input_tile_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd1) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_18_we0 = 1'b1;
    end else begin
        input_tile_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_19_ce0 = 1'b1;
    end else begin
        input_tile_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd2) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_19_we0 = 1'b1;
    end else begin
        input_tile_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_1_ce0 = 1'b1;
    end else begin
        input_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd1) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_1_we0 = 1'b1;
    end else begin
        input_tile_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_20_ce0 = 1'b1;
    end else begin
        input_tile_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd3) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_20_we0 = 1'b1;
    end else begin
        input_tile_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_21_ce0 = 1'b1;
    end else begin
        input_tile_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd4) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_21_we0 = 1'b1;
    end else begin
        input_tile_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_22_ce0 = 1'b1;
    end else begin
        input_tile_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd5) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_22_we0 = 1'b1;
    end else begin
        input_tile_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_23_ce0 = 1'b1;
    end else begin
        input_tile_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd6) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_23_we0 = 1'b1;
    end else begin
        input_tile_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_24_ce0 = 1'b1;
    end else begin
        input_tile_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd7) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_24_we0 = 1'b1;
    end else begin
        input_tile_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_25_ce0 = 1'b1;
    end else begin
        input_tile_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd8) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_25_we0 = 1'b1;
    end else begin
        input_tile_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_26_ce0 = 1'b1;
    end else begin
        input_tile_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd9) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_26_we0 = 1'b1;
    end else begin
        input_tile_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_27_ce0 = 1'b1;
    end else begin
        input_tile_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd10) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_27_we0 = 1'b1;
    end else begin
        input_tile_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_28_ce0 = 1'b1;
    end else begin
        input_tile_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd11) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_28_we0 = 1'b1;
    end else begin
        input_tile_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_29_ce0 = 1'b1;
    end else begin
        input_tile_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd12) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_29_we0 = 1'b1;
    end else begin
        input_tile_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_2_ce0 = 1'b1;
    end else begin
        input_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd2) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_2_we0 = 1'b1;
    end else begin
        input_tile_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_30_ce0 = 1'b1;
    end else begin
        input_tile_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd13) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_30_we0 = 1'b1;
    end else begin
        input_tile_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_31_ce0 = 1'b1;
    end else begin
        input_tile_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd14) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_31_we0 = 1'b1;
    end else begin
        input_tile_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_32_ce0 = 1'b1;
    end else begin
        input_tile_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_32_we0 = 1'b1;
    end else begin
        input_tile_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_33_ce0 = 1'b1;
    end else begin
        input_tile_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln33_reg_1551 == 5'd0) & ~(select_ln33_reg_1551 == 5'd1) & ~(select_ln33_reg_1551 == 5'd2) & ~(select_ln33_reg_1551 == 5'd3) & ~(select_ln33_reg_1551 == 5'd4) & ~(select_ln33_reg_1551 == 5'd5) & ~(select_ln33_reg_1551 == 5'd6) & ~(select_ln33_reg_1551 == 5'd7) & ~(select_ln33_reg_1551 == 5'd8) & ~(select_ln33_reg_1551 == 5'd9) & ~(select_ln33_reg_1551 == 5'd10) & ~(select_ln33_reg_1551 == 5'd11) & ~(select_ln33_reg_1551 == 5'd12) & ~(select_ln33_reg_1551 == 5'd13) & ~(select_ln33_reg_1551 == 5'd14) & ~(select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_33_we0 = 1'b1;
    end else begin
        input_tile_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_34_ce0 = 1'b1;
    end else begin
        input_tile_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd0) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_34_we0 = 1'b1;
    end else begin
        input_tile_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_35_ce0 = 1'b1;
    end else begin
        input_tile_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd1) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_35_we0 = 1'b1;
    end else begin
        input_tile_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_36_ce0 = 1'b1;
    end else begin
        input_tile_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd2) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_36_we0 = 1'b1;
    end else begin
        input_tile_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_37_ce0 = 1'b1;
    end else begin
        input_tile_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd3) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_37_we0 = 1'b1;
    end else begin
        input_tile_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_38_ce0 = 1'b1;
    end else begin
        input_tile_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd4) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_38_we0 = 1'b1;
    end else begin
        input_tile_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_39_ce0 = 1'b1;
    end else begin
        input_tile_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd5) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_39_we0 = 1'b1;
    end else begin
        input_tile_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_3_ce0 = 1'b1;
    end else begin
        input_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd3) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_3_we0 = 1'b1;
    end else begin
        input_tile_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_40_ce0 = 1'b1;
    end else begin
        input_tile_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd6) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_40_we0 = 1'b1;
    end else begin
        input_tile_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_41_ce0 = 1'b1;
    end else begin
        input_tile_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd7) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_41_we0 = 1'b1;
    end else begin
        input_tile_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_42_ce0 = 1'b1;
    end else begin
        input_tile_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd8) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_42_we0 = 1'b1;
    end else begin
        input_tile_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_43_ce0 = 1'b1;
    end else begin
        input_tile_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd9) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_43_we0 = 1'b1;
    end else begin
        input_tile_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_44_ce0 = 1'b1;
    end else begin
        input_tile_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd10) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_44_we0 = 1'b1;
    end else begin
        input_tile_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_45_ce0 = 1'b1;
    end else begin
        input_tile_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd11) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_45_we0 = 1'b1;
    end else begin
        input_tile_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_46_ce0 = 1'b1;
    end else begin
        input_tile_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd12) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_46_we0 = 1'b1;
    end else begin
        input_tile_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_47_ce0 = 1'b1;
    end else begin
        input_tile_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd13) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_47_we0 = 1'b1;
    end else begin
        input_tile_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_48_ce0 = 1'b1;
    end else begin
        input_tile_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd14) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_48_we0 = 1'b1;
    end else begin
        input_tile_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_49_ce0 = 1'b1;
    end else begin
        input_tile_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_49_we0 = 1'b1;
    end else begin
        input_tile_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_4_ce0 = 1'b1;
    end else begin
        input_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd4) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_4_we0 = 1'b1;
    end else begin
        input_tile_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_50_ce0 = 1'b1;
    end else begin
        input_tile_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln33_reg_1551 == 5'd0) & ~(select_ln33_reg_1551 == 5'd1) & ~(select_ln33_reg_1551 == 5'd2) & ~(select_ln33_reg_1551 == 5'd3) & ~(select_ln33_reg_1551 == 5'd4) & ~(select_ln33_reg_1551 == 5'd5) & ~(select_ln33_reg_1551 == 5'd6) & ~(select_ln33_reg_1551 == 5'd7) & ~(select_ln33_reg_1551 == 5'd8) & ~(select_ln33_reg_1551 == 5'd9) & ~(select_ln33_reg_1551 == 5'd10) & ~(select_ln33_reg_1551 == 5'd11) & ~(select_ln33_reg_1551 == 5'd12) & ~(select_ln33_reg_1551 == 5'd13) & ~(select_ln33_reg_1551 == 5'd14) & ~(select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_50_we0 = 1'b1;
    end else begin
        input_tile_50_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_51_ce0 = 1'b1;
    end else begin
        input_tile_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd0) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_51_we0 = 1'b1;
    end else begin
        input_tile_51_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_52_ce0 = 1'b1;
    end else begin
        input_tile_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd1) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_52_we0 = 1'b1;
    end else begin
        input_tile_52_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_53_ce0 = 1'b1;
    end else begin
        input_tile_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd2) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_53_we0 = 1'b1;
    end else begin
        input_tile_53_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_54_ce0 = 1'b1;
    end else begin
        input_tile_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd3) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_54_we0 = 1'b1;
    end else begin
        input_tile_54_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_55_ce0 = 1'b1;
    end else begin
        input_tile_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd4) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_55_we0 = 1'b1;
    end else begin
        input_tile_55_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_56_ce0 = 1'b1;
    end else begin
        input_tile_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd5) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_56_we0 = 1'b1;
    end else begin
        input_tile_56_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_57_ce0 = 1'b1;
    end else begin
        input_tile_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd6) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_57_we0 = 1'b1;
    end else begin
        input_tile_57_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_58_ce0 = 1'b1;
    end else begin
        input_tile_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd7) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_58_we0 = 1'b1;
    end else begin
        input_tile_58_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_59_ce0 = 1'b1;
    end else begin
        input_tile_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd8) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_59_we0 = 1'b1;
    end else begin
        input_tile_59_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_5_ce0 = 1'b1;
    end else begin
        input_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd5) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_5_we0 = 1'b1;
    end else begin
        input_tile_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_60_ce0 = 1'b1;
    end else begin
        input_tile_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd9) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_60_we0 = 1'b1;
    end else begin
        input_tile_60_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_61_ce0 = 1'b1;
    end else begin
        input_tile_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd10) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_61_we0 = 1'b1;
    end else begin
        input_tile_61_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_62_ce0 = 1'b1;
    end else begin
        input_tile_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd11) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_62_we0 = 1'b1;
    end else begin
        input_tile_62_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_63_ce0 = 1'b1;
    end else begin
        input_tile_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd12) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_63_we0 = 1'b1;
    end else begin
        input_tile_63_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_64_ce0 = 1'b1;
    end else begin
        input_tile_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd13) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_64_we0 = 1'b1;
    end else begin
        input_tile_64_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_65_ce0 = 1'b1;
    end else begin
        input_tile_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd14) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_65_we0 = 1'b1;
    end else begin
        input_tile_65_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_66_ce0 = 1'b1;
    end else begin
        input_tile_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_66_we0 = 1'b1;
    end else begin
        input_tile_66_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_67_ce0 = 1'b1;
    end else begin
        input_tile_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln33_reg_1551 == 5'd0) & ~(select_ln33_reg_1551 == 5'd1) & ~(select_ln33_reg_1551 == 5'd2) & ~(select_ln33_reg_1551 == 5'd3) & ~(select_ln33_reg_1551 == 5'd4) & ~(select_ln33_reg_1551 == 5'd5) & ~(select_ln33_reg_1551 == 5'd6) & ~(select_ln33_reg_1551 == 5'd7) & ~(select_ln33_reg_1551 == 5'd8) & ~(select_ln33_reg_1551 == 5'd9) & ~(select_ln33_reg_1551 == 5'd10) & ~(select_ln33_reg_1551 == 5'd11) & ~(select_ln33_reg_1551 == 5'd12) & ~(select_ln33_reg_1551 == 5'd13) & ~(select_ln33_reg_1551 == 5'd14) & ~(select_ln33_reg_1551 == 5'd15) & (trunc_ln32_reg_1536 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_67_we0 = 1'b1;
    end else begin
        input_tile_67_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_6_ce0 = 1'b1;
    end else begin
        input_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd6) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_6_we0 = 1'b1;
    end else begin
        input_tile_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_7_ce0 = 1'b1;
    end else begin
        input_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd7) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_7_we0 = 1'b1;
    end else begin
        input_tile_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_8_ce0 = 1'b1;
    end else begin
        input_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd8) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_8_we0 = 1'b1;
    end else begin
        input_tile_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_9_ce0 = 1'b1;
    end else begin
        input_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd9) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_9_we0 = 1'b1;
    end else begin
        input_tile_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_ce0 = 1'b1;
    end else begin
        input_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln33_reg_1551 == 5'd0) & (trunc_ln32_reg_1536 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_tile_we0 = 1'b1;
    end else begin
        input_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_1_fu_1183_p2 = (indvar_flatten80_fu_252 + 15'd1);

assign add_ln32_fu_1195_p2 = (feat_fu_248 + 7'd1);

assign add_ln33_2_fu_1267_p2 = (indvar_flatten_fu_244 + 10'd1);

assign add_ln33_fu_1321_p2 = (select_ln32_fu_1304_p3 + 5'd1);

assign add_ln34_fu_1261_p2 = (select_ln33_fu_1253_p3 + 5'd1);

assign add_ln35_fu_1338_p2 = (zext_ln33_fu_1317_p1 + zext_ln35_fu_1334_p1);

assign and_ln32_fu_1241_p2 = (xor_ln32_fu_1229_p2 & icmp_ln34_fu_1235_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((conv1_to_conv2_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((conv1_to_conv2_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (conv1_to_conv2_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bitcast_ln35_fu_1416_p1 = conv1_to_conv2_dout;

assign icmp_ln32_fu_1177_p2 = ((indvar_flatten80_fu_252 == 15'd18496) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1201_p2 = ((indvar_flatten_fu_244 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1235_p2 = ((j_fu_236 == 5'd17) ? 1'b1 : 1'b0);

assign input_tile_10_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_10_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_11_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_11_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_12_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_12_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_13_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_13_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_14_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_14_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_15_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_15_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_16_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_16_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_17_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_17_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_18_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_18_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_19_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_19_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_1_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_1_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_20_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_20_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_21_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_21_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_22_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_22_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_23_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_23_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_24_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_24_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_25_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_25_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_26_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_26_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_27_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_27_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_28_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_28_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_29_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_29_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_2_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_2_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_30_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_30_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_31_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_31_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_32_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_32_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_33_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_33_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_34_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_34_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_35_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_35_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_36_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_36_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_37_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_37_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_38_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_38_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_39_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_39_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_3_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_3_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_40_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_40_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_41_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_41_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_42_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_42_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_43_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_43_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_44_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_44_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_45_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_45_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_46_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_46_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_47_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_47_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_48_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_48_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_49_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_49_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_4_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_4_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_50_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_50_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_51_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_51_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_52_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_52_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_53_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_53_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_54_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_54_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_55_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_55_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_56_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_56_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_57_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_57_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_58_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_58_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_59_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_59_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_5_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_5_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_60_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_60_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_61_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_61_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_62_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_62_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_63_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_63_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_64_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_64_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_65_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_65_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_66_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_66_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_67_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_67_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_6_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_6_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_7_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_7_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_8_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_8_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_9_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_9_d0 = bitcast_ln35_fu_1416_p1;

assign input_tile_address0 = zext_ln35_1_fu_1344_p1;

assign input_tile_d0 = bitcast_ln35_fu_1416_p1;

assign or_ln33_fu_1247_p2 = (icmp_ln33_fu_1201_p2 | and_ln32_fu_1241_p2);

assign or_ln_fu_1311_p3 = {{zext_ln32_mid2_v_reg_1540}, {zext_ln32_mid2_v_reg_1540}};

assign select_ln32_1_fu_1207_p3 = ((icmp_ln33_fu_1201_p2[0:0] == 1'b1) ? add_ln32_fu_1195_p2 : feat_fu_248);

assign select_ln32_fu_1304_p3 = ((icmp_ln33_reg_1531[0:0] == 1'b1) ? 5'd0 : i_fu_240);

assign select_ln33_2_fu_1327_p3 = ((and_ln32_reg_1546[0:0] == 1'b1) ? add_ln33_fu_1321_p2 : select_ln32_fu_1304_p3);

assign select_ln33_3_fu_1273_p3 = ((icmp_ln33_fu_1201_p2[0:0] == 1'b1) ? 10'd1 : add_ln33_2_fu_1267_p2);

assign select_ln33_fu_1253_p3 = ((or_ln33_fu_1247_p2[0:0] == 1'b1) ? 5'd0 : j_fu_236);

assign trunc_ln32_fu_1215_p1 = select_ln32_1_fu_1207_p3[1:0];

assign xor_ln32_fu_1229_p2 = (icmp_ln33_fu_1201_p2 ^ 1'd1);

assign zext_ln33_fu_1317_p1 = or_ln_fu_1311_p3;

assign zext_ln35_1_fu_1344_p1 = add_ln35_fu_1338_p2;

assign zext_ln35_fu_1334_p1 = select_ln33_2_fu_1327_p3;

endmodule //srcnn_conv2_Pipeline_STREAM_READ_CONV2_VITIS_LOOP_33_1_VITIS_LOOP_34_2
