// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv3_from_precomputed_conv2_Pipeline_VITIS_LOOP_186_5_VITIS_LOOP_187_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln189,
        conv3_weights_address0,
        conv3_weights_ce0,
        conv3_weights_q0,
        mux_case_487236_out,
        mux_case_487236_out_ap_vld,
        mux_case_385230_out,
        mux_case_385230_out_ap_vld,
        mux_case_283224_out,
        mux_case_283224_out_ap_vld,
        mux_case_181218_out,
        mux_case_181218_out_ap_vld,
        mux_case_079212_out,
        mux_case_079212_out_ap_vld,
        mux_case_476206_out,
        mux_case_476206_out_ap_vld,
        mux_case_374200_out,
        mux_case_374200_out_ap_vld,
        mux_case_272194_out,
        mux_case_272194_out_ap_vld,
        mux_case_170188_out,
        mux_case_170188_out_ap_vld,
        mux_case_068182_out,
        mux_case_068182_out_ap_vld,
        mux_case_465176_out,
        mux_case_465176_out_ap_vld,
        mux_case_363170_out,
        mux_case_363170_out_ap_vld,
        mux_case_261164_out,
        mux_case_261164_out_ap_vld,
        mux_case_159158_out,
        mux_case_159158_out_ap_vld,
        mux_case_057152_out,
        mux_case_057152_out_ap_vld,
        mux_case_454146_out,
        mux_case_454146_out_ap_vld,
        mux_case_352140_out,
        mux_case_352140_out_ap_vld,
        mux_case_250134_out,
        mux_case_250134_out_ap_vld,
        mux_case_148128_out,
        mux_case_148128_out_ap_vld,
        mux_case_046122_out,
        mux_case_046122_out_ap_vld,
        mux_case_4115_out,
        mux_case_4115_out_ap_vld,
        mux_case_3109_out,
        mux_case_3109_out_ap_vld,
        mux_case_2103_out,
        mux_case_2103_out_ap_vld,
        mux_case_197_out,
        mux_case_197_out_ap_vld,
        mux_case_091_out,
        mux_case_091_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] add_ln189;
output  [9:0] conv3_weights_address0;
output   conv3_weights_ce0;
input  [31:0] conv3_weights_q0;
output  [31:0] mux_case_487236_out;
output   mux_case_487236_out_ap_vld;
output  [31:0] mux_case_385230_out;
output   mux_case_385230_out_ap_vld;
output  [31:0] mux_case_283224_out;
output   mux_case_283224_out_ap_vld;
output  [31:0] mux_case_181218_out;
output   mux_case_181218_out_ap_vld;
output  [31:0] mux_case_079212_out;
output   mux_case_079212_out_ap_vld;
output  [31:0] mux_case_476206_out;
output   mux_case_476206_out_ap_vld;
output  [31:0] mux_case_374200_out;
output   mux_case_374200_out_ap_vld;
output  [31:0] mux_case_272194_out;
output   mux_case_272194_out_ap_vld;
output  [31:0] mux_case_170188_out;
output   mux_case_170188_out_ap_vld;
output  [31:0] mux_case_068182_out;
output   mux_case_068182_out_ap_vld;
output  [31:0] mux_case_465176_out;
output   mux_case_465176_out_ap_vld;
output  [31:0] mux_case_363170_out;
output   mux_case_363170_out_ap_vld;
output  [31:0] mux_case_261164_out;
output   mux_case_261164_out_ap_vld;
output  [31:0] mux_case_159158_out;
output   mux_case_159158_out_ap_vld;
output  [31:0] mux_case_057152_out;
output   mux_case_057152_out_ap_vld;
output  [31:0] mux_case_454146_out;
output   mux_case_454146_out_ap_vld;
output  [31:0] mux_case_352140_out;
output   mux_case_352140_out_ap_vld;
output  [31:0] mux_case_250134_out;
output   mux_case_250134_out_ap_vld;
output  [31:0] mux_case_148128_out;
output   mux_case_148128_out_ap_vld;
output  [31:0] mux_case_046122_out;
output   mux_case_046122_out_ap_vld;
output  [31:0] mux_case_4115_out;
output   mux_case_4115_out_ap_vld;
output  [31:0] mux_case_3109_out;
output   mux_case_3109_out_ap_vld;
output  [31:0] mux_case_2103_out;
output   mux_case_2103_out_ap_vld;
output  [31:0] mux_case_197_out;
output   mux_case_197_out_ap_vld;
output  [31:0] mux_case_091_out;
output   mux_case_091_out_ap_vld;

reg ap_idle;
reg conv3_weights_ce0;
reg mux_case_487236_out_ap_vld;
reg mux_case_385230_out_ap_vld;
reg mux_case_283224_out_ap_vld;
reg mux_case_181218_out_ap_vld;
reg mux_case_079212_out_ap_vld;
reg mux_case_476206_out_ap_vld;
reg mux_case_374200_out_ap_vld;
reg mux_case_272194_out_ap_vld;
reg mux_case_170188_out_ap_vld;
reg mux_case_068182_out_ap_vld;
reg mux_case_465176_out_ap_vld;
reg mux_case_363170_out_ap_vld;
reg mux_case_261164_out_ap_vld;
reg mux_case_159158_out_ap_vld;
reg mux_case_057152_out_ap_vld;
reg mux_case_454146_out_ap_vld;
reg mux_case_352140_out_ap_vld;
reg mux_case_250134_out_ap_vld;
reg mux_case_148128_out_ap_vld;
reg mux_case_046122_out_ap_vld;
reg mux_case_4115_out_ap_vld;
reg mux_case_3109_out_ap_vld;
reg mux_case_2103_out_ap_vld;
reg mux_case_197_out_ap_vld;
reg mux_case_091_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln186_fu_430_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [4:0] add_ln186_1_fu_436_p2;
reg   [4:0] add_ln186_1_reg_944;
wire   [2:0] select_ln186_fu_460_p3;
reg   [2:0] select_ln186_reg_949;
wire   [2:0] select_ln186_1_fu_468_p3;
reg   [2:0] select_ln186_1_reg_954;
wire   [63:0] zext_ln189_3_fu_518_p1;
reg   [2:0] kx_fu_106;
wire   [2:0] add_ln187_fu_652_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_kx_load;
reg   [2:0] ky_fu_110;
reg   [2:0] ap_sig_allocacmp_ky_load;
reg   [4:0] indvar_flatten_fu_114;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] mux_case_091_fu_118;
wire   [31:0] bitcast_ln189_fu_523_p1;
reg   [31:0] mux_case_197_fu_122;
reg   [31:0] mux_case_2103_fu_126;
reg   [31:0] mux_case_3109_fu_130;
reg   [31:0] mux_case_4115_fu_134;
reg   [31:0] mux_case_046122_fu_138;
reg   [31:0] mux_case_148128_fu_142;
reg   [31:0] mux_case_250134_fu_146;
reg   [31:0] mux_case_352140_fu_150;
reg   [31:0] mux_case_454146_fu_154;
reg   [31:0] mux_case_057152_fu_158;
reg   [31:0] mux_case_159158_fu_162;
reg   [31:0] mux_case_261164_fu_166;
reg   [31:0] mux_case_363170_fu_170;
reg   [31:0] mux_case_465176_fu_174;
reg   [31:0] mux_case_068182_fu_178;
reg   [31:0] mux_case_170188_fu_182;
reg   [31:0] mux_case_272194_fu_186;
reg   [31:0] mux_case_374200_fu_190;
reg   [31:0] mux_case_476206_fu_194;
reg   [31:0] mux_case_079212_fu_198;
reg   [31:0] mux_case_181218_fu_202;
reg   [31:0] mux_case_283224_fu_206;
reg   [31:0] mux_case_385230_fu_210;
reg   [31:0] mux_case_487236_fu_214;
wire   [0:0] icmp_ln187_fu_454_p2;
wire   [2:0] add_ln186_fu_448_p2;
wire   [8:0] zext_ln189_fu_476_p1;
wire   [8:0] add_ln189_1_fu_480_p2;
wire   [7:0] trunc_ln189_fu_490_p1;
wire   [9:0] p_shl4_fu_494_p3;
wire   [9:0] zext_ln189_1_fu_486_p1;
wire   [9:0] add_ln189_2_fu_502_p2;
wire   [9:0] zext_ln189_2_fu_508_p1;
wire   [9:0] add_ln189_3_fu_512_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        indvar_flatten_fu_114 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_fu_114 <= add_ln186_1_reg_944;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        kx_fu_106 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kx_fu_106 <= add_ln187_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ky_fu_110 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ky_fu_110 <= select_ln186_1_reg_954;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln186_1_reg_944 <= add_ln186_1_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd1))) begin
        mux_case_046122_fu_138 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd2))) begin
        mux_case_057152_fu_158 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd3))) begin
        mux_case_068182_fu_178 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_1_reg_954 == 3'd3) & ~(select_ln186_1_reg_954 == 3'd2) & ~(select_ln186_1_reg_954 == 3'd1) & ~(select_ln186_1_reg_954 == 3'd0) & (select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mux_case_079212_fu_198 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd0))) begin
        mux_case_091_fu_118 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd1) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd1))) begin
        mux_case_148128_fu_142 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd1) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd2))) begin
        mux_case_159158_fu_162 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd1) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd3))) begin
        mux_case_170188_fu_182 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_1_reg_954 == 3'd3) & ~(select_ln186_1_reg_954 == 3'd2) & ~(select_ln186_1_reg_954 == 3'd1) & ~(select_ln186_1_reg_954 == 3'd0) & (select_ln186_reg_949 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mux_case_181218_fu_202 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd1) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd0))) begin
        mux_case_197_fu_122 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd2) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd0))) begin
        mux_case_2103_fu_126 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd2) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd1))) begin
        mux_case_250134_fu_146 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd2) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd2))) begin
        mux_case_261164_fu_166 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd2) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd3))) begin
        mux_case_272194_fu_186 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_1_reg_954 == 3'd3) & ~(select_ln186_1_reg_954 == 3'd2) & ~(select_ln186_1_reg_954 == 3'd1) & ~(select_ln186_1_reg_954 == 3'd0) & (select_ln186_reg_949 == 3'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        mux_case_283224_fu_206 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd3) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd0))) begin
        mux_case_3109_fu_130 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd3) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd1))) begin
        mux_case_352140_fu_150 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd3) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd2))) begin
        mux_case_363170_fu_170 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln186_reg_949 == 3'd3) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd3))) begin
        mux_case_374200_fu_190 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_1_reg_954 == 3'd3) & ~(select_ln186_1_reg_954 == 3'd2) & ~(select_ln186_1_reg_954 == 3'd1) & ~(select_ln186_1_reg_954 == 3'd0) & (select_ln186_reg_949 == 3'd3) & (1'b1 == ap_CS_fsm_state2))) begin
        mux_case_385230_fu_210 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_reg_949 == 3'd3) & ~(select_ln186_reg_949 == 3'd2) & ~(select_ln186_reg_949 == 3'd1) & ~(select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd0))) begin
        mux_case_4115_fu_134 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_reg_949 == 3'd3) & ~(select_ln186_reg_949 == 3'd2) & ~(select_ln186_reg_949 == 3'd1) & ~(select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd1))) begin
        mux_case_454146_fu_154 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_reg_949 == 3'd3) & ~(select_ln186_reg_949 == 3'd2) & ~(select_ln186_reg_949 == 3'd1) & ~(select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd2))) begin
        mux_case_465176_fu_174 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_reg_949 == 3'd3) & ~(select_ln186_reg_949 == 3'd2) & ~(select_ln186_reg_949 == 3'd1) & ~(select_ln186_reg_949 == 3'd0) & (1'b1 == ap_CS_fsm_state2) & (select_ln186_1_reg_954 == 3'd3))) begin
        mux_case_476206_fu_194 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln186_1_reg_954 == 3'd3) & ~(select_ln186_1_reg_954 == 3'd2) & ~(select_ln186_1_reg_954 == 3'd1) & ~(select_ln186_reg_949 == 3'd3) & ~(select_ln186_reg_949 == 3'd2) & ~(select_ln186_reg_949 == 3'd1) & ~(select_ln186_reg_949 == 3'd0) & ~(select_ln186_1_reg_954 == 3'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mux_case_487236_fu_214 <= bitcast_ln189_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        select_ln186_1_reg_954 <= select_ln186_1_fu_468_p3;
        select_ln186_reg_949 <= select_ln186_fu_460_p3;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_114;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_kx_load = 3'd0;
    end else begin
        ap_sig_allocacmp_kx_load = kx_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ky_load = 3'd0;
    end else begin
        ap_sig_allocacmp_ky_load = ky_fu_110;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv3_weights_ce0 = 1'b1;
    end else begin
        conv3_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_046122_out_ap_vld = 1'b1;
    end else begin
        mux_case_046122_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_057152_out_ap_vld = 1'b1;
    end else begin
        mux_case_057152_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_068182_out_ap_vld = 1'b1;
    end else begin
        mux_case_068182_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_079212_out_ap_vld = 1'b1;
    end else begin
        mux_case_079212_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_091_out_ap_vld = 1'b1;
    end else begin
        mux_case_091_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_148128_out_ap_vld = 1'b1;
    end else begin
        mux_case_148128_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_159158_out_ap_vld = 1'b1;
    end else begin
        mux_case_159158_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_170188_out_ap_vld = 1'b1;
    end else begin
        mux_case_170188_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_181218_out_ap_vld = 1'b1;
    end else begin
        mux_case_181218_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_197_out_ap_vld = 1'b1;
    end else begin
        mux_case_197_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_2103_out_ap_vld = 1'b1;
    end else begin
        mux_case_2103_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_250134_out_ap_vld = 1'b1;
    end else begin
        mux_case_250134_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_261164_out_ap_vld = 1'b1;
    end else begin
        mux_case_261164_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_272194_out_ap_vld = 1'b1;
    end else begin
        mux_case_272194_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_283224_out_ap_vld = 1'b1;
    end else begin
        mux_case_283224_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_3109_out_ap_vld = 1'b1;
    end else begin
        mux_case_3109_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_352140_out_ap_vld = 1'b1;
    end else begin
        mux_case_352140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_363170_out_ap_vld = 1'b1;
    end else begin
        mux_case_363170_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_374200_out_ap_vld = 1'b1;
    end else begin
        mux_case_374200_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_385230_out_ap_vld = 1'b1;
    end else begin
        mux_case_385230_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_4115_out_ap_vld = 1'b1;
    end else begin
        mux_case_4115_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_454146_out_ap_vld = 1'b1;
    end else begin
        mux_case_454146_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_465176_out_ap_vld = 1'b1;
    end else begin
        mux_case_465176_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_476206_out_ap_vld = 1'b1;
    end else begin
        mux_case_476206_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_487236_out_ap_vld = 1'b1;
    end else begin
        mux_case_487236_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln186_fu_430_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln186_1_fu_436_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln186_fu_448_p2 = (ap_sig_allocacmp_ky_load + 3'd1);

assign add_ln187_fu_652_p2 = (select_ln186_reg_949 + 3'd1);

assign add_ln189_1_fu_480_p2 = (add_ln189 + zext_ln189_fu_476_p1);

assign add_ln189_2_fu_502_p2 = (p_shl4_fu_494_p3 + zext_ln189_1_fu_486_p1);

assign add_ln189_3_fu_512_p2 = (add_ln189_2_fu_502_p2 + zext_ln189_2_fu_508_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln189_fu_523_p1 = conv3_weights_q0;

assign conv3_weights_address0 = zext_ln189_3_fu_518_p1;

assign icmp_ln186_fu_430_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_454_p2 = ((ap_sig_allocacmp_kx_load == 3'd5) ? 1'b1 : 1'b0);

assign mux_case_046122_out = mux_case_046122_fu_138;

assign mux_case_057152_out = mux_case_057152_fu_158;

assign mux_case_068182_out = mux_case_068182_fu_178;

assign mux_case_079212_out = mux_case_079212_fu_198;

assign mux_case_091_out = mux_case_091_fu_118;

assign mux_case_148128_out = mux_case_148128_fu_142;

assign mux_case_159158_out = mux_case_159158_fu_162;

assign mux_case_170188_out = mux_case_170188_fu_182;

assign mux_case_181218_out = mux_case_181218_fu_202;

assign mux_case_197_out = mux_case_197_fu_122;

assign mux_case_2103_out = mux_case_2103_fu_126;

assign mux_case_250134_out = mux_case_250134_fu_146;

assign mux_case_261164_out = mux_case_261164_fu_166;

assign mux_case_272194_out = mux_case_272194_fu_186;

assign mux_case_283224_out = mux_case_283224_fu_206;

assign mux_case_3109_out = mux_case_3109_fu_130;

assign mux_case_352140_out = mux_case_352140_fu_150;

assign mux_case_363170_out = mux_case_363170_fu_170;

assign mux_case_374200_out = mux_case_374200_fu_190;

assign mux_case_385230_out = mux_case_385230_fu_210;

assign mux_case_4115_out = mux_case_4115_fu_134;

assign mux_case_454146_out = mux_case_454146_fu_154;

assign mux_case_465176_out = mux_case_465176_fu_174;

assign mux_case_476206_out = mux_case_476206_fu_194;

assign mux_case_487236_out = mux_case_487236_fu_214;

assign p_shl4_fu_494_p3 = {{trunc_ln189_fu_490_p1}, {2'd0}};

assign select_ln186_1_fu_468_p3 = ((icmp_ln187_fu_454_p2[0:0] == 1'b1) ? add_ln186_fu_448_p2 : ap_sig_allocacmp_ky_load);

assign select_ln186_fu_460_p3 = ((icmp_ln187_fu_454_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_kx_load);

assign trunc_ln189_fu_490_p1 = add_ln189_1_fu_480_p2[7:0];

assign zext_ln189_1_fu_486_p1 = add_ln189_1_fu_480_p2;

assign zext_ln189_2_fu_508_p1 = select_ln186_fu_460_p3;

assign zext_ln189_3_fu_518_p1 = add_ln189_3_fu_512_p2;

assign zext_ln189_fu_476_p1 = select_ln186_1_fu_468_p3;

endmodule //srcnn_conv3_from_precomputed_conv2_Pipeline_VITIS_LOOP_186_5_VITIS_LOOP_187_6
