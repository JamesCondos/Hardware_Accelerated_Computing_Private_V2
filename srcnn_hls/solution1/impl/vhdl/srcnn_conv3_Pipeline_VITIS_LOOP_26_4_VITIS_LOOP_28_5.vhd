-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv3_Pipeline_VITIS_LOOP_26_4_VITIS_LOOP_28_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv3_weights_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv3_weights_ce0 : OUT STD_LOGIC;
    conv3_weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv3_weights_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv3_weights_ce1 : OUT STD_LOGIC;
    conv3_weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln26 : IN STD_LOGIC_VECTOR (7 downto 0);
    zext_ln13_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    bitcast_ln13 : IN STD_LOGIC_VECTOR (63 downto 0);
    select_ln13_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    convolution_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    convolution_out_ap_vld : OUT STD_LOGIC;
    layer2_output_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    layer2_output_ce0 : OUT STD_LOGIC;
    layer2_output_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_112_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_112_p_ce : OUT STD_LOGIC;
    grp_fu_407_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_407_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_407_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_407_p_ce : OUT STD_LOGIC;
    grp_fu_411_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_411_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_411_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv3_Pipeline_VITIS_LOOP_26_4_VITIS_LOOP_28_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv10_19 : STD_LOGIC_VECTOR (9 downto 0) := "0000011001";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_406FC00000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000001101111110000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv10_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000010100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state32_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal icmp_ln26_reg_2453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage11 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal reg_286 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state31_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state29_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state28_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln13_1_cast_fu_310_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln13_1_cast_reg_2446 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln26_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_fu_371_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln26_reg_2457 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln26_1_fu_379_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln26_1_reg_2462 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln33_fu_391_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln33_reg_2468 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln33_3_fu_403_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln33_3_reg_2475 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1432_1_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln488_7_fu_574_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_7_reg_2497 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_5_fu_606_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln515_5_reg_2502 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_19_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2507 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_3_fu_650_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_3_reg_2512 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_20_reg_2517 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln33_fu_698_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln33_reg_2522 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal add_ln33_8_fu_737_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_8_reg_2540 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1432_2_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_weights_load_reg_2550 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_weights_load_1_reg_2555 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln33_13_fu_801_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln33_13_reg_2560 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_2_fu_807_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln33_2_reg_2565 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sext_ln1432_3_fu_820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_weights_load_2_reg_2580 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_weights_load_3_reg_2585 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1432_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_weights_load_4_reg_2595 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_sign_reg_2600 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln15_fu_1003_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln15_reg_2605 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2610 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_fu_1047_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_reg_2615 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_1_reg_2620 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1432_1_fu_1070_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1105_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_reg_2630 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state26_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal x_assign_3_1_reg_2638 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_3_fu_1267_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_3_reg_2648 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_1_fu_1299_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln515_1_reg_2653 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_7_fu_1313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_1_fu_1343_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_1_reg_2663 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_8_reg_2668 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln33_2_fu_1447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_3_4_reg_2683 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_5_fu_1578_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_5_reg_2688 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_3_fu_1610_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln515_3_reg_2693 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_13_fu_1624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2698 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_2_fu_1654_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_2_reg_2703 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_14_reg_2708 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln33_fu_1672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state30_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal mul_2_reg_2723 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln488_9_fu_1890_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_9_reg_2728 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_7_fu_1922_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln515_7_reg_2733 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_23_fu_1936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_2738 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_4_fu_1966_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_4_reg_2743 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_24_reg_2748 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln33_1_fu_1984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln488_11_fu_2205_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln488_11_reg_2768 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_9_fu_2237_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln515_9_reg_2773 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_27_fu_2251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_2778 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln18_5_fu_2281_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_5_reg_2783 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_28_reg_2788 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_1_reg_2793 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal bitcast_ln33_3_fu_2299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln33_4_fu_2389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_2813 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln33_4_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln33_5_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln33_6_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln33_7_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln33_8_fu_811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln33_14_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln33_10_fu_1442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln33_12_fu_1757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln33_16_fu_2069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal zext_ln33_18_fu_2384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal convolution_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal kernel_x_fu_138 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln28_fu_2393_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_kernel_x_load : STD_LOGIC_VECTOR (2 downto 0);
    signal in_feat_fu_142 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_allocacmp_in_feat_load : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln26_1_fu_347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal grp_fu_275_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal grp_fu_279_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal grp_fu_283_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal icmp_ln28_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln26_fu_359_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln33_fu_391_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln33_fu_391_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln33_4_fu_407_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_fu_397_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_5_fu_418_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln26_cast_fu_314_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1432_5_fu_429_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1432_fu_435_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1432_fu_439_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_fp_exp_6_fu_458_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_6_fu_468_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_7_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_8_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_10_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_3_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_3_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_6_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_7_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_3_fu_450_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_8_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_15_fu_520_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_7_fu_528_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_7_fu_538_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_11_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_12_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_7_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_7_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_6_fu_566_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_3_fu_592_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_5_cast_fu_596_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_1_1_fu_582_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_6_fu_610_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_3_fu_614_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_3_fu_628_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_6_fu_634_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_6_fu_638_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_7_fu_646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_3_fu_654_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_2_fu_681_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln33_2_fu_688_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln33_1_fu_678_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln33_fu_692_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln33_1_fu_702_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_6_fu_717_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_2_fu_707_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_7_fu_727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln33_3_fu_712_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1432_1_fu_742_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln18_3_fu_759_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_3_fu_763_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_766_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln18_7_fu_776_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_17_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln59_2_fu_783_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln59_2_fu_789_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln33_13_fu_797_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1432_2_fu_815_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1432_3_fu_825_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal data_1_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_fu_847_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_fu_857_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_2_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_fu_839_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_2_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_12_fu_909_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_1_fu_917_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_1_fu_927_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_2_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_3_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_1_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_fu_955_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_fu_963_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_fu_989_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_993_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_fu_979_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_fu_1007_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_fu_1011_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_fu_1025_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_fu_1031_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_fu_1035_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_1_fu_1043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_fu_1051_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal add_ln1432_4_fu_1065_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln18_fu_1075_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_fu_1079_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_1082_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal val_fu_1092_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_2_fu_1099_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl3_fu_1115_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln33_3_fu_1112_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln33_3_fu_1122_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln33_14_fu_1128_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal data_3_fu_1139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_2_fu_1151_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_2_fu_1161_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_3_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_4_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_1_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_1_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_2_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_3_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_1_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_4_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_13_fu_1213_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_3_fu_1221_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_3_fu_1231_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_5_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_6_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_3_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_3_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_2_fu_1259_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_1_fu_1285_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_1_cast_fu_1289_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_s_fu_1275_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_2_fu_1303_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_1_fu_1307_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_1_fu_1321_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_2_fu_1327_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_2_fu_1331_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_3_fu_1339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_1_fu_1347_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal shl_ln18_1_fu_1368_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_1_fu_1372_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_fu_1375_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln18_3_fu_1385_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_1361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln59_fu_1392_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln59_fu_1398_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln33_9_fu_1406_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln33_9_fu_1410_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_fu_1419_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl5_fu_1423_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln33_1_fu_1415_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln33_1_fu_1431_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln33_10_fu_1437_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal data_5_fu_1451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_4_fu_1462_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_4_fu_1472_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_5_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_6_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_7_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_2_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_2_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_4_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_5_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_2_fu_1454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_6_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_14_fu_1524_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_5_fu_1532_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_5_fu_1542_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_8_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_9_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_5_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_5_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_4_fu_1570_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_2_fu_1596_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_3_cast_fu_1600_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_1_s_fu_1586_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_4_fu_1614_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_2_fu_1618_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_2_fu_1632_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_4_fu_1638_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_4_fu_1642_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_5_fu_1650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_2_fu_1658_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal shl_ln18_2_fu_1683_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_2_fu_1687_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_9_fu_1690_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln18_5_fu_1700_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_fu_1676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln59_1_fu_1707_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln59_1_fu_1713_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln33_11_fu_1721_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln33_11_fu_1725_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_1_fu_1734_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl4_fu_1738_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln33_2_fu_1730_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln33_2_fu_1746_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln33_12_fu_1752_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal data_8_fu_1762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_8_fu_1774_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_8_fu_1784_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_9_fu_1788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_10_fu_1794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_13_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_4_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_4_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_8_fu_1818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_9_fu_1824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_4_fu_1766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_10_fu_1830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_16_fu_1836_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_9_fu_1844_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_9_fu_1854_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_14_fu_1858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_15_fu_1864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_9_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_9_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_8_fu_1882_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_4_fu_1908_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_7_cast_fu_1912_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_1_2_fu_1898_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_8_fu_1926_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_4_fu_1930_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_4_fu_1944_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_8_fu_1950_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_8_fu_1954_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_9_fu_1962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_4_fu_1970_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal shl_ln18_4_fu_1995_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_4_fu_1999_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_fu_2002_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln18_9_fu_2012_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_22_fu_1988_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln59_3_fu_2019_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln59_3_fu_2025_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln33_15_fu_2033_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln33_15_fu_2037_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_3_fu_2046_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl2_fu_2050_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln33_4_fu_2042_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln33_4_fu_2058_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln33_16_fu_2064_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal data_10_fu_2078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_10_fu_2089_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_10_fu_2099_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_11_fu_2103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_12_fu_2109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_16_fu_2121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_5_fu_2127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_5_fu_2115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_10_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_11_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_5_fu_2081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_12_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_17_fu_2151_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_11_fu_2159_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_11_fu_2169_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln18_17_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_18_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ymaggreater_11_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_11_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln488_10_fu_2197_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln534_5_fu_2223_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_9_cast_fu_2227_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_1_3_fu_2213_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_10_fu_2241_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_5_fu_2245_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_5_fu_2259_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_10_fu_2265_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_10_fu_2269_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_11_fu_2277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln18_5_fu_2285_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal shl_ln18_5_fu_2310_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln21_5_fu_2314_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_fu_2317_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln18_11_fu_2327_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_fu_2303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln59_4_fu_2334_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln59_4_fu_2340_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln33_17_fu_2348_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln33_17_fu_2352_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_4_fu_2361_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl1_fu_2365_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln33_5_fu_2357_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln33_5_fu_2373_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln33_18_fu_2379_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage16_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal mul_ln33_fu_391_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_sitodp_32s_64_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component srcnn_mul_6ns_6ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_6ns_6ns_10_1_1_U25 : component srcnn_mul_6ns_6ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        dout_WIDTH => 10)
    port map (
        din0 => mul_ln33_fu_391_p0,
        din1 => mul_ln33_fu_391_p1,
        dout => mul_ln33_fu_391_p2);

    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage11,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage11)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage19_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    convolution_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                convolution_fu_134 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                convolution_fu_134 <= grp_fu_112_p_dout0;
            end if; 
        end if;
    end process;

    in_feat_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln26_fu_341_p2 = ap_const_lv1_0))) then 
                    in_feat_fu_142 <= select_ln26_1_fu_379_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    in_feat_fu_142 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln26_fu_341_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_146 <= add_ln26_1_fu_347_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_146 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    kernel_x_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_x_fu_138 <= ap_const_lv3_0;
            elsif (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                kernel_x_fu_138 <= add_ln28_fu_2393_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln33_13_reg_2560 <= add_ln33_13_fu_801_p2;
                add_ln33_8_reg_2540 <= add_ln33_8_fu_737_p2;
                sext_ln33_reg_2522 <= sext_ln33_fu_698_p1;
                trunc_ln33_2_reg_2565 <= trunc_ln33_2_fu_807_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                conv3_weights_load_1_reg_2555 <= conv3_weights_q0;
                conv3_weights_load_reg_2550 <= conv3_weights_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                conv3_weights_load_2_reg_2580 <= conv3_weights_q1;
                conv3_weights_load_3_reg_2585 <= conv3_weights_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                conv3_weights_load_4_reg_2595 <= conv3_weights_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln26_reg_2453 <= icmp_ln26_fu_341_p2;
                    zext_ln13_1_cast_reg_2446(7 downto 0) <= zext_ln13_1_cast_fu_310_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then
                mul_1_reg_2793 <= grp_fu_407_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul_2_reg_2723 <= grp_fu_407_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                mul_4_reg_2813 <= grp_fu_407_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln26_fu_341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln33_reg_2468 <= mul_ln33_fu_391_p2;
                select_ln26_1_reg_2462 <= select_ln26_1_fu_379_p3;
                select_ln26_reg_2457 <= select_ln26_fu_371_p3;
                select_ln488_7_reg_2497 <= select_ln488_7_fu_574_p3;
                tmp_19_reg_2507 <= add_ln515_3_fu_614_p2(11 downto 11);
                tmp_20_reg_2517 <= lshr_ln18_3_fu_654_p2(53 downto 53);
                    zext_ln18_3_reg_2512(31 downto 0) <= zext_ln18_3_fu_650_p1(31 downto 0);
                    zext_ln33_3_reg_2475(2 downto 0) <= zext_ln33_3_fu_403_p1(2 downto 0);
                    zext_ln515_5_reg_2502(52 downto 1) <= zext_ln515_5_fu_606_p1(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_286 <= grp_fu_411_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_290 <= layer2_output_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_295 <= layer2_output_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then
                reg_300 <= grp_fu_407_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_305 <= grp_fu_112_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                result_reg_2630 <= result_fu_1105_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then
                select_ln488_11_reg_2768 <= select_ln488_11_fu_2205_p3;
                tmp_27_reg_2778 <= add_ln515_5_fu_2245_p2(11 downto 11);
                tmp_28_reg_2788 <= lshr_ln18_5_fu_2285_p2(53 downto 53);
                    zext_ln18_5_reg_2783(31 downto 0) <= zext_ln18_5_fu_2281_p1(31 downto 0);
                    zext_ln515_9_reg_2773(52 downto 1) <= zext_ln515_9_fu_2237_p1(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                select_ln488_3_reg_2648 <= select_ln488_3_fu_1267_p3;
                tmp_7_reg_2658 <= add_ln515_1_fu_1307_p2(11 downto 11);
                tmp_8_reg_2668 <= lshr_ln18_1_fu_1347_p2(53 downto 53);
                    zext_ln18_1_reg_2663(31 downto 0) <= zext_ln18_1_fu_1343_p1(31 downto 0);
                    zext_ln515_1_reg_2653(52 downto 1) <= zext_ln515_1_fu_1299_p1(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                select_ln488_5_reg_2688 <= select_ln488_5_fu_1578_p3;
                tmp_13_reg_2698 <= add_ln515_2_fu_1618_p2(11 downto 11);
                tmp_14_reg_2708 <= lshr_ln18_2_fu_1658_p2(53 downto 53);
                    zext_ln18_2_reg_2703(31 downto 0) <= zext_ln18_2_fu_1654_p1(31 downto 0);
                    zext_ln515_3_reg_2693(52 downto 1) <= zext_ln515_3_fu_1610_p1(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                select_ln488_9_reg_2728 <= select_ln488_9_fu_1890_p3;
                tmp_23_reg_2738 <= add_ln515_4_fu_1930_p2(11 downto 11);
                tmp_24_reg_2748 <= lshr_ln18_4_fu_1970_p2(53 downto 53);
                    zext_ln18_4_reg_2743(31 downto 0) <= zext_ln18_4_fu_1966_p1(31 downto 0);
                    zext_ln515_7_reg_2733(52 downto 1) <= zext_ln515_7_fu_1922_p1(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_1_reg_2620 <= lshr_ln18_fu_1051_p2(53 downto 53);
                tmp_reg_2610 <= add_ln515_fu_1011_p2(11 downto 11);
                xs_sign_reg_2600 <= data_fu_963_p3(63 downto 63);
                    zext_ln15_reg_2605(52 downto 1) <= zext_ln15_fu_1003_p1(52 downto 1);
                    zext_ln18_reg_2615(31 downto 0) <= zext_ln18_fu_1047_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                x_assign_3_1_reg_2638 <= grp_fu_411_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_reg_2453 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                x_assign_3_4_reg_2683 <= grp_fu_411_p_dout0;
            end if;
        end if;
    end process;
    zext_ln13_1_cast_reg_2446(8) <= '0';
    zext_ln33_3_reg_2475(9 downto 3) <= "0000000";
    zext_ln515_5_reg_2502(0) <= '0';
    zext_ln515_5_reg_2502(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_3_reg_2512(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln15_reg_2605(0) <= '0';
    zext_ln15_reg_2605(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_reg_2615(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln515_1_reg_2653(0) <= '0';
    zext_ln515_1_reg_2653(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_1_reg_2663(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln515_3_reg_2693(0) <= '0';
    zext_ln515_3_reg_2693(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_2_reg_2703(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln515_7_reg_2733(0) <= '0';
    zext_ln515_7_reg_2733(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_4_reg_2743(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln515_9_reg_2773(0) <= '0';
    zext_ln515_9_reg_2773(136 downto 53) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    zext_ln18_5_reg_2783(136 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage11_subdone, ap_condition_exit_pp0_iter0_stage11, ap_block_pp0_stage19_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage11)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1432_1_fu_742_p2 <= std_logic_vector(unsigned(zext_ln13_1_cast_reg_2446) + unsigned(ap_const_lv9_1FE));
    add_ln1432_2_fu_815_p2 <= std_logic_vector(unsigned(zext_ln13_1_cast_reg_2446) + unsigned(ap_const_lv9_1FF));
    add_ln1432_3_fu_825_p2 <= std_logic_vector(unsigned(select_ln13_1) + unsigned(ap_const_lv8_1));
    add_ln1432_4_fu_1065_p2 <= std_logic_vector(unsigned(zext_ln13_1_cast_reg_2446) + unsigned(ap_const_lv9_2));
    add_ln1432_5_fu_429_p2 <= std_logic_vector(unsigned(zext_ln26_cast_fu_314_p1) + unsigned(ap_const_lv9_1FE));
    add_ln1432_fu_439_p2 <= std_logic_vector(signed(sext_ln1432_fu_435_p1) + signed(zext_ln33_3_fu_403_p1));
    add_ln26_1_fu_347_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln26_fu_359_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_in_feat_load) + unsigned(ap_const_lv6_1));
    add_ln28_fu_2393_p2 <= std_logic_vector(unsigned(select_ln26_reg_2457) + unsigned(ap_const_lv3_1));
    add_ln33_10_fu_1437_p2 <= std_logic_vector(unsigned(sub_ln33_1_fu_1431_p2) + unsigned(result_reg_2630));
    add_ln33_11_fu_1725_p2 <= std_logic_vector(signed(sext_ln33_reg_2522) + signed(zext_ln33_11_fu_1721_p1));
    add_ln33_12_fu_1752_p2 <= std_logic_vector(unsigned(sub_ln33_2_fu_1746_p2) + unsigned(result_reg_2630));
    add_ln33_13_fu_801_p2 <= std_logic_vector(signed(sext_ln33_fu_698_p1) + signed(zext_ln33_13_fu_797_p1));
    add_ln33_14_fu_1128_p2 <= std_logic_vector(unsigned(sub_ln33_3_fu_1122_p2) + unsigned(result_fu_1105_p3));
    add_ln33_15_fu_2037_p2 <= std_logic_vector(signed(sext_ln33_reg_2522) + signed(zext_ln33_15_fu_2033_p1));
    add_ln33_16_fu_2064_p2 <= std_logic_vector(unsigned(sub_ln33_4_fu_2058_p2) + unsigned(result_reg_2630));
    add_ln33_17_fu_2352_p2 <= std_logic_vector(signed(sext_ln33_reg_2522) + signed(zext_ln33_17_fu_2348_p1));
    add_ln33_18_fu_2379_p2 <= std_logic_vector(unsigned(sub_ln33_5_fu_2373_p2) + unsigned(result_reg_2630));
    add_ln33_1_fu_702_p2 <= std_logic_vector(unsigned(mul_ln33_reg_2468) + unsigned(ap_const_lv10_A));
    add_ln33_2_fu_707_p2 <= std_logic_vector(unsigned(mul_ln33_reg_2468) + unsigned(ap_const_lv10_F));
    add_ln33_3_fu_712_p2 <= std_logic_vector(unsigned(mul_ln33_reg_2468) + unsigned(ap_const_lv10_14));
    add_ln33_4_fu_407_p2 <= std_logic_vector(unsigned(mul_ln33_fu_391_p2) + unsigned(zext_ln33_3_fu_403_p1));
    add_ln33_5_fu_418_p2 <= std_logic_vector(unsigned(add_ln33_fu_397_p2) + unsigned(zext_ln33_3_fu_403_p1));
    add_ln33_6_fu_717_p2 <= std_logic_vector(unsigned(add_ln33_1_fu_702_p2) + unsigned(zext_ln33_3_reg_2475));
    add_ln33_7_fu_727_p2 <= std_logic_vector(unsigned(add_ln33_2_fu_707_p2) + unsigned(zext_ln33_3_reg_2475));
    add_ln33_8_fu_737_p2 <= std_logic_vector(unsigned(add_ln33_3_fu_712_p2) + unsigned(zext_ln33_3_reg_2475));
    add_ln33_9_fu_1410_p2 <= std_logic_vector(signed(sext_ln33_reg_2522) + signed(zext_ln33_9_fu_1406_p1));
    add_ln33_fu_397_p2 <= std_logic_vector(unsigned(mul_ln33_fu_391_p2) + unsigned(ap_const_lv10_5));
    add_ln515_1_fu_1307_p2 <= std_logic_vector(unsigned(zext_ln515_2_fu_1303_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_2_fu_1618_p2 <= std_logic_vector(unsigned(zext_ln515_4_fu_1614_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_3_fu_614_p2 <= std_logic_vector(unsigned(zext_ln515_6_fu_610_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_4_fu_1930_p2 <= std_logic_vector(unsigned(zext_ln515_8_fu_1926_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_5_fu_2245_p2 <= std_logic_vector(unsigned(zext_ln515_10_fu_2241_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_fu_1011_p2 <= std_logic_vector(unsigned(zext_ln515_fu_1007_p1) + unsigned(ap_const_lv12_C01));
    and_ln18_10_fu_2133_p2 <= (xor_ln18_5_fu_2127_p2 and icmp_ln18_16_fu_2121_p2);
    and_ln18_11_fu_2185_p2 <= (icmp_ln18_18_fu_2179_p2 and icmp_ln18_17_fu_2173_p2);
    and_ln18_1_fu_943_p2 <= (icmp_ln18_3_fu_937_p2 and icmp_ln18_2_fu_931_p2);
    and_ln18_2_fu_1195_p2 <= (xor_ln18_1_fu_1189_p2 and icmp_ln18_4_fu_1183_p2);
    and_ln18_3_fu_1247_p2 <= (icmp_ln18_6_fu_1241_p2 and icmp_ln18_5_fu_1235_p2);
    and_ln18_4_fu_1506_p2 <= (xor_ln18_2_fu_1500_p2 and icmp_ln18_7_fu_1494_p2);
    and_ln18_5_fu_1558_p2 <= (icmp_ln18_9_fu_1552_p2 and icmp_ln18_8_fu_1546_p2);
    and_ln18_6_fu_502_p2 <= (xor_ln18_3_fu_496_p2 and icmp_ln18_10_fu_490_p2);
    and_ln18_7_fu_554_p2 <= (icmp_ln18_12_fu_548_p2 and icmp_ln18_11_fu_542_p2);
    and_ln18_8_fu_1818_p2 <= (xor_ln18_4_fu_1812_p2 and icmp_ln18_13_fu_1806_p2);
    and_ln18_9_fu_1870_p2 <= (icmp_ln18_15_fu_1864_p2 and icmp_ln18_14_fu_1858_p2);
    and_ln18_fu_891_p2 <= (xor_ln18_fu_885_p2 and icmp_ln18_fu_879_p2);
    and_ln25_1_fu_1177_p2 <= (icmp_ln25_4_fu_1171_p2 and icmp_ln25_3_fu_1165_p2);
    and_ln25_2_fu_1488_p2 <= (icmp_ln25_6_fu_1482_p2 and icmp_ln25_5_fu_1476_p2);
    and_ln25_3_fu_484_p2 <= (icmp_ln25_8_fu_478_p2 and icmp_ln25_7_fu_472_p2);
    and_ln25_4_fu_1800_p2 <= (icmp_ln25_9_fu_1788_p2 and icmp_ln25_10_fu_1794_p2);
    and_ln25_5_fu_2115_p2 <= (icmp_ln25_12_fu_2109_p2 and icmp_ln25_11_fu_2103_p2);
    and_ln25_fu_873_p2 <= (icmp_ln25_fu_861_p2 and icmp_ln25_2_fu_867_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage11_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone, icmp_ln26_reg_2453)
    begin
        if (((icmp_ln26_reg_2453 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage11;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_in_feat_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, in_feat_fu_142)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_in_feat_load <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_in_feat_load <= in_feat_fu_142;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_146)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_146;
        end if; 
    end process;


    ap_sig_allocacmp_kernel_x_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, kernel_x_fu_138)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kernel_x_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_kernel_x_load <= kernel_x_fu_138;
        end if; 
    end process;

    bitcast_ln33_1_fu_1984_p1 <= conv3_weights_load_1_reg_2555;
    bitcast_ln33_2_fu_1447_p1 <= conv3_weights_load_2_reg_2580;
    bitcast_ln33_3_fu_2299_p1 <= conv3_weights_load_3_reg_2585;
    bitcast_ln33_4_fu_2389_p1 <= conv3_weights_load_4_reg_2595;
    bitcast_ln33_fu_1672_p1 <= conv3_weights_load_reg_2550;

    conv3_weights_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln33_5_fu_424_p1, ap_block_pp0_stage1, zext_ln33_7_fu_732_p1, zext_ln33_8_fu_811_p1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv3_weights_address0 <= zext_ln33_8_fu_811_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv3_weights_address0 <= zext_ln33_7_fu_732_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv3_weights_address0 <= zext_ln33_5_fu_424_p1(10 - 1 downto 0);
            else 
                conv3_weights_address0 <= "XXXXXXXXXX";
            end if;
        else 
            conv3_weights_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_weights_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln33_4_fu_413_p1, ap_block_pp0_stage0, zext_ln33_6_fu_722_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv3_weights_address1 <= zext_ln33_6_fu_722_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv3_weights_address1 <= zext_ln33_4_fu_413_p1(10 - 1 downto 0);
            else 
                conv3_weights_address1 <= "XXXXXXXXXX";
            end if;
        else 
            conv3_weights_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv3_weights_ce0 <= ap_const_logic_1;
        else 
            conv3_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_weights_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv3_weights_ce1 <= ap_const_logic_1;
        else 
            conv3_weights_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    convolution_out <= convolution_fu_134;

    convolution_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage11, icmp_ln26_reg_2453, ap_block_pp0_stage11_11001)
    begin
        if (((icmp_ln26_reg_2453 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            convolution_out_ap_vld <= ap_const_logic_1;
        else 
            convolution_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_10_fu_2078_p1 <= x_assign_3_4_reg_2683;
    data_12_fu_909_p3 <= 
        ap_const_lv64_0 when (or_ln18_2_fu_903_p2(0) = '1') else 
        data_1_fu_835_p1;
    data_13_fu_1213_p3 <= 
        ap_const_lv64_0 when (or_ln18_4_fu_1207_p2(0) = '1') else 
        data_3_fu_1139_p1;
    data_14_fu_1524_p3 <= 
        ap_const_lv64_0 when (or_ln18_6_fu_1518_p2(0) = '1') else 
        data_5_fu_1451_p1;
    data_15_fu_520_p3 <= 
        ap_const_lv64_0 when (or_ln18_8_fu_514_p2(0) = '1') else 
        bitcast_ln13;
    data_16_fu_1836_p3 <= 
        ap_const_lv64_0 when (or_ln18_10_fu_1830_p2(0) = '1') else 
        data_8_fu_1762_p1;
    data_17_fu_2151_p3 <= 
        ap_const_lv64_0 when (or_ln18_12_fu_2145_p2(0) = '1') else 
        data_10_fu_2078_p1;
    data_1_fu_835_p1 <= reg_286;
    data_3_fu_1139_p1 <= reg_286;
    data_5_fu_1451_p1 <= x_assign_3_1_reg_2638;
    data_8_fu_1762_p1 <= reg_286;
    data_fu_963_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_1_fu_943_p2(0) = '1') else 
        select_ln488_fu_955_p3;
    grp_fu_112_p_ce <= ap_const_logic_1;
    grp_fu_112_p_din0 <= grp_fu_275_p0;
    grp_fu_112_p_din1 <= grp_fu_275_p1;
    grp_fu_112_p_opcode <= ap_const_lv2_0;

    grp_fu_275_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, reg_305, ap_block_pp0_stage0, convolution_fu_134, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_block_pp0_stage4, ap_block_pp0_stage8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_275_p0 <= reg_305;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_275_p0 <= convolution_fu_134;
        else 
            grp_fu_275_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_275_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, reg_300, mul_2_reg_2723, mul_1_reg_2793, mul_4_reg_2813, ap_block_pp0_stage0, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_block_pp0_stage4, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_275_p1 <= mul_4_reg_2813;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_275_p1 <= mul_2_reg_2723;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_275_p1 <= mul_1_reg_2793;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
            grp_fu_275_p1 <= reg_300;
        else 
            grp_fu_275_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_279_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage7, bitcast_ln33_2_fu_1447_p1, bitcast_ln33_fu_1672_p1, ap_CS_fsm_pp0_stage9, bitcast_ln33_1_fu_1984_p1, ap_CS_fsm_pp0_stage13, bitcast_ln33_3_fu_2299_p1, bitcast_ln33_4_fu_2389_p1, ap_block_pp0_stage7, ap_block_pp0_stage9, ap_block_pp0_stage11, ap_block_pp0_stage13, ap_block_pp0_stage15)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                grp_fu_279_p0 <= bitcast_ln33_4_fu_2389_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                grp_fu_279_p0 <= bitcast_ln33_3_fu_2299_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                grp_fu_279_p0 <= bitcast_ln33_1_fu_1984_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                grp_fu_279_p0 <= bitcast_ln33_fu_1672_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_279_p0 <= bitcast_ln33_2_fu_1447_p1;
            else 
                grp_fu_279_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_279_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_279_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, reg_290, reg_295, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage7, ap_block_pp0_stage9, ap_block_pp0_stage11, ap_block_pp0_stage13, ap_block_pp0_stage15)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
            grp_fu_279_p1 <= reg_295;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_279_p1 <= reg_290;
        else 
            grp_fu_279_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_283_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln1432_1_fu_445_p1, ap_CS_fsm_pp0_stage1, sext_ln1432_2_fu_747_p1, ap_CS_fsm_pp0_stage2, sext_ln1432_3_fu_820_p1, zext_ln1432_fu_830_p1, zext_ln1432_1_fu_1070_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_283_p0 <= zext_ln1432_1_fu_1070_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_283_p0 <= zext_ln1432_fu_830_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_283_p0 <= sext_ln1432_3_fu_820_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_283_p0 <= sext_ln1432_2_fu_747_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_283_p0 <= sext_ln1432_1_fu_445_p1;
            else 
                grp_fu_283_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_283_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_407_p_ce <= ap_const_logic_1;
    grp_fu_407_p_din0 <= grp_fu_279_p0;
    grp_fu_407_p_din1 <= grp_fu_279_p1;
    grp_fu_411_p_ce <= ap_const_logic_1;
    grp_fu_411_p_din0 <= grp_fu_283_p0;
    icmp_ln18_10_fu_490_p2 <= "1" when (x_fp_exp_6_fu_458_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_11_fu_542_p2 <= "1" when (x_fp_exp_7_fu_528_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_12_fu_548_p2 <= "0" when (x_fp_sig_7_fu_538_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_13_fu_1806_p2 <= "1" when (x_fp_exp_8_fu_1774_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_14_fu_1858_p2 <= "1" when (x_fp_exp_9_fu_1844_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_15_fu_1864_p2 <= "0" when (x_fp_sig_9_fu_1854_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_16_fu_2121_p2 <= "1" when (x_fp_exp_10_fu_2089_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_17_fu_2173_p2 <= "1" when (x_fp_exp_11_fu_2159_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_18_fu_2179_p2 <= "0" when (x_fp_sig_11_fu_2169_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_2_fu_931_p2 <= "1" when (x_fp_exp_1_fu_917_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_3_fu_937_p2 <= "0" when (x_fp_sig_1_fu_927_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_4_fu_1183_p2 <= "1" when (x_fp_exp_2_fu_1151_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_5_fu_1235_p2 <= "1" when (x_fp_exp_3_fu_1221_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_6_fu_1241_p2 <= "0" when (x_fp_sig_3_fu_1231_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_7_fu_1494_p2 <= "1" when (x_fp_exp_4_fu_1462_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_8_fu_1546_p2 <= "1" when (x_fp_exp_5_fu_1532_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln18_9_fu_1552_p2 <= "0" when (x_fp_sig_5_fu_1542_p1 = ap_const_lv52_0) else "1";
    icmp_ln18_fu_879_p2 <= "1" when (x_fp_exp_fu_847_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln25_10_fu_1794_p2 <= "1" when (x_fp_sig_8_fu_1784_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_11_fu_2103_p2 <= "1" when (x_fp_exp_10_fu_2089_p4 = ap_const_lv11_0) else "0";
    icmp_ln25_12_fu_2109_p2 <= "1" when (x_fp_sig_10_fu_2099_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_2_fu_867_p2 <= "1" when (x_fp_sig_fu_857_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_3_fu_1165_p2 <= "1" when (x_fp_exp_2_fu_1151_p4 = ap_const_lv11_0) else "0";
    icmp_ln25_4_fu_1171_p2 <= "1" when (x_fp_sig_2_fu_1161_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_5_fu_1476_p2 <= "1" when (x_fp_exp_4_fu_1462_p4 = ap_const_lv11_0) else "0";
    icmp_ln25_6_fu_1482_p2 <= "1" when (x_fp_sig_4_fu_1472_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_7_fu_472_p2 <= "1" when (x_fp_exp_6_fu_458_p4 = ap_const_lv11_0) else "0";
    icmp_ln25_8_fu_478_p2 <= "1" when (x_fp_sig_6_fu_468_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_9_fu_1788_p2 <= "1" when (x_fp_exp_8_fu_1774_p4 = ap_const_lv11_0) else "0";
    icmp_ln25_fu_861_p2 <= "1" when (x_fp_exp_fu_847_p4 = ap_const_lv11_0) else "0";
    icmp_ln26_fu_341_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_A0) else "0";
    icmp_ln28_fu_365_p2 <= "1" when (ap_sig_allocacmp_kernel_x_load = ap_const_lv3_5) else "0";

    layer2_output_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, zext_ln33_14_fu_1134_p1, ap_block_pp0_stage5, zext_ln33_10_fu_1442_p1, ap_block_pp0_stage7, zext_ln33_12_fu_1757_p1, ap_block_pp0_stage9, zext_ln33_16_fu_2069_p1, ap_block_pp0_stage11, zext_ln33_18_fu_2384_p1, ap_block_pp0_stage13)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                layer2_output_address0 <= zext_ln33_18_fu_2384_p1(21 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                layer2_output_address0 <= zext_ln33_16_fu_2069_p1(21 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                layer2_output_address0 <= zext_ln33_12_fu_1757_p1(21 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                layer2_output_address0 <= zext_ln33_10_fu_1442_p1(21 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                layer2_output_address0 <= zext_ln33_14_fu_1134_p1(21 - 1 downto 0);
            else 
                layer2_output_address0 <= "XXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            layer2_output_address0 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    layer2_output_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            layer2_output_ce0 <= ap_const_logic_1;
        else 
            layer2_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln18_1_fu_1347_p2 <= std_logic_vector(shift_right(unsigned(zext_ln515_1_fu_1299_p1),to_integer(unsigned('0' & zext_ln18_1_fu_1343_p1(31-1 downto 0)))));
    lshr_ln18_2_fu_1658_p2 <= std_logic_vector(shift_right(unsigned(zext_ln515_3_fu_1610_p1),to_integer(unsigned('0' & zext_ln18_2_fu_1654_p1(31-1 downto 0)))));
    lshr_ln18_3_fu_654_p2 <= std_logic_vector(shift_right(unsigned(zext_ln515_5_fu_606_p1),to_integer(unsigned('0' & zext_ln18_3_fu_650_p1(31-1 downto 0)))));
    lshr_ln18_4_fu_1970_p2 <= std_logic_vector(shift_right(unsigned(zext_ln515_7_fu_1922_p1),to_integer(unsigned('0' & zext_ln18_4_fu_1966_p1(31-1 downto 0)))));
    lshr_ln18_5_fu_2285_p2 <= std_logic_vector(shift_right(unsigned(zext_ln515_9_fu_2237_p1),to_integer(unsigned('0' & zext_ln18_5_fu_2281_p1(31-1 downto 0)))));
    lshr_ln18_fu_1051_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_1003_p1),to_integer(unsigned('0' & zext_ln18_fu_1047_p1(31-1 downto 0)))));
    mantissa_fu_993_p4 <= ((ap_const_lv1_1 & trunc_ln534_fu_989_p1) & ap_const_lv1_0);
    mul_ln33_fu_391_p0 <= mul_ln33_fu_391_p00(6 - 1 downto 0);
    mul_ln33_fu_391_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_1_fu_379_p3),10));
    mul_ln33_fu_391_p1 <= ap_const_lv10_19(6 - 1 downto 0);
    or_ln18_10_fu_1830_p2 <= (x_fp_sign_4_fu_1766_p3 or or_ln18_9_fu_1824_p2);
    or_ln18_11_fu_2139_p2 <= (and_ln25_5_fu_2115_p2 or and_ln18_10_fu_2133_p2);
    or_ln18_12_fu_2145_p2 <= (x_fp_sign_5_fu_2081_p3 or or_ln18_11_fu_2139_p2);
    or_ln18_2_fu_903_p2 <= (x_fp_sign_fu_839_p3 or or_ln18_fu_897_p2);
    or_ln18_3_fu_1201_p2 <= (and_ln25_1_fu_1177_p2 or and_ln18_2_fu_1195_p2);
    or_ln18_4_fu_1207_p2 <= (x_fp_sign_1_fu_1143_p3 or or_ln18_3_fu_1201_p2);
    or_ln18_5_fu_1512_p2 <= (and_ln25_2_fu_1488_p2 or and_ln18_4_fu_1506_p2);
    or_ln18_6_fu_1518_p2 <= (x_fp_sign_2_fu_1454_p3 or or_ln18_5_fu_1512_p2);
    or_ln18_7_fu_508_p2 <= (and_ln25_3_fu_484_p2 or and_ln18_6_fu_502_p2);
    or_ln18_8_fu_514_p2 <= (x_fp_sign_3_fu_450_p3 or or_ln18_7_fu_508_p2);
    or_ln18_9_fu_1824_p2 <= (and_ln25_4_fu_1800_p2 or and_ln18_8_fu_1818_p2);
    or_ln18_fu_897_p2 <= (and_ln25_fu_873_p2 or and_ln18_fu_891_p2);
    p_shl1_fu_2365_p3 <= (trunc_ln33_4_fu_2361_p1 & ap_const_lv8_0);
    p_shl2_fu_2050_p3 <= (trunc_ln33_3_fu_2046_p1 & ap_const_lv8_0);
    p_shl3_fu_1115_p3 <= (trunc_ln33_2_reg_2565 & ap_const_lv8_0);
    p_shl4_fu_1738_p3 <= (trunc_ln33_1_fu_1734_p1 & ap_const_lv8_0);
    p_shl5_fu_1423_p3 <= (trunc_ln33_fu_1419_p1 & ap_const_lv8_0);
    result_2_fu_1099_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(val_fu_1092_p3));
    result_fu_1105_p3 <= 
        result_2_fu_1099_p2 when (xs_sign_reg_2600(0) = '1') else 
        val_fu_1092_p3;
    select_ln18_10_fu_2269_p3 <= 
        sext_ln18_10_fu_2265_p1 when (tmp_27_fu_2251_p3(0) = '1') else 
        add_ln515_5_fu_2245_p2;
    select_ln18_11_fu_2327_p3 <= 
        zext_ln21_5_fu_2314_p1 when (tmp_27_reg_2778(0) = '1') else 
        tmp_10_fu_2317_p4;
    select_ln18_2_fu_1331_p3 <= 
        sext_ln18_2_fu_1327_p1 when (tmp_7_fu_1313_p3(0) = '1') else 
        add_ln515_1_fu_1307_p2;
    select_ln18_3_fu_1385_p3 <= 
        zext_ln21_1_fu_1372_p1 when (tmp_7_reg_2658(0) = '1') else 
        tmp_6_fu_1375_p4;
    select_ln18_4_fu_1642_p3 <= 
        sext_ln18_4_fu_1638_p1 when (tmp_13_fu_1624_p3(0) = '1') else 
        add_ln515_2_fu_1618_p2;
    select_ln18_5_fu_1700_p3 <= 
        zext_ln21_2_fu_1687_p1 when (tmp_13_reg_2698(0) = '1') else 
        tmp_9_fu_1690_p4;
    select_ln18_6_fu_638_p3 <= 
        sext_ln18_6_fu_634_p1 when (tmp_19_fu_620_p3(0) = '1') else 
        add_ln515_3_fu_614_p2;
    select_ln18_7_fu_776_p3 <= 
        zext_ln21_3_fu_763_p1 when (tmp_19_reg_2507(0) = '1') else 
        tmp_s_fu_766_p4;
    select_ln18_8_fu_1954_p3 <= 
        sext_ln18_8_fu_1950_p1 when (tmp_23_fu_1936_p3(0) = '1') else 
        add_ln515_4_fu_1930_p2;
    select_ln18_9_fu_2012_p3 <= 
        zext_ln21_4_fu_1999_p1 when (tmp_23_reg_2738(0) = '1') else 
        tmp_3_fu_2002_p4;
    select_ln18_fu_1035_p3 <= 
        sext_ln18_fu_1031_p1 when (tmp_fu_1017_p3(0) = '1') else 
        add_ln515_fu_1011_p2;
    select_ln26_1_fu_379_p3 <= 
        add_ln26_fu_359_p2 when (icmp_ln28_fu_365_p2(0) = '1') else 
        ap_sig_allocacmp_in_feat_load;
    select_ln26_fu_371_p3 <= 
        ap_const_lv3_0 when (icmp_ln28_fu_365_p2(0) = '1') else 
        ap_sig_allocacmp_kernel_x_load;
    select_ln488_10_fu_2197_p3 <= 
        data_17_fu_2151_p3 when (ymaggreater_11_fu_2191_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln488_11_fu_2205_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_11_fu_2185_p2(0) = '1') else 
        select_ln488_10_fu_2197_p3;
    select_ln488_2_fu_1259_p3 <= 
        data_13_fu_1213_p3 when (ymaggreater_3_fu_1253_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln488_3_fu_1267_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_3_fu_1247_p2(0) = '1') else 
        select_ln488_2_fu_1259_p3;
    select_ln488_4_fu_1570_p3 <= 
        data_14_fu_1524_p3 when (ymaggreater_5_fu_1564_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln488_5_fu_1578_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_5_fu_1558_p2(0) = '1') else 
        select_ln488_4_fu_1570_p3;
    select_ln488_6_fu_566_p3 <= 
        data_15_fu_520_p3 when (ymaggreater_7_fu_560_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln488_7_fu_574_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_7_fu_554_p2(0) = '1') else 
        select_ln488_6_fu_566_p3;
    select_ln488_8_fu_1882_p3 <= 
        data_16_fu_1836_p3 when (ymaggreater_9_fu_1876_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln488_9_fu_1890_p3 <= 
        ap_const_lv64_406FC00000000000 when (and_ln18_9_fu_1870_p2(0) = '1') else 
        select_ln488_8_fu_1882_p3;
    select_ln488_fu_955_p3 <= 
        data_12_fu_909_p3 when (ymaggreater_1_fu_949_p2(0) = '1') else 
        ap_const_lv64_406FC00000000000;
    select_ln59_1_fu_1713_p3 <= 
        sub_ln59_1_fu_1707_p2 when (tmp_11_fu_1676_p3(0) = '1') else 
        select_ln18_5_fu_1700_p3;
    select_ln59_2_fu_789_p3 <= 
        sub_ln59_2_fu_783_p2 when (tmp_17_fu_752_p3(0) = '1') else 
        select_ln18_7_fu_776_p3;
    select_ln59_3_fu_2025_p3 <= 
        sub_ln59_3_fu_2019_p2 when (tmp_22_fu_1988_p3(0) = '1') else 
        select_ln18_9_fu_2012_p3;
    select_ln59_4_fu_2340_p3 <= 
        sub_ln59_4_fu_2334_p2 when (tmp_26_fu_2303_p3(0) = '1') else 
        select_ln18_11_fu_2327_p3;
    select_ln59_fu_1398_p3 <= 
        sub_ln59_fu_1392_p2 when (tmp_5_fu_1361_p3(0) = '1') else 
        select_ln18_3_fu_1385_p3;
        sext_ln1432_1_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1432_fu_439_p2),32));

        sext_ln1432_2_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1432_1_fu_742_p2),32));

        sext_ln1432_3_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1432_2_fu_815_p2),32));

        sext_ln1432_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1432_5_fu_429_p2),10));

        sext_ln18_10_fu_2265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_5_fu_2259_p2),12));

        sext_ln18_11_fu_2277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_10_fu_2269_p3),32));

        sext_ln18_1_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_fu_1035_p3),32));

        sext_ln18_2_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_1_fu_1321_p2),12));

        sext_ln18_3_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_2_fu_1331_p3),32));

        sext_ln18_4_fu_1638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_2_fu_1632_p2),12));

        sext_ln18_5_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_4_fu_1642_p3),32));

        sext_ln18_6_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_3_fu_628_p2),12));

        sext_ln18_7_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_6_fu_638_p3),32));

        sext_ln18_8_fu_1950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_4_fu_1944_p2),12));

        sext_ln18_9_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_8_fu_1954_p3),32));

        sext_ln18_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_fu_1025_p2),12));

        sext_ln33_1_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln33_9_fu_1410_p2),21));

        sext_ln33_2_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln33_11_fu_1725_p2),21));

        sext_ln33_3_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln33_13_reg_2560),21));

        sext_ln33_4_fu_2042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln33_15_fu_2037_p2),21));

        sext_ln33_5_fu_2357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln33_17_fu_2352_p2),21));

        sext_ln33_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln33_fu_692_p2),16));

    shl_ln18_1_fu_1368_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_1_reg_2653),to_integer(unsigned('0' & zext_ln18_1_reg_2663(31-1 downto 0)))));
    shl_ln18_2_fu_1683_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_3_reg_2693),to_integer(unsigned('0' & zext_ln18_2_reg_2703(31-1 downto 0)))));
    shl_ln18_3_fu_759_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_5_reg_2502),to_integer(unsigned('0' & zext_ln18_3_reg_2512(31-1 downto 0)))));
    shl_ln18_4_fu_1995_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_7_reg_2733),to_integer(unsigned('0' & zext_ln18_4_reg_2743(31-1 downto 0)))));
    shl_ln18_5_fu_2310_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_9_reg_2773),to_integer(unsigned('0' & zext_ln18_5_reg_2783(31-1 downto 0)))));
    shl_ln18_fu_1075_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_reg_2605),to_integer(unsigned('0' & zext_ln18_reg_2615(31-1 downto 0)))));
    sub_ln18_1_fu_1321_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_s_fu_1275_p4));
    sub_ln18_2_fu_1632_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_1_s_fu_1586_p4));
    sub_ln18_3_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_1_1_fu_582_p4));
    sub_ln18_4_fu_1944_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_1_2_fu_1898_p4));
    sub_ln18_5_fu_2259_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_1_3_fu_2213_p4));
    sub_ln18_fu_1025_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_fu_979_p4));
    sub_ln33_1_fu_1431_p2 <= std_logic_vector(unsigned(p_shl5_fu_1423_p3) - unsigned(sext_ln33_1_fu_1415_p1));
    sub_ln33_2_fu_1746_p2 <= std_logic_vector(unsigned(p_shl4_fu_1738_p3) - unsigned(sext_ln33_2_fu_1730_p1));
    sub_ln33_3_fu_1122_p2 <= std_logic_vector(unsigned(p_shl3_fu_1115_p3) - unsigned(sext_ln33_3_fu_1112_p1));
    sub_ln33_4_fu_2058_p2 <= std_logic_vector(unsigned(p_shl2_fu_2050_p3) - unsigned(sext_ln33_4_fu_2042_p1));
    sub_ln33_5_fu_2373_p2 <= std_logic_vector(unsigned(p_shl1_fu_2365_p3) - unsigned(sext_ln33_5_fu_2357_p1));
    sub_ln33_fu_692_p2 <= std_logic_vector(unsigned(zext_ln33_2_fu_688_p1) - unsigned(zext_ln33_1_fu_678_p1));
    sub_ln59_1_fu_1707_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(select_ln18_5_fu_1700_p3));
    sub_ln59_2_fu_783_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(select_ln18_7_fu_776_p3));
    sub_ln59_3_fu_2019_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(select_ln18_9_fu_2012_p3));
    sub_ln59_4_fu_2334_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(select_ln18_11_fu_2327_p3));
    sub_ln59_fu_1392_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(select_ln18_3_fu_1385_p3));
    tmp_10_fu_2317_p4 <= shl_ln18_5_fu_2310_p2(65 downto 53);
    tmp_11_fu_1676_p3 <= select_ln488_5_reg_2688(63 downto 63);
    tmp_13_fu_1624_p3 <= add_ln515_2_fu_1618_p2(11 downto 11);
    tmp_17_fu_752_p3 <= select_ln488_7_reg_2497(63 downto 63);
    tmp_19_fu_620_p3 <= add_ln515_3_fu_614_p2(11 downto 11);
    tmp_22_fu_1988_p3 <= select_ln488_9_reg_2728(63 downto 63);
    tmp_23_fu_1936_p3 <= add_ln515_4_fu_1930_p2(11 downto 11);
    tmp_26_fu_2303_p3 <= select_ln488_11_reg_2768(63 downto 63);
    tmp_27_fu_2251_p3 <= add_ln515_5_fu_2245_p2(11 downto 11);
    tmp_2_fu_681_p3 <= (select_ln26_1_reg_2462 & ap_const_lv8_0);
    tmp_3_fu_2002_p4 <= shl_ln18_4_fu_1995_p2(65 downto 53);
    tmp_4_fu_1082_p4 <= shl_ln18_fu_1075_p2(73 downto 53);
    tmp_5_fu_1361_p3 <= select_ln488_3_reg_2648(63 downto 63);
    tmp_6_fu_1375_p4 <= shl_ln18_1_fu_1368_p2(65 downto 53);
    tmp_7_fu_1313_p3 <= add_ln515_1_fu_1307_p2(11 downto 11);
    tmp_9_fu_1690_p4 <= shl_ln18_2_fu_1683_p2(65 downto 53);
    tmp_fu_1017_p3 <= add_ln515_fu_1011_p2(11 downto 11);
    tmp_s_fu_766_p4 <= shl_ln18_3_fu_759_p2(65 downto 53);
    trunc_ln33_1_fu_1734_p1 <= add_ln33_11_fu_1725_p2(13 - 1 downto 0);
    trunc_ln33_2_fu_807_p1 <= add_ln33_13_fu_801_p2(13 - 1 downto 0);
    trunc_ln33_3_fu_2046_p1 <= add_ln33_15_fu_2037_p2(13 - 1 downto 0);
    trunc_ln33_4_fu_2361_p1 <= add_ln33_17_fu_2352_p2(13 - 1 downto 0);
    trunc_ln33_fu_1419_p1 <= add_ln33_9_fu_1410_p2(13 - 1 downto 0);
    trunc_ln534_1_fu_1285_p1 <= select_ln488_3_fu_1267_p3(52 - 1 downto 0);
    trunc_ln534_2_fu_1596_p1 <= select_ln488_5_fu_1578_p3(52 - 1 downto 0);
    trunc_ln534_3_fu_592_p1 <= select_ln488_7_fu_574_p3(52 - 1 downto 0);
    trunc_ln534_4_fu_1908_p1 <= select_ln488_9_fu_1890_p3(52 - 1 downto 0);
    trunc_ln534_5_fu_2223_p1 <= select_ln488_11_fu_2205_p3(52 - 1 downto 0);
    trunc_ln534_fu_989_p1 <= data_fu_963_p3(52 - 1 downto 0);
    val_fu_1092_p3 <= 
        zext_ln21_fu_1079_p1 when (tmp_reg_2610(0) = '1') else 
        tmp_4_fu_1082_p4;
    x_fp_exp_10_fu_2089_p4 <= data_10_fu_2078_p1(62 downto 52);
    x_fp_exp_11_fu_2159_p4 <= data_17_fu_2151_p3(62 downto 52);
    x_fp_exp_1_fu_917_p4 <= data_12_fu_909_p3(62 downto 52);
    x_fp_exp_2_fu_1151_p4 <= data_3_fu_1139_p1(62 downto 52);
    x_fp_exp_3_fu_1221_p4 <= data_13_fu_1213_p3(62 downto 52);
    x_fp_exp_4_fu_1462_p4 <= data_5_fu_1451_p1(62 downto 52);
    x_fp_exp_5_fu_1532_p4 <= data_14_fu_1524_p3(62 downto 52);
    x_fp_exp_6_fu_458_p4 <= bitcast_ln13(62 downto 52);
    x_fp_exp_7_fu_528_p4 <= data_15_fu_520_p3(62 downto 52);
    x_fp_exp_8_fu_1774_p4 <= data_8_fu_1762_p1(62 downto 52);
    x_fp_exp_9_fu_1844_p4 <= data_16_fu_1836_p3(62 downto 52);
    x_fp_exp_fu_847_p4 <= data_1_fu_835_p1(62 downto 52);
    x_fp_sig_10_fu_2099_p1 <= data_10_fu_2078_p1(52 - 1 downto 0);
    x_fp_sig_11_fu_2169_p1 <= data_17_fu_2151_p3(52 - 1 downto 0);
    x_fp_sig_1_fu_927_p1 <= data_12_fu_909_p3(52 - 1 downto 0);
    x_fp_sig_2_fu_1161_p1 <= data_3_fu_1139_p1(52 - 1 downto 0);
    x_fp_sig_3_fu_1231_p1 <= data_13_fu_1213_p3(52 - 1 downto 0);
    x_fp_sig_4_fu_1472_p1 <= data_5_fu_1451_p1(52 - 1 downto 0);
    x_fp_sig_5_fu_1542_p1 <= data_14_fu_1524_p3(52 - 1 downto 0);
    x_fp_sig_6_fu_468_p1 <= bitcast_ln13(52 - 1 downto 0);
    x_fp_sig_7_fu_538_p1 <= data_15_fu_520_p3(52 - 1 downto 0);
    x_fp_sig_8_fu_1784_p1 <= data_8_fu_1762_p1(52 - 1 downto 0);
    x_fp_sig_9_fu_1854_p1 <= data_16_fu_1836_p3(52 - 1 downto 0);
    x_fp_sig_fu_857_p1 <= data_1_fu_835_p1(52 - 1 downto 0);
    x_fp_sign_1_fu_1143_p3 <= data_3_fu_1139_p1(63 downto 63);
    x_fp_sign_2_fu_1454_p3 <= data_5_fu_1451_p1(63 downto 63);
    x_fp_sign_3_fu_450_p3 <= bitcast_ln13(63 downto 63);
    x_fp_sign_4_fu_1766_p3 <= data_8_fu_1762_p1(63 downto 63);
    x_fp_sign_5_fu_2081_p3 <= data_10_fu_2078_p1(63 downto 63);
    x_fp_sign_fu_839_p3 <= data_1_fu_835_p1(63 downto 63);
    xor_ln18_1_fu_1189_p2 <= (icmp_ln25_4_fu_1171_p2 xor ap_const_lv1_1);
    xor_ln18_2_fu_1500_p2 <= (icmp_ln25_6_fu_1482_p2 xor ap_const_lv1_1);
    xor_ln18_3_fu_496_p2 <= (icmp_ln25_8_fu_478_p2 xor ap_const_lv1_1);
    xor_ln18_4_fu_1812_p2 <= (icmp_ln25_10_fu_1794_p2 xor ap_const_lv1_1);
    xor_ln18_5_fu_2127_p2 <= (icmp_ln25_12_fu_2109_p2 xor ap_const_lv1_1);
    xor_ln18_fu_885_p2 <= (icmp_ln25_2_fu_867_p2 xor ap_const_lv1_1);
    xs_exp_1_1_fu_582_p4 <= select_ln488_7_fu_574_p3(62 downto 52);
    xs_exp_1_2_fu_1898_p4 <= select_ln488_9_fu_1890_p3(62 downto 52);
    xs_exp_1_3_fu_2213_p4 <= select_ln488_11_fu_2205_p3(62 downto 52);
    xs_exp_1_s_fu_1586_p4 <= select_ln488_5_fu_1578_p3(62 downto 52);
    xs_exp_fu_979_p4 <= data_fu_963_p3(62 downto 52);
    xs_exp_s_fu_1275_p4 <= select_ln488_3_fu_1267_p3(62 downto 52);
    ymaggreater_11_fu_2191_p2 <= "1" when (signed(data_17_fu_2151_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    ymaggreater_1_fu_949_p2 <= "1" when (signed(data_12_fu_909_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    ymaggreater_3_fu_1253_p2 <= "1" when (signed(data_13_fu_1213_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    ymaggreater_5_fu_1564_p2 <= "1" when (signed(data_14_fu_1524_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    ymaggreater_7_fu_560_p2 <= "1" when (signed(data_15_fu_520_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    ymaggreater_9_fu_1876_p2 <= "1" when (signed(data_16_fu_1836_p3) < signed(ap_const_lv64_406FC00000000000)) else "0";
    zext_ln13_1_cast_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln13_1),9));
    zext_ln1432_1_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1432_4_fu_1065_p2),32));
    zext_ln1432_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1432_3_fu_825_p2),32));
    zext_ln15_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_993_p4),137));
    zext_ln18_1_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_3_fu_1339_p1),137));
    zext_ln18_2_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_5_fu_1650_p1),137));
    zext_ln18_3_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_7_fu_646_p1),137));
    zext_ln18_4_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_9_fu_1962_p1),137));
    zext_ln18_5_fu_2281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_11_fu_2277_p1),137));
    zext_ln18_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_1_fu_1043_p1),137));
    zext_ln21_1_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_2668),13));
    zext_ln21_2_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2708),13));
    zext_ln21_3_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_reg_2517),13));
    zext_ln21_4_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_reg_2748),13));
    zext_ln21_5_fu_2314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_2788),13));
    zext_ln21_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2620),21));
    zext_ln26_cast_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln26),9));
    zext_ln33_10_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_10_fu_1437_p2),64));
    zext_ln33_11_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_1_fu_1713_p3),16));
    zext_ln33_12_fu_1757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_12_fu_1752_p2),64));
    zext_ln33_13_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_2_fu_789_p3),16));
    zext_ln33_14_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_14_fu_1128_p2),64));
    zext_ln33_15_fu_2033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_3_fu_2025_p3),16));
    zext_ln33_16_fu_2069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_16_fu_2064_p2),64));
    zext_ln33_17_fu_2348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_4_fu_2340_p3),16));
    zext_ln33_18_fu_2384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_18_fu_2379_p2),64));
    zext_ln33_1_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_1_reg_2462),15));
    zext_ln33_2_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_681_p3),15));
    zext_ln33_3_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_fu_371_p3),10));
    zext_ln33_4_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_4_fu_407_p2),64));
    zext_ln33_5_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_5_fu_418_p2),64));
    zext_ln33_6_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_6_fu_717_p2),64));
    zext_ln33_7_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_7_fu_727_p2),64));
    zext_ln33_8_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln33_8_reg_2540),64));
    zext_ln33_9_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln59_fu_1398_p3),16));
    zext_ln515_10_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_3_fu_2213_p4),12));
    zext_ln515_1_cast_fu_1289_p4 <= ((ap_const_lv1_1 & trunc_ln534_1_fu_1285_p1) & ap_const_lv1_0);
    zext_ln515_1_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln515_1_cast_fu_1289_p4),137));
    zext_ln515_2_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_s_fu_1275_p4),12));
    zext_ln515_3_cast_fu_1600_p4 <= ((ap_const_lv1_1 & trunc_ln534_2_fu_1596_p1) & ap_const_lv1_0);
    zext_ln515_3_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln515_3_cast_fu_1600_p4),137));
    zext_ln515_4_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_s_fu_1586_p4),12));
    zext_ln515_5_cast_fu_596_p4 <= ((ap_const_lv1_1 & trunc_ln534_3_fu_592_p1) & ap_const_lv1_0);
    zext_ln515_5_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln515_5_cast_fu_596_p4),137));
    zext_ln515_6_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_1_fu_582_p4),12));
    zext_ln515_7_cast_fu_1912_p4 <= ((ap_const_lv1_1 & trunc_ln534_4_fu_1908_p1) & ap_const_lv1_0);
    zext_ln515_7_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln515_7_cast_fu_1912_p4),137));
    zext_ln515_8_fu_1926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_2_fu_1898_p4),12));
    zext_ln515_9_cast_fu_2227_p4 <= ((ap_const_lv1_1 & trunc_ln534_5_fu_2223_p1) & ap_const_lv1_0);
    zext_ln515_9_fu_2237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln515_9_cast_fu_2227_p4),137));
    zext_ln515_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_fu_979_p4),12));
end behav;
