-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv2_single_from_c1_Pipeline_VITIS_LOOP_101_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln103 : IN STD_LOGIC_VECTOR (10 downto 0);
    conv2_weights_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv2_weights_ce0 : OUT STD_LOGIC;
    conv2_weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    wrow_63_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_63_out_ap_vld : OUT STD_LOGIC;
    wrow_62_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_62_out_ap_vld : OUT STD_LOGIC;
    wrow_61_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_61_out_ap_vld : OUT STD_LOGIC;
    wrow_60_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_60_out_ap_vld : OUT STD_LOGIC;
    wrow_59_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_59_out_ap_vld : OUT STD_LOGIC;
    wrow_58_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_58_out_ap_vld : OUT STD_LOGIC;
    wrow_57_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_57_out_ap_vld : OUT STD_LOGIC;
    wrow_56_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_56_out_ap_vld : OUT STD_LOGIC;
    wrow_55_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_55_out_ap_vld : OUT STD_LOGIC;
    wrow_54_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_54_out_ap_vld : OUT STD_LOGIC;
    wrow_53_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_53_out_ap_vld : OUT STD_LOGIC;
    wrow_52_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_52_out_ap_vld : OUT STD_LOGIC;
    wrow_51_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_51_out_ap_vld : OUT STD_LOGIC;
    wrow_50_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_50_out_ap_vld : OUT STD_LOGIC;
    wrow_49_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_49_out_ap_vld : OUT STD_LOGIC;
    wrow_48_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_48_out_ap_vld : OUT STD_LOGIC;
    wrow_47_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_47_out_ap_vld : OUT STD_LOGIC;
    wrow_46_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_46_out_ap_vld : OUT STD_LOGIC;
    wrow_45_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_45_out_ap_vld : OUT STD_LOGIC;
    wrow_44_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_44_out_ap_vld : OUT STD_LOGIC;
    wrow_43_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_43_out_ap_vld : OUT STD_LOGIC;
    wrow_42_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_42_out_ap_vld : OUT STD_LOGIC;
    wrow_41_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_41_out_ap_vld : OUT STD_LOGIC;
    wrow_40_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_40_out_ap_vld : OUT STD_LOGIC;
    wrow_39_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_39_out_ap_vld : OUT STD_LOGIC;
    wrow_38_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_38_out_ap_vld : OUT STD_LOGIC;
    wrow_37_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_37_out_ap_vld : OUT STD_LOGIC;
    wrow_36_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_36_out_ap_vld : OUT STD_LOGIC;
    wrow_35_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_35_out_ap_vld : OUT STD_LOGIC;
    wrow_34_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_34_out_ap_vld : OUT STD_LOGIC;
    wrow_33_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_33_out_ap_vld : OUT STD_LOGIC;
    wrow_32_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_32_out_ap_vld : OUT STD_LOGIC;
    wrow_31_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_31_out_ap_vld : OUT STD_LOGIC;
    wrow_30_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_30_out_ap_vld : OUT STD_LOGIC;
    wrow_29_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_29_out_ap_vld : OUT STD_LOGIC;
    wrow_28_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_28_out_ap_vld : OUT STD_LOGIC;
    wrow_27_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_27_out_ap_vld : OUT STD_LOGIC;
    wrow_26_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_26_out_ap_vld : OUT STD_LOGIC;
    wrow_25_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_25_out_ap_vld : OUT STD_LOGIC;
    wrow_24_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_24_out_ap_vld : OUT STD_LOGIC;
    wrow_23_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_23_out_ap_vld : OUT STD_LOGIC;
    wrow_22_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_22_out_ap_vld : OUT STD_LOGIC;
    wrow_21_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_21_out_ap_vld : OUT STD_LOGIC;
    wrow_20_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_20_out_ap_vld : OUT STD_LOGIC;
    wrow_19_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_19_out_ap_vld : OUT STD_LOGIC;
    wrow_18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_18_out_ap_vld : OUT STD_LOGIC;
    wrow_17_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_17_out_ap_vld : OUT STD_LOGIC;
    wrow_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_16_out_ap_vld : OUT STD_LOGIC;
    wrow_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_15_out_ap_vld : OUT STD_LOGIC;
    wrow_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_14_out_ap_vld : OUT STD_LOGIC;
    wrow_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_13_out_ap_vld : OUT STD_LOGIC;
    wrow_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_12_out_ap_vld : OUT STD_LOGIC;
    wrow_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_11_out_ap_vld : OUT STD_LOGIC;
    wrow_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_10_out_ap_vld : OUT STD_LOGIC;
    wrow_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_9_out_ap_vld : OUT STD_LOGIC;
    wrow_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_8_out_ap_vld : OUT STD_LOGIC;
    wrow_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_7_out_ap_vld : OUT STD_LOGIC;
    wrow_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_6_out_ap_vld : OUT STD_LOGIC;
    wrow_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_5_out_ap_vld : OUT STD_LOGIC;
    wrow_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_4_out_ap_vld : OUT STD_LOGIC;
    wrow_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_3_out_ap_vld : OUT STD_LOGIC;
    wrow_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_2_out_ap_vld : OUT STD_LOGIC;
    wrow_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_1_out_ap_vld : OUT STD_LOGIC;
    wrow_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    wrow_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv2_single_from_c1_Pipeline_VITIS_LOOP_101_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln101_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal add_ln101_fu_1035_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln101_reg_2038 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln101_fu_1056_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln101_reg_2048 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln103_2_fu_1051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c1_fu_294 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c1_2 : STD_LOGIC_VECTOR (6 downto 0);
    signal wrow_fu_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_64_fu_1060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_1_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_2_fu_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_3_fu_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_4_fu_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_5_fu_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_6_fu_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_7_fu_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_8_fu_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_9_fu_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_10_fu_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_11_fu_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_12_fu_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_13_fu_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_14_fu_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_15_fu_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_16_fu_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_17_fu_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_18_fu_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_19_fu_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_20_fu_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_21_fu_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_22_fu_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_23_fu_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_24_fu_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_25_fu_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_26_fu_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_27_fu_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_28_fu_410 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_29_fu_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_30_fu_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_31_fu_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_32_fu_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_33_fu_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_34_fu_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_35_fu_438 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_36_fu_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_37_fu_446 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_38_fu_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_39_fu_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_40_fu_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_41_fu_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_42_fu_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_43_fu_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_44_fu_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_45_fu_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_46_fu_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_47_fu_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_48_fu_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_49_fu_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_50_fu_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_51_fu_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_52_fu_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_53_fu_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_54_fu_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_55_fu_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_56_fu_522 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_57_fu_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_58_fu_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_59_fu_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_60_fu_538 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_61_fu_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_62_fu_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal wrow_63_fu_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln103_1_fu_1041_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln103_fu_1045_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    c1_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                c1_fu_294 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                c1_fu_294 <= add_ln101_reg_2038;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln101_reg_2038 <= add_ln101_fu_1035_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                trunc_ln101_reg_2048 <= trunc_ln101_fu_1056_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_A))) then
                wrow_10_fu_338 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_B))) then
                wrow_11_fu_342 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_C))) then
                wrow_12_fu_346 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_D))) then
                wrow_13_fu_350 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_E))) then
                wrow_14_fu_354 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_F))) then
                wrow_15_fu_358 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_10))) then
                wrow_16_fu_362 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_11))) then
                wrow_17_fu_366 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_12))) then
                wrow_18_fu_370 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_13))) then
                wrow_19_fu_374 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1))) then
                wrow_1_fu_302 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_14))) then
                wrow_20_fu_378 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_15))) then
                wrow_21_fu_382 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_16))) then
                wrow_22_fu_386 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_17))) then
                wrow_23_fu_390 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_18))) then
                wrow_24_fu_394 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_19))) then
                wrow_25_fu_398 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1A))) then
                wrow_26_fu_402 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1B))) then
                wrow_27_fu_406 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1C))) then
                wrow_28_fu_410 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1D))) then
                wrow_29_fu_414 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2))) then
                wrow_2_fu_306 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1E))) then
                wrow_30_fu_418 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_1F))) then
                wrow_31_fu_422 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_20))) then
                wrow_32_fu_426 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_21))) then
                wrow_33_fu_430 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_22))) then
                wrow_34_fu_434 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_23))) then
                wrow_35_fu_438 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_24))) then
                wrow_36_fu_442 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_25))) then
                wrow_37_fu_446 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_26))) then
                wrow_38_fu_450 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_27))) then
                wrow_39_fu_454 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3))) then
                wrow_3_fu_310 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_28))) then
                wrow_40_fu_458 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_29))) then
                wrow_41_fu_462 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2A))) then
                wrow_42_fu_466 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2B))) then
                wrow_43_fu_470 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2C))) then
                wrow_44_fu_474 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2D))) then
                wrow_45_fu_478 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2E))) then
                wrow_46_fu_482 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_2F))) then
                wrow_47_fu_486 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_30))) then
                wrow_48_fu_490 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_31))) then
                wrow_49_fu_494 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_4))) then
                wrow_4_fu_314 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_32))) then
                wrow_50_fu_498 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_33))) then
                wrow_51_fu_502 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_34))) then
                wrow_52_fu_506 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_35))) then
                wrow_53_fu_510 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_36))) then
                wrow_54_fu_514 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_37))) then
                wrow_55_fu_518 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_38))) then
                wrow_56_fu_522 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_39))) then
                wrow_57_fu_526 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3A))) then
                wrow_58_fu_530 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3B))) then
                wrow_59_fu_534 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_5))) then
                wrow_5_fu_318 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3C))) then
                wrow_60_fu_538 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3D))) then
                wrow_61_fu_542 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3E))) then
                wrow_62_fu_546 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_3F))) then
                wrow_63_fu_550 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_6))) then
                wrow_6_fu_322 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_7))) then
                wrow_7_fu_326 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_8))) then
                wrow_8_fu_330 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_9))) then
                wrow_9_fu_334 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (trunc_ln101_reg_2048 = ap_const_lv6_0))) then
                wrow_fu_298 <= wrow_64_fu_1060_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln101_fu_1035_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_c1_2) + unsigned(ap_const_lv7_1));
    add_ln103_fu_1045_p2 <= std_logic_vector(unsigned(zext_ln103) + unsigned(zext_ln103_1_fu_1041_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c1_2_assign_proc : process(ap_CS_fsm_state1, c1_fu_294, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_c1_2 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_c1_2 <= c1_fu_294;
        end if; 
    end process;

    conv2_weights_address0 <= zext_ln103_2_fu_1051_p1(11 - 1 downto 0);

    conv2_weights_ce0_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv2_weights_ce0 <= ap_const_logic_1;
        else 
            conv2_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln101_fu_1029_p2 <= "1" when (ap_sig_allocacmp_c1_2 = ap_const_lv7_40) else "0";
    trunc_ln101_fu_1056_p1 <= ap_sig_allocacmp_c1_2(6 - 1 downto 0);
    wrow_10_out <= wrow_10_fu_338;

    wrow_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_10_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_11_out <= wrow_11_fu_342;

    wrow_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_11_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_12_out <= wrow_12_fu_346;

    wrow_12_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_12_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_13_out <= wrow_13_fu_350;

    wrow_13_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_13_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_14_out <= wrow_14_fu_354;

    wrow_14_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_14_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_15_out <= wrow_15_fu_358;

    wrow_15_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_15_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_16_out <= wrow_16_fu_362;

    wrow_16_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_16_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_17_out <= wrow_17_fu_366;

    wrow_17_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_17_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_18_out <= wrow_18_fu_370;

    wrow_18_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_18_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_19_out <= wrow_19_fu_374;

    wrow_19_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_19_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_1_out <= wrow_1_fu_302;

    wrow_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_1_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_20_out <= wrow_20_fu_378;

    wrow_20_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_20_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_21_out <= wrow_21_fu_382;

    wrow_21_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_21_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_22_out <= wrow_22_fu_386;

    wrow_22_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_22_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_23_out <= wrow_23_fu_390;

    wrow_23_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_23_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_24_out <= wrow_24_fu_394;

    wrow_24_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_24_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_25_out <= wrow_25_fu_398;

    wrow_25_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_25_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_26_out <= wrow_26_fu_402;

    wrow_26_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_26_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_27_out <= wrow_27_fu_406;

    wrow_27_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_27_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_28_out <= wrow_28_fu_410;

    wrow_28_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_28_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_29_out <= wrow_29_fu_414;

    wrow_29_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_29_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_2_out <= wrow_2_fu_306;

    wrow_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_2_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_30_out <= wrow_30_fu_418;

    wrow_30_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_30_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_31_out <= wrow_31_fu_422;

    wrow_31_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_31_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_32_out <= wrow_32_fu_426;

    wrow_32_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_32_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_33_out <= wrow_33_fu_430;

    wrow_33_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_33_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_34_out <= wrow_34_fu_434;

    wrow_34_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_34_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_35_out <= wrow_35_fu_438;

    wrow_35_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_35_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_36_out <= wrow_36_fu_442;

    wrow_36_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_36_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_37_out <= wrow_37_fu_446;

    wrow_37_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_37_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_38_out <= wrow_38_fu_450;

    wrow_38_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_38_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_39_out <= wrow_39_fu_454;

    wrow_39_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_39_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_3_out <= wrow_3_fu_310;

    wrow_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_3_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_40_out <= wrow_40_fu_458;

    wrow_40_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_40_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_40_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_41_out <= wrow_41_fu_462;

    wrow_41_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_41_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_41_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_42_out <= wrow_42_fu_466;

    wrow_42_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_42_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_42_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_43_out <= wrow_43_fu_470;

    wrow_43_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_43_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_43_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_44_out <= wrow_44_fu_474;

    wrow_44_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_44_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_44_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_45_out <= wrow_45_fu_478;

    wrow_45_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_45_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_45_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_46_out <= wrow_46_fu_482;

    wrow_46_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_46_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_46_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_47_out <= wrow_47_fu_486;

    wrow_47_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_47_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_47_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_48_out <= wrow_48_fu_490;

    wrow_48_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_48_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_48_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_49_out <= wrow_49_fu_494;

    wrow_49_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_49_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_49_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_4_out <= wrow_4_fu_314;

    wrow_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_4_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_50_out <= wrow_50_fu_498;

    wrow_50_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_50_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_50_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_51_out <= wrow_51_fu_502;

    wrow_51_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_51_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_51_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_52_out <= wrow_52_fu_506;

    wrow_52_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_52_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_52_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_53_out <= wrow_53_fu_510;

    wrow_53_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_53_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_53_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_54_out <= wrow_54_fu_514;

    wrow_54_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_54_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_54_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_55_out <= wrow_55_fu_518;

    wrow_55_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_55_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_55_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_56_out <= wrow_56_fu_522;

    wrow_56_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_56_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_56_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_57_out <= wrow_57_fu_526;

    wrow_57_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_57_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_57_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_58_out <= wrow_58_fu_530;

    wrow_58_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_58_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_58_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_59_out <= wrow_59_fu_534;

    wrow_59_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_59_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_59_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_5_out <= wrow_5_fu_318;

    wrow_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_5_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_60_out <= wrow_60_fu_538;

    wrow_60_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_60_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_60_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_61_out <= wrow_61_fu_542;

    wrow_61_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_61_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_61_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_62_out <= wrow_62_fu_546;

    wrow_62_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_62_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_62_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_63_out <= wrow_63_fu_550;

    wrow_63_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_63_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_63_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_64_fu_1060_p1 <= conv2_weights_q0;
    wrow_6_out <= wrow_6_fu_322;

    wrow_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_6_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_7_out <= wrow_7_fu_326;

    wrow_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_7_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_8_out <= wrow_8_fu_330;

    wrow_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_8_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_9_out <= wrow_9_fu_334;

    wrow_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_9_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    wrow_out <= wrow_fu_298;

    wrow_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln101_fu_1029_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln101_fu_1029_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            wrow_out_ap_vld <= ap_const_logic_1;
        else 
            wrow_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln103_1_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_c1_2),11));
    zext_ln103_2_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln103_fu_1045_p2),64));
end behav;
