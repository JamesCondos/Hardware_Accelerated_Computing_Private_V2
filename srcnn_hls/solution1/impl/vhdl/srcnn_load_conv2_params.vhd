-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_load_conv2_params is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv2_weights_local_0_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    conv2_weights_local_0_0_ce1 : OUT STD_LOGIC;
    conv2_weights_local_0_0_we1 : OUT STD_LOGIC;
    conv2_weights_local_0_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv2_weights_local_0_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    conv2_weights_local_0_1_ce1 : OUT STD_LOGIC;
    conv2_weights_local_0_1_we1 : OUT STD_LOGIC;
    conv2_weights_local_0_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv2_weights_local_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    conv2_weights_local_1_0_ce1 : OUT STD_LOGIC;
    conv2_weights_local_1_0_we1 : OUT STD_LOGIC;
    conv2_weights_local_1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv2_weights_local_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    conv2_weights_local_1_1_ce1 : OUT STD_LOGIC;
    conv2_weights_local_1_1_we1 : OUT STD_LOGIC;
    conv2_weights_local_1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv2_biases_local_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_biases_local_ce1 : OUT STD_LOGIC;
    conv2_biases_local_we1 : OUT STD_LOGIC;
    conv2_biases_local_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_AWREADY : IN STD_LOGIC;
    m_axi_gmem_w2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_w2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_WVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_WREADY : IN STD_LOGIC;
    m_axi_gmem_w2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_WLAST : OUT STD_LOGIC;
    m_axi_gmem_w2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_w2_ARREADY : IN STD_LOGIC;
    m_axi_gmem_w2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_w2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_w2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RVALID : IN STD_LOGIC;
    m_axi_gmem_w2_RREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_w2_RLAST : IN STD_LOGIC;
    m_axi_gmem_w2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_w2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BVALID : IN STD_LOGIC;
    m_axi_gmem_w2_BREADY : OUT STD_LOGIC;
    m_axi_gmem_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_w2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_w2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv2_biases : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of srcnn_load_conv2_params is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_w2_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem_w2_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln_reg_249 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln161_fu_162_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln161_reg_254 : STD_LOGIC_VECTOR (62 downto 0);
    signal i_2_reg_259 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln161_fu_174_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln161_reg_266 : STD_LOGIC_VECTOR (4 downto 0);
    signal gmem_w2_addr_reg_275 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln161_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_w2_addr_read_reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln161_2_fu_218_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln161_2_reg_286 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal shl_ln_fu_222_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_reg_291 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_idle : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_ready : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWVALID : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WVALID : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WLAST : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARVALID : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_RREADY : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_BREADY : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_ce1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_we1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_ce1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_we1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_ce1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_we1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_ce1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_we1 : STD_LOGIC;
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln161_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln162_fu_199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_78 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln161_fu_184_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln161_1_fu_152_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln161_1_fu_190_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln162_fu_194_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_load_conv2_params_Pipeline_VITIS_LOOP_163_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_w2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_w2_AWREADY : IN STD_LOGIC;
        m_axi_gmem_w2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_WVALID : OUT STD_LOGIC;
        m_axi_gmem_w2_WREADY : IN STD_LOGIC;
        m_axi_gmem_w2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_WLAST : OUT STD_LOGIC;
        m_axi_gmem_w2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_w2_ARREADY : IN STD_LOGIC;
        m_axi_gmem_w2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_w2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_w2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_RVALID : IN STD_LOGIC;
        m_axi_gmem_w2_RREADY : OUT STD_LOGIC;
        m_axi_gmem_w2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_w2_RLAST : IN STD_LOGIC;
        m_axi_gmem_w2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_w2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_BVALID : IN STD_LOGIC;
        m_axi_gmem_w2_BREADY : OUT STD_LOGIC;
        m_axi_gmem_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_w2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_w2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        i : IN STD_LOGIC_VECTOR (4 downto 0);
        trunc_ln165 : IN STD_LOGIC_VECTOR (0 downto 0);
        conv2_weights_local_0_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2_weights_local_0_0_ce1 : OUT STD_LOGIC;
        conv2_weights_local_0_0_we1 : OUT STD_LOGIC;
        conv2_weights_local_0_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_weights_local_0_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2_weights_local_0_1_ce1 : OUT STD_LOGIC;
        conv2_weights_local_0_1_we1 : OUT STD_LOGIC;
        conv2_weights_local_0_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_weights_local_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2_weights_local_1_0_ce1 : OUT STD_LOGIC;
        conv2_weights_local_1_0_we1 : OUT STD_LOGIC;
        conv2_weights_local_1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_weights_local_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv2_weights_local_1_1_ce1 : OUT STD_LOGIC;
        conv2_weights_local_1_1_we1 : OUT STD_LOGIC;
        conv2_weights_local_1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        zext_ln161_2 : IN STD_LOGIC_VECTOR (10 downto 0);
        sext_ln161 : IN STD_LOGIC_VECTOR (61 downto 0);
        trunc_ln161_2 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123 : component srcnn_load_conv2_params_Pipeline_VITIS_LOOP_163_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start,
        ap_done => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done,
        ap_idle => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_idle,
        ap_ready => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_ready,
        m_axi_gmem_w2_AWVALID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWVALID,
        m_axi_gmem_w2_AWREADY => ap_const_logic_0,
        m_axi_gmem_w2_AWADDR => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWADDR,
        m_axi_gmem_w2_AWID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWID,
        m_axi_gmem_w2_AWLEN => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWLEN,
        m_axi_gmem_w2_AWSIZE => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWSIZE,
        m_axi_gmem_w2_AWBURST => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWBURST,
        m_axi_gmem_w2_AWLOCK => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWLOCK,
        m_axi_gmem_w2_AWCACHE => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWCACHE,
        m_axi_gmem_w2_AWPROT => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWPROT,
        m_axi_gmem_w2_AWQOS => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWQOS,
        m_axi_gmem_w2_AWREGION => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWREGION,
        m_axi_gmem_w2_AWUSER => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_AWUSER,
        m_axi_gmem_w2_WVALID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WVALID,
        m_axi_gmem_w2_WREADY => ap_const_logic_0,
        m_axi_gmem_w2_WDATA => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WDATA,
        m_axi_gmem_w2_WSTRB => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WSTRB,
        m_axi_gmem_w2_WLAST => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WLAST,
        m_axi_gmem_w2_WID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WID,
        m_axi_gmem_w2_WUSER => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_WUSER,
        m_axi_gmem_w2_ARVALID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARVALID,
        m_axi_gmem_w2_ARREADY => m_axi_gmem_w2_ARREADY,
        m_axi_gmem_w2_ARADDR => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARADDR,
        m_axi_gmem_w2_ARID => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARID,
        m_axi_gmem_w2_ARLEN => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLEN,
        m_axi_gmem_w2_ARSIZE => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARSIZE,
        m_axi_gmem_w2_ARBURST => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARBURST,
        m_axi_gmem_w2_ARLOCK => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLOCK,
        m_axi_gmem_w2_ARCACHE => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARCACHE,
        m_axi_gmem_w2_ARPROT => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARPROT,
        m_axi_gmem_w2_ARQOS => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARQOS,
        m_axi_gmem_w2_ARREGION => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARREGION,
        m_axi_gmem_w2_ARUSER => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARUSER,
        m_axi_gmem_w2_RVALID => m_axi_gmem_w2_RVALID,
        m_axi_gmem_w2_RREADY => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_RREADY,
        m_axi_gmem_w2_RDATA => m_axi_gmem_w2_RDATA,
        m_axi_gmem_w2_RLAST => m_axi_gmem_w2_RLAST,
        m_axi_gmem_w2_RID => m_axi_gmem_w2_RID,
        m_axi_gmem_w2_RFIFONUM => m_axi_gmem_w2_RFIFONUM,
        m_axi_gmem_w2_RUSER => m_axi_gmem_w2_RUSER,
        m_axi_gmem_w2_RRESP => m_axi_gmem_w2_RRESP,
        m_axi_gmem_w2_BVALID => ap_const_logic_0,
        m_axi_gmem_w2_BREADY => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_BREADY,
        m_axi_gmem_w2_BRESP => ap_const_lv2_0,
        m_axi_gmem_w2_BID => ap_const_lv1_0,
        m_axi_gmem_w2_BUSER => ap_const_lv1_0,
        i => trunc_ln161_reg_266,
        trunc_ln165 => tmp_reg_296,
        conv2_weights_local_0_0_address1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_address1,
        conv2_weights_local_0_0_ce1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_ce1,
        conv2_weights_local_0_0_we1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_we1,
        conv2_weights_local_0_0_d1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_d1,
        conv2_weights_local_0_1_address1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_address1,
        conv2_weights_local_0_1_ce1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_ce1,
        conv2_weights_local_0_1_we1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_we1,
        conv2_weights_local_0_1_d1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_d1,
        conv2_weights_local_1_0_address1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_address1,
        conv2_weights_local_1_0_ce1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_ce1,
        conv2_weights_local_1_0_we1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_we1,
        conv2_weights_local_1_0_d1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_d1,
        conv2_weights_local_1_1_address1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_address1,
        conv2_weights_local_1_1_ce1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_ce1,
        conv2_weights_local_1_1_we1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_we1,
        conv2_weights_local_1_1_d1 => grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_d1,
        zext_ln161_2 => shl_ln_reg_291,
        sext_ln161 => trunc_ln_reg_249,
        trunc_ln161_2 => trunc_ln161_2_reg_286);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_ready = ap_const_logic_1)) then 
                    grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_78 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln161_fu_178_p2 = ap_const_lv1_0))) then 
                i_fu_78 <= add_ln161_fu_184_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                gmem_w2_addr_read_reg_281 <= m_axi_gmem_w2_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln161_fu_178_p2 = ap_const_lv1_0))) then
                gmem_w2_addr_reg_275 <= sext_ln162_fu_199_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_2_reg_259 <= i_fu_78;
                trunc_ln161_reg_266 <= trunc_ln161_fu_174_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sext_ln161_reg_254 <= sext_ln161_fu_162_p1;
                trunc_ln_reg_249 <= conv2_weights(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    shl_ln_reg_291(10 downto 6) <= shl_ln_fu_222_p3(10 downto 6);
                tmp_reg_296 <= i_2_reg_259(1 downto 1);
                trunc_ln161_2_reg_286 <= trunc_ln161_2_fu_218_p1;
            end if;
        end if;
    end process;
    shl_ln_reg_291(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_w2_ARREADY, m_axi_gmem_w2_RVALID, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state2, icmp_ln161_fu_178_p2, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done, ap_CS_fsm_state13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln161_fu_178_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((m_axi_gmem_w2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_w2_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln161_fu_184_p2 <= std_logic_vector(unsigned(i_fu_78) + unsigned(ap_const_lv6_1));
    add_ln162_fu_194_p2 <= std_logic_vector(signed(sext_ln161_reg_254) + signed(zext_ln161_1_fu_190_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_gmem_w2_RVALID)
    begin
        if ((m_axi_gmem_w2_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done)
    begin
        if ((grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_gmem_w2_ARREADY)
    begin
        if ((m_axi_gmem_w2_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln161_fu_178_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln161_fu_178_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln161_fu_178_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln161_fu_178_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv2_biases_local_address1 <= zext_ln161_fu_214_p1(5 - 1 downto 0);

    conv2_biases_local_ce1_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv2_biases_local_ce1 <= ap_const_logic_1;
        else 
            conv2_biases_local_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_biases_local_d1 <= gmem_w2_addr_read_reg_281;

    conv2_biases_local_we1_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv2_biases_local_we1 <= ap_const_logic_1;
        else 
            conv2_biases_local_we1 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_weights_local_0_0_address1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_address1;
    conv2_weights_local_0_0_ce1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_ce1;
    conv2_weights_local_0_0_d1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_d1;
    conv2_weights_local_0_0_we1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_0_we1;
    conv2_weights_local_0_1_address1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_address1;
    conv2_weights_local_0_1_ce1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_ce1;
    conv2_weights_local_0_1_d1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_d1;
    conv2_weights_local_0_1_we1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_0_1_we1;
    conv2_weights_local_1_0_address1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_address1;
    conv2_weights_local_1_0_ce1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_ce1;
    conv2_weights_local_1_0_d1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_d1;
    conv2_weights_local_1_0_we1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_0_we1;
    conv2_weights_local_1_1_address1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_address1;
    conv2_weights_local_1_1_ce1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_ce1;
    conv2_weights_local_1_1_d1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_d1;
    conv2_weights_local_1_1_we1 <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_conv2_weights_local_1_1_we1;

    gmem_w2_blk_n_AR_assign_proc : process(m_axi_gmem_w2_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            gmem_w2_blk_n_AR <= m_axi_gmem_w2_ARREADY;
        else 
            gmem_w2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_w2_blk_n_R_assign_proc : process(m_axi_gmem_w2_RVALID, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            gmem_w2_blk_n_R <= m_axi_gmem_w2_RVALID;
        else 
            gmem_w2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_ap_start_reg;
    icmp_ln161_fu_178_p2 <= "1" when (i_fu_78 = ap_const_lv6_20) else "0";

    m_axi_gmem_w2_ARADDR_assign_proc : process(m_axi_gmem_w2_ARREADY, ap_CS_fsm_state3, gmem_w2_addr_reg_275, ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARADDR, ap_CS_fsm_state13)
    begin
        if (((m_axi_gmem_w2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_w2_ARADDR <= gmem_w2_addr_reg_275;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARADDR <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARADDR;
        else 
            m_axi_gmem_w2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_w2_ARBURST_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARBURST, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARBURST <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARBURST;
        else 
            m_axi_gmem_w2_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARCACHE_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARCACHE, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARCACHE <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARCACHE;
        else 
            m_axi_gmem_w2_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARID_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARID, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARID <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARID;
        else 
            m_axi_gmem_w2_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARLEN_assign_proc : process(m_axi_gmem_w2_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLEN, ap_CS_fsm_state13)
    begin
        if (((m_axi_gmem_w2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_w2_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARLEN <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLEN;
        else 
            m_axi_gmem_w2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_w2_ARLOCK_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLOCK, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARLOCK <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARLOCK;
        else 
            m_axi_gmem_w2_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARPROT_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARPROT, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARPROT <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARPROT;
        else 
            m_axi_gmem_w2_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARQOS_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARQOS, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARQOS <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARQOS;
        else 
            m_axi_gmem_w2_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARREGION_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARREGION, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARREGION <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARREGION;
        else 
            m_axi_gmem_w2_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARSIZE_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARSIZE, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARSIZE <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARSIZE;
        else 
            m_axi_gmem_w2_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARUSER_assign_proc : process(ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARUSER, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARUSER <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARUSER;
        else 
            m_axi_gmem_w2_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_w2_ARVALID_assign_proc : process(m_axi_gmem_w2_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARVALID, ap_CS_fsm_state13)
    begin
        if (((m_axi_gmem_w2_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_w2_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_ARVALID <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_ARVALID;
        else 
            m_axi_gmem_w2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_w2_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_w2_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_w2_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_w2_AWID <= ap_const_lv1_0;
    m_axi_gmem_w2_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_w2_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_w2_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_w2_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_w2_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_w2_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_w2_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_w2_AWVALID <= ap_const_logic_0;
    m_axi_gmem_w2_BREADY <= ap_const_logic_0;

    m_axi_gmem_w2_RREADY_assign_proc : process(m_axi_gmem_w2_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_RREADY, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_w2_RVALID = ap_const_logic_1))) then 
            m_axi_gmem_w2_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_gmem_w2_RREADY <= grp_load_conv2_params_Pipeline_VITIS_LOOP_163_2_fu_123_m_axi_gmem_w2_RREADY;
        else 
            m_axi_gmem_w2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_w2_WDATA <= ap_const_lv32_0;
    m_axi_gmem_w2_WID <= ap_const_lv1_0;
    m_axi_gmem_w2_WLAST <= ap_const_logic_0;
    m_axi_gmem_w2_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_w2_WUSER <= ap_const_lv1_0;
    m_axi_gmem_w2_WVALID <= ap_const_logic_0;
        sext_ln161_fu_162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln161_1_fu_152_p4),63));

        sext_ln162_fu_199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln162_fu_194_p2),64));

    shl_ln_fu_222_p3 <= (trunc_ln161_reg_266 & ap_const_lv6_0);
    trunc_ln161_1_fu_152_p4 <= conv2_biases(63 downto 2);
    trunc_ln161_2_fu_218_p1 <= i_2_reg_259(1 - 1 downto 0);
    trunc_ln161_fu_174_p1 <= i_fu_78(5 - 1 downto 0);
    zext_ln161_1_fu_190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_78),63));
    zext_ln161_fu_214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_259),64));
end behav;
