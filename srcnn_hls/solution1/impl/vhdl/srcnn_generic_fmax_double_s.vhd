-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_generic_fmax_double_s is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of srcnn_generic_fmax_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal data_fu_30_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fp_exp_fu_42_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fp_sig_fu_52_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln25_fu_56_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_1_fu_62_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln18_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fp_sign_fu_34_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_1_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin



    and_ln18_fu_86_p2 <= (xor_ln18_fu_80_p2 and icmp_ln18_fu_74_p2);
    and_ln25_fu_68_p2 <= (icmp_ln25_fu_56_p2 and icmp_ln25_1_fu_62_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        ap_const_lv64_0 when (or_ln18_1_fu_98_p2(0) = '1') else 
        x;
    data_fu_30_p1 <= x;
    icmp_ln18_fu_74_p2 <= "1" when (x_fp_exp_fu_42_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln25_1_fu_62_p2 <= "1" when (x_fp_sig_fu_52_p1 = ap_const_lv52_0) else "0";
    icmp_ln25_fu_56_p2 <= "1" when (x_fp_exp_fu_42_p4 = ap_const_lv11_0) else "0";
    or_ln18_1_fu_98_p2 <= (x_fp_sign_fu_34_p3 or or_ln18_fu_92_p2);
    or_ln18_fu_92_p2 <= (and_ln25_fu_68_p2 or and_ln18_fu_86_p2);
    x_fp_exp_fu_42_p4 <= data_fu_30_p1(62 downto 52);
    x_fp_sig_fu_52_p1 <= data_fu_30_p1(52 - 1 downto 0);
    x_fp_sign_fu_34_p3 <= data_fu_30_p1(63 downto 63);
    xor_ln18_fu_80_p2 <= (icmp_ln25_1_fu_62_p2 xor ap_const_lv1_1);
end behav;
