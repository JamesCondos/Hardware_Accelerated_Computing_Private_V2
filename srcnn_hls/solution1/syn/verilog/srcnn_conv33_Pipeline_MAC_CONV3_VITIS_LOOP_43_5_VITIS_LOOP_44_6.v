// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv33_Pipeline_MAC_CONV3_VITIS_LOOP_43_5_VITIS_LOOP_44_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv3_weights_address0,
        conv3_weights_ce0,
        conv3_weights_q0,
        conv3_weights_address1,
        conv3_weights_ce1,
        conv3_weights_q1,
        layer3_output_tile_address0,
        layer3_output_tile_ce0,
        layer3_output_tile_we0,
        layer3_output_tile_d0,
        layer3_output_tile_q0,
        input_tile_address0,
        input_tile_ce0,
        input_tile_q0,
        input_tile_address1,
        input_tile_ce1,
        input_tile_q1,
        grp_fu_79_p_din0,
        grp_fu_79_p_din1,
        grp_fu_79_p_opcode,
        grp_fu_79_p_dout0,
        grp_fu_79_p_ce,
        grp_fu_83_p_din0,
        grp_fu_83_p_din1,
        grp_fu_83_p_opcode,
        grp_fu_83_p_dout0,
        grp_fu_83_p_ce,
        grp_fu_87_p_din0,
        grp_fu_87_p_din1,
        grp_fu_87_p_dout0,
        grp_fu_87_p_ce,
        grp_fu_91_p_din0,
        grp_fu_91_p_din1,
        grp_fu_91_p_dout0,
        grp_fu_91_p_ce,
        grp_fu_95_p_din0,
        grp_fu_95_p_dout0,
        grp_fu_95_p_ce,
        grp_generic_fmax_float_s_fu_98_p_din1,
        grp_generic_fmax_float_s_fu_98_p_dout0,
        grp_generic_fmax_float_s_fu_98_p_ready,
        grp_generic_fmin_float_s_fu_102_p_din1,
        grp_generic_fmin_float_s_fu_102_p_dout0,
        grp_generic_fmin_float_s_fu_102_p_ready
);

parameter    ap_ST_fsm_pp0_stage0 = 13'd1;
parameter    ap_ST_fsm_pp0_stage1 = 13'd2;
parameter    ap_ST_fsm_pp0_stage2 = 13'd4;
parameter    ap_ST_fsm_pp0_stage3 = 13'd8;
parameter    ap_ST_fsm_pp0_stage4 = 13'd16;
parameter    ap_ST_fsm_pp0_stage5 = 13'd32;
parameter    ap_ST_fsm_pp0_stage6 = 13'd64;
parameter    ap_ST_fsm_pp0_stage7 = 13'd128;
parameter    ap_ST_fsm_pp0_stage8 = 13'd256;
parameter    ap_ST_fsm_pp0_stage9 = 13'd512;
parameter    ap_ST_fsm_pp0_stage10 = 13'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 13'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv3_weights_address0;
output   conv3_weights_ce0;
input  [31:0] conv3_weights_q0;
output  [9:0] conv3_weights_address1;
output   conv3_weights_ce1;
input  [31:0] conv3_weights_q1;
output  [8:0] layer3_output_tile_address0;
output   layer3_output_tile_ce0;
output   layer3_output_tile_we0;
output  [31:0] layer3_output_tile_d0;
input  [31:0] layer3_output_tile_q0;
output  [13:0] input_tile_address0;
output   input_tile_ce0;
input  [31:0] input_tile_q0;
output  [13:0] input_tile_address1;
output   input_tile_ce1;
input  [31:0] input_tile_q1;
output  [31:0] grp_fu_79_p_din0;
output  [31:0] grp_fu_79_p_din1;
output  [1:0] grp_fu_79_p_opcode;
input  [31:0] grp_fu_79_p_dout0;
output   grp_fu_79_p_ce;
output  [31:0] grp_fu_83_p_din0;
output  [31:0] grp_fu_83_p_din1;
output  [1:0] grp_fu_83_p_opcode;
input  [31:0] grp_fu_83_p_dout0;
output   grp_fu_83_p_ce;
output  [31:0] grp_fu_87_p_din0;
output  [31:0] grp_fu_87_p_din1;
input  [31:0] grp_fu_87_p_dout0;
output   grp_fu_87_p_ce;
output  [31:0] grp_fu_91_p_din0;
output  [31:0] grp_fu_91_p_din1;
input  [31:0] grp_fu_91_p_dout0;
output   grp_fu_91_p_ce;
output  [31:0] grp_fu_95_p_din0;
input  [31:0] grp_fu_95_p_dout0;
output   grp_fu_95_p_ce;
output  [31:0] grp_generic_fmax_float_s_fu_98_p_din1;
input  [31:0] grp_generic_fmax_float_s_fu_98_p_dout0;
input   grp_generic_fmax_float_s_fu_98_p_ready;
output  [31:0] grp_generic_fmin_float_s_fu_102_p_din1;
input  [31:0] grp_generic_fmin_float_s_fu_102_p_dout0;
input   grp_generic_fmin_float_s_fu_102_p_ready;

reg ap_idle;
reg[9:0] conv3_weights_address0;
reg conv3_weights_ce0;
reg[9:0] conv3_weights_address1;
reg conv3_weights_ce1;
reg[8:0] layer3_output_tile_address0;
reg layer3_output_tile_ce0;
reg layer3_output_tile_we0;
reg[13:0] input_tile_address0;
reg input_tile_ce0;
reg[13:0] input_tile_address1;
reg input_tile_ce1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state26_pp0_stage12_iter1;
wire    ap_block_state39_pp0_stage12_iter2;
wire    ap_block_state52_pp0_stage12_iter3;
wire    ap_block_state65_pp0_stage12_iter4;
wire    ap_block_state78_pp0_stage12_iter5;
wire    ap_block_state91_pp0_stage12_iter6;
wire    ap_block_state104_pp0_stage12_iter7;
wire    ap_block_pp0_stage12_subdone;
reg   [0:0] icmp_ln42_reg_3225;
reg    ap_condition_exit_pp0_iter0_stage12;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_643;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state18_pp0_stage4_iter1;
wire    ap_block_state31_pp0_stage4_iter2;
wire    ap_block_state44_pp0_stage4_iter3;
wire    ap_block_state57_pp0_stage4_iter4;
wire    ap_block_state70_pp0_stage4_iter5;
wire    ap_block_state83_pp0_stage4_iter6;
wire    ap_block_state96_pp0_stage4_iter7;
wire    ap_block_state109_pp0_stage4_iter8;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state19_pp0_stage5_iter1;
wire    ap_block_state32_pp0_stage5_iter2;
wire    ap_block_state45_pp0_stage5_iter3;
wire    ap_block_state58_pp0_stage5_iter4;
wire    ap_block_state71_pp0_stage5_iter5;
wire    ap_block_state84_pp0_stage5_iter6;
wire    ap_block_state97_pp0_stage5_iter7;
wire    ap_block_state110_pp0_stage5_iter8;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state20_pp0_stage6_iter1;
wire    ap_block_state33_pp0_stage6_iter2;
wire    ap_block_state46_pp0_stage6_iter3;
wire    ap_block_state59_pp0_stage6_iter4;
wire    ap_block_state72_pp0_stage6_iter5;
wire    ap_block_state85_pp0_stage6_iter6;
wire    ap_block_state98_pp0_stage6_iter7;
wire    ap_block_state111_pp0_stage6_iter8;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state21_pp0_stage7_iter1;
wire    ap_block_state34_pp0_stage7_iter2;
wire    ap_block_state47_pp0_stage7_iter3;
wire    ap_block_state60_pp0_stage7_iter4;
wire    ap_block_state73_pp0_stage7_iter5;
wire    ap_block_state86_pp0_stage7_iter6;
wire    ap_block_state99_pp0_stage7_iter7;
wire    ap_block_state112_pp0_stage7_iter8;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state22_pp0_stage8_iter1;
wire    ap_block_state35_pp0_stage8_iter2;
wire    ap_block_state48_pp0_stage8_iter3;
wire    ap_block_state61_pp0_stage8_iter4;
wire    ap_block_state74_pp0_stage8_iter5;
wire    ap_block_state87_pp0_stage8_iter6;
wire    ap_block_state100_pp0_stage8_iter7;
wire    ap_block_state113_pp0_stage8_iter8;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state23_pp0_stage9_iter1;
wire    ap_block_state36_pp0_stage9_iter2;
wire    ap_block_state49_pp0_stage9_iter3;
wire    ap_block_state62_pp0_stage9_iter4;
wire    ap_block_state75_pp0_stage9_iter5;
wire    ap_block_state88_pp0_stage9_iter6;
wire    ap_block_state101_pp0_stage9_iter7;
wire    ap_block_state114_pp0_stage9_iter8;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state24_pp0_stage10_iter1;
wire    ap_block_state37_pp0_stage10_iter2;
wire    ap_block_state50_pp0_stage10_iter3;
wire    ap_block_state63_pp0_stage10_iter4;
wire    ap_block_state76_pp0_stage10_iter5;
wire    ap_block_state89_pp0_stage10_iter6;
wire    ap_block_state102_pp0_stage10_iter7;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_state27_pp0_stage0_iter2;
wire    ap_block_state40_pp0_stage0_iter3;
wire    ap_block_state53_pp0_stage0_iter4;
wire    ap_block_state66_pp0_stage0_iter5;
wire    ap_block_state79_pp0_stage0_iter6;
wire    ap_block_state92_pp0_stage0_iter7;
wire    ap_block_state105_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_state28_pp0_stage1_iter2;
wire    ap_block_state41_pp0_stage1_iter3;
wire    ap_block_state54_pp0_stage1_iter4;
wire    ap_block_state67_pp0_stage1_iter5;
wire    ap_block_state80_pp0_stage1_iter6;
wire    ap_block_state93_pp0_stage1_iter7;
wire    ap_block_state106_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] reg_648;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state25_pp0_stage11_iter1;
wire    ap_block_state38_pp0_stage11_iter2;
wire    ap_block_state51_pp0_stage11_iter3;
wire    ap_block_state64_pp0_stage11_iter4;
wire    ap_block_state77_pp0_stage11_iter5;
wire    ap_block_state90_pp0_stage11_iter6;
wire    ap_block_state103_pp0_stage11_iter7;
wire    ap_block_pp0_stage11_11001;
reg   [31:0] reg_653;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state16_pp0_stage2_iter1;
wire    ap_block_state29_pp0_stage2_iter2;
wire    ap_block_state42_pp0_stage2_iter3;
wire    ap_block_state55_pp0_stage2_iter4;
wire    ap_block_state68_pp0_stage2_iter5;
wire    ap_block_state81_pp0_stage2_iter6;
wire    ap_block_state94_pp0_stage2_iter7;
wire    ap_block_state107_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] reg_659;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state17_pp0_stage3_iter1;
wire    ap_block_state30_pp0_stage3_iter2;
wire    ap_block_state43_pp0_stage3_iter3;
wire    ap_block_state56_pp0_stage3_iter4;
wire    ap_block_state69_pp0_stage3_iter5;
wire    ap_block_state82_pp0_stage3_iter6;
wire    ap_block_state95_pp0_stage3_iter7;
wire    ap_block_state108_pp0_stage3_iter8;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] reg_664;
reg   [31:0] reg_669;
reg   [31:0] reg_676;
reg   [31:0] reg_681;
reg   [31:0] reg_686;
reg   [31:0] reg_691;
reg   [31:0] reg_696;
reg   [31:0] reg_701;
reg   [31:0] reg_706;
reg   [31:0] reg_711;
reg   [31:0] reg_716;
reg   [4:0] th_1_reg_3215;
reg   [13:0] indvar_flatten68_load_reg_3220;
wire   [0:0] icmp_ln42_fu_753_p2;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter1_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter2_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter3_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter4_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter5_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter6_reg;
reg   [0:0] icmp_ln42_reg_3225_pp0_iter7_reg;
reg   [9:0] indvar_flatten26_load_reg_3229;
wire   [0:0] icmp_ln43_fu_774_p2;
reg   [0:0] icmp_ln43_reg_3234;
wire   [10:0] add_ln51_fu_812_p2;
reg   [10:0] add_ln51_reg_3240;
wire   [9:0] trunc_ln50_fu_829_p1;
reg   [9:0] trunc_ln50_reg_3245;
wire   [0:0] and_ln42_fu_856_p2;
reg   [0:0] and_ln42_reg_3282;
wire   [4:0] add_ln43_fu_862_p2;
reg   [4:0] add_ln43_reg_3287;
wire   [4:0] select_ln43_fu_874_p3;
reg   [4:0] select_ln43_reg_3292;
wire   [4:0] select_ln43_1_fu_882_p3;
reg   [4:0] select_ln43_1_reg_3300;
reg   [8:0] layer3_output_tile_addr_reg_3308;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter1_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter2_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter3_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter4_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter5_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter6_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter7_reg;
reg   [8:0] layer3_output_tile_addr_reg_3308_pp0_iter8_reg;
wire   [31:0] zext_ln48_fu_923_p1;
reg   [31:0] conv3_weights_load_reg_3318;
reg   [31:0] conv3_weights_load_1_reg_3323;
reg   [31:0] layer3_output_tile_load_reg_3338;
wire  signed [31:0] x_assign147_fu_963_p1;
reg   [31:0] conv3_weights_load_2_reg_3348;
reg   [31:0] conv3_weights_load_3_reg_3353;
wire  signed [31:0] sext_ln48_fu_993_p1;
reg   [31:0] conv3_weights_load_4_reg_3373;
reg   [31:0] conv3_weights_load_5_reg_3378;
wire  signed [31:0] sext_ln48_1_fu_1023_p1;
reg   [31:0] conv3_weights_load_6_reg_3398;
reg   [31:0] conv3_weights_load_7_reg_3403;
wire   [13:0] select_ln59_3_fu_1180_p3;
reg   [13:0] select_ln59_3_reg_3418;
wire   [31:0] zext_ln48_1_fu_1193_p1;
wire   [11:0] zext_ln42_fu_1203_p1;
reg   [11:0] zext_ln42_reg_3432;
reg   [31:0] conv3_weights_load_8_reg_3440;
reg   [31:0] conv3_weights_load_9_reg_3445;
wire   [13:0] add_ln51_2_fu_1392_p2;
reg   [13:0] add_ln51_2_reg_3460;
wire   [31:0] zext_ln48_2_fu_1403_p1;
reg   [31:0] conv3_weights_load_10_reg_3474;
reg   [31:0] conv3_weights_load_11_reg_3479;
wire   [13:0] select_ln59_1_fu_1560_p3;
reg   [13:0] select_ln59_1_reg_3494;
wire  signed [31:0] x_assign_150_fu_1582_p1;
wire   [31:0] th_cast22_fu_1587_p1;
reg   [31:0] conv3_weights_load_12_reg_3518;
reg   [31:0] conv3_weights_load_13_reg_3523;
wire   [13:0] select_ln59_2_fu_1752_p3;
reg   [13:0] select_ln59_2_reg_3543;
wire   [31:0] bitcast_ln42_2_fu_1760_p1;
reg   [31:0] conv3_weights_load_14_reg_3557;
reg   [31:0] conv3_weights_load_15_reg_3562;
wire   [31:0] th_cast22_mid1_fu_1784_p1;
wire   [13:0] select_ln59_4_fu_1929_p3;
reg   [13:0] select_ln59_4_reg_3587;
wire   [31:0] bitcast_ln42_fu_1937_p1;
reg   [31:0] conv3_weights_load_16_reg_3601;
reg   [31:0] conv3_weights_load_17_reg_3606;
wire   [13:0] select_ln59_5_fu_2102_p3;
reg   [13:0] select_ln59_5_reg_3626;
wire   [31:0] p_cast25_fu_2115_p1;
reg   [31:0] x_assign_2_reg_3640;
wire   [31:0] bitcast_ln42_1_fu_2125_p1;
reg   [31:0] conv3_weights_load_18_reg_3650;
reg   [31:0] conv3_weights_load_19_reg_3655;
reg   [31:0] mul_0_2_reg_3670;
wire   [13:0] add_ln51_9_fu_2323_p2;
reg   [13:0] add_ln51_9_reg_3680;
wire   [31:0] p_cast26_fu_2334_p1;
wire   [31:0] bitcast_ln42_3_fu_2344_p1;
reg   [31:0] conv3_weights_load_20_reg_3699;
reg   [31:0] conv3_weights_load_21_reg_3704;
reg   [31:0] mul_reg_3719;
wire   [31:0] bitcast_ln42_4_fu_2400_p1;
reg   [31:0] conv3_weights_load_22_reg_3739;
reg   [31:0] conv3_weights_load_23_reg_3744;
reg   [31:0] mul_0_1_reg_3754;
wire   [13:0] add_ln51_16_fu_2597_p2;
reg   [13:0] add_ln51_16_reg_3769;
wire   [31:0] bitcast_ln42_5_fu_2620_p1;
wire   [31:0] bitcast_ln42_6_fu_2624_p1;
reg   [31:0] conv3_weights_load_24_reg_3788;
reg   [31:0] mul_0_3_reg_3793;
wire   [13:0] add_ln51_23_fu_2811_p2;
reg   [13:0] add_ln51_23_reg_3808;
wire   [31:0] bitcast_ln42_7_fu_2817_p1;
wire   [31:0] bitcast_ln42_8_fu_2821_p1;
reg   [31:0] mul_0_4_reg_3827;
reg   [31:0] mul_0_4_reg_3827_pp0_iter2_reg;
wire   [13:0] add_ln51_30_fu_3008_p2;
reg   [13:0] add_ln51_30_reg_3842;
wire   [31:0] bitcast_ln42_9_fu_3014_p1;
wire   [31:0] bitcast_ln42_10_fu_3018_p1;
reg   [31:0] mul_1_reg_3861;
reg   [31:0] mul_1_reg_3861_pp0_iter2_reg;
reg   [31:0] mul_1_1_reg_3866;
reg   [31:0] mul_1_1_reg_3866_pp0_iter2_reg;
wire   [31:0] bitcast_ln42_11_fu_3040_p1;
wire   [31:0] bitcast_ln42_12_fu_3044_p1;
reg   [31:0] mul_1_2_reg_3891;
reg   [31:0] mul_1_2_reg_3891_pp0_iter2_reg;
reg   [31:0] mul_1_3_reg_3896;
reg   [31:0] mul_1_3_reg_3896_pp0_iter2_reg;
reg   [31:0] mul_1_3_reg_3896_pp0_iter3_reg;
wire   [31:0] bitcast_ln42_13_fu_3066_p1;
wire   [31:0] bitcast_ln42_14_fu_3070_p1;
reg   [31:0] mul_1_4_reg_3921;
reg   [31:0] mul_1_4_reg_3921_pp0_iter2_reg;
reg   [31:0] mul_1_4_reg_3921_pp0_iter3_reg;
reg   [31:0] mul_2_reg_3926;
reg   [31:0] mul_2_reg_3926_pp0_iter2_reg;
reg   [31:0] mul_2_reg_3926_pp0_iter3_reg;
wire   [13:0] add_ln51_28_fu_3092_p2;
reg   [13:0] add_ln51_28_reg_3941;
wire   [13:0] add_ln51_31_fu_3096_p2;
reg   [13:0] add_ln51_31_reg_3946;
wire   [13:0] add_ln51_32_fu_3100_p2;
reg   [13:0] add_ln51_32_reg_3951;
wire   [13:0] add_ln51_33_fu_3104_p2;
reg   [13:0] add_ln51_33_reg_3956;
wire   [13:0] add_ln51_34_fu_3108_p2;
reg   [13:0] add_ln51_34_reg_3961;
wire   [13:0] add_ln51_35_fu_3112_p2;
reg   [13:0] add_ln51_35_reg_3966;
wire   [31:0] bitcast_ln42_15_fu_3116_p1;
wire   [31:0] bitcast_ln42_16_fu_3120_p1;
reg   [31:0] mul_2_1_reg_3981;
reg   [31:0] mul_2_1_reg_3981_pp0_iter2_reg;
reg   [31:0] mul_2_1_reg_3981_pp0_iter3_reg;
reg   [31:0] mul_2_2_reg_3986;
reg   [31:0] mul_2_2_reg_3986_pp0_iter2_reg;
reg   [31:0] mul_2_2_reg_3986_pp0_iter3_reg;
reg   [31:0] mul_2_2_reg_3986_pp0_iter4_reg;
wire   [31:0] bitcast_ln42_17_fu_3132_p1;
wire   [31:0] bitcast_ln42_18_fu_3136_p1;
reg   [31:0] mul_2_3_reg_4011;
reg   [31:0] mul_2_3_reg_4011_pp0_iter2_reg;
reg   [31:0] mul_2_3_reg_4011_pp0_iter3_reg;
reg   [31:0] mul_2_3_reg_4011_pp0_iter4_reg;
reg   [31:0] mul_2_4_reg_4016;
reg   [31:0] mul_2_4_reg_4016_pp0_iter2_reg;
reg   [31:0] mul_2_4_reg_4016_pp0_iter3_reg;
reg   [31:0] mul_2_4_reg_4016_pp0_iter4_reg;
reg   [31:0] input_tile_load_20_reg_4026;
wire   [31:0] bitcast_ln42_19_fu_3144_p1;
wire   [31:0] bitcast_ln42_20_fu_3148_p1;
reg   [31:0] mul_3_reg_4041;
reg   [31:0] mul_3_reg_4041_pp0_iter2_reg;
reg   [31:0] mul_3_reg_4041_pp0_iter3_reg;
reg   [31:0] mul_3_reg_4041_pp0_iter4_reg;
reg   [31:0] mul_3_1_reg_4046;
reg   [31:0] mul_3_1_reg_4046_pp0_iter2_reg;
reg   [31:0] mul_3_1_reg_4046_pp0_iter3_reg;
reg   [31:0] mul_3_1_reg_4046_pp0_iter4_reg;
reg   [31:0] mul_3_1_reg_4046_pp0_iter5_reg;
wire   [31:0] bitcast_ln42_21_fu_3156_p1;
reg   [31:0] mul_3_2_reg_4061;
reg   [31:0] mul_3_2_reg_4061_pp0_iter2_reg;
reg   [31:0] mul_3_2_reg_4061_pp0_iter3_reg;
reg   [31:0] mul_3_2_reg_4061_pp0_iter4_reg;
reg   [31:0] mul_3_2_reg_4061_pp0_iter5_reg;
reg   [31:0] mul_3_3_reg_4066;
reg   [31:0] mul_3_3_reg_4066_pp0_iter2_reg;
reg   [31:0] mul_3_3_reg_4066_pp0_iter3_reg;
reg   [31:0] mul_3_3_reg_4066_pp0_iter4_reg;
reg   [31:0] mul_3_3_reg_4066_pp0_iter5_reg;
wire   [31:0] bitcast_ln42_22_fu_3164_p1;
reg   [31:0] mul_3_4_reg_4081;
reg   [31:0] mul_3_4_reg_4081_pp0_iter2_reg;
reg   [31:0] mul_3_4_reg_4081_pp0_iter3_reg;
reg   [31:0] mul_3_4_reg_4081_pp0_iter4_reg;
reg   [31:0] mul_3_4_reg_4081_pp0_iter5_reg;
reg   [31:0] mul_3_4_reg_4081_pp0_iter6_reg;
reg   [31:0] mul_4_reg_4091;
reg   [31:0] mul_4_reg_4091_pp0_iter2_reg;
reg   [31:0] mul_4_reg_4091_pp0_iter3_reg;
reg   [31:0] mul_4_reg_4091_pp0_iter4_reg;
reg   [31:0] mul_4_reg_4091_pp0_iter5_reg;
reg   [31:0] mul_4_reg_4091_pp0_iter6_reg;
wire   [31:0] bitcast_ln42_23_fu_3172_p1;
reg   [31:0] mul_4_1_reg_4101;
reg   [31:0] mul_4_1_reg_4101_pp0_iter2_reg;
reg   [31:0] mul_4_1_reg_4101_pp0_iter3_reg;
reg   [31:0] mul_4_1_reg_4101_pp0_iter4_reg;
reg   [31:0] mul_4_1_reg_4101_pp0_iter5_reg;
reg   [31:0] mul_4_1_reg_4101_pp0_iter6_reg;
wire   [31:0] bitcast_ln42_24_fu_3176_p1;
reg   [31:0] mul_4_2_reg_4111;
reg   [31:0] mul_4_2_reg_4111_pp0_iter2_reg;
reg   [31:0] mul_4_2_reg_4111_pp0_iter3_reg;
reg   [31:0] mul_4_2_reg_4111_pp0_iter4_reg;
reg   [31:0] mul_4_2_reg_4111_pp0_iter5_reg;
reg   [31:0] mul_4_2_reg_4111_pp0_iter6_reg;
reg   [31:0] mul_4_3_reg_4116;
reg   [31:0] mul_4_3_reg_4116_pp0_iter3_reg;
reg   [31:0] mul_4_3_reg_4116_pp0_iter4_reg;
reg   [31:0] mul_4_3_reg_4116_pp0_iter5_reg;
reg   [31:0] mul_4_3_reg_4116_pp0_iter6_reg;
reg   [31:0] mul_4_3_reg_4116_pp0_iter7_reg;
reg   [31:0] mul_4_3_reg_4116_pp0_iter8_reg;
reg   [31:0] mul_4_4_reg_4121;
reg   [31:0] mul_4_4_reg_4121_pp0_iter3_reg;
reg   [31:0] mul_4_4_reg_4121_pp0_iter4_reg;
reg   [31:0] mul_4_4_reg_4121_pp0_iter5_reg;
reg   [31:0] mul_4_4_reg_4121_pp0_iter6_reg;
reg   [31:0] mul_4_4_reg_4121_pp0_iter7_reg;
reg   [31:0] mul_4_4_reg_4121_pp0_iter8_reg;
reg   [31:0] add_2_2_reg_4126;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage9_subdone;
reg   [31:0] grp_generic_fmax_float_s_fu_613_x;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire   [31:0] select_ln43_2_fu_2374_p3;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln50_fu_824_p1;
wire   [63:0] zext_ln50_1_fu_839_p1;
wire   [63:0] p_cast_fu_918_p1;
wire   [63:0] zext_ln50_2_fu_943_p1;
wire   [63:0] zext_ln50_3_fu_953_p1;
wire   [63:0] zext_ln50_4_fu_973_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln50_5_fu_983_p1;
wire   [63:0] zext_ln50_6_fu_1003_p1;
wire   [63:0] zext_ln50_7_fu_1013_p1;
wire   [63:0] zext_ln50_8_fu_1033_p1;
wire   [63:0] zext_ln50_9_fu_1043_p1;
wire   [63:0] zext_ln50_10_fu_1211_p1;
wire   [63:0] zext_ln50_11_fu_1221_p1;
wire   [63:0] zext_ln50_12_fu_1413_p1;
wire   [63:0] zext_ln50_13_fu_1423_p1;
wire   [63:0] zext_ln51_6_fu_1572_p1;
wire   [63:0] zext_ln50_14_fu_1596_p1;
wire   [63:0] zext_ln50_15_fu_1606_p1;
wire   [63:0] zext_ln51_4_fu_1615_p1;
wire   [63:0] zext_ln50_16_fu_1769_p1;
wire   [63:0] zext_ln50_17_fu_1779_p1;
wire   [63:0] zext_ln51_5_fu_1792_p1;
wire   [63:0] zext_ln50_18_fu_1946_p1;
wire   [63:0] zext_ln50_19_fu_1956_p1;
wire   [63:0] zext_ln51_7_fu_1965_p1;
wire   [63:0] zext_ln50_20_fu_2134_p1;
wire   [63:0] zext_ln50_21_fu_2144_p1;
wire   [63:0] zext_ln51_8_fu_2153_p1;
wire   [63:0] zext_ln50_22_fu_2353_p1;
wire   [63:0] zext_ln50_23_fu_2363_p1;
wire   [63:0] zext_ln51_11_fu_2386_p1;
wire   [63:0] zext_ln51_12_fu_2395_p1;
wire   [63:0] zext_ln50_24_fu_2409_p1;
wire   [63:0] zext_ln51_13_fu_2418_p1;
wire   [63:0] zext_ln51_14_fu_2427_p1;
wire   [63:0] zext_ln51_15_fu_2632_p1;
wire   [63:0] zext_ln51_18_fu_2641_p1;
wire   [63:0] zext_ln51_19_fu_2829_p1;
wire   [63:0] zext_ln51_20_fu_2838_p1;
wire   [63:0] zext_ln51_21_fu_3026_p1;
wire   [63:0] zext_ln51_22_fu_3035_p1;
wire   [63:0] zext_ln51_25_fu_3052_p1;
wire   [63:0] zext_ln51_26_fu_3061_p1;
wire   [63:0] zext_ln51_27_fu_3078_p1;
wire   [63:0] zext_ln51_28_fu_3087_p1;
wire   [63:0] zext_ln51_29_fu_3124_p1;
wire   [63:0] zext_ln51_32_fu_3128_p1;
wire   [63:0] zext_ln51_33_fu_3140_p1;
wire   [63:0] zext_ln51_34_fu_3152_p1;
wire   [63:0] zext_ln51_35_fu_3160_p1;
wire   [63:0] zext_ln51_36_fu_3168_p1;
reg   [4:0] tw_fu_162;
wire   [4:0] add_ln48_2_fu_1188_p2;
wire    ap_loop_init;
reg   [4:0] th_fu_166;
reg   [9:0] indvar_flatten26_fu_170;
wire   [9:0] select_ln43_3_fu_2608_p3;
reg   [5:0] in_feat_fu_174;
wire   [5:0] select_ln42_1_fu_788_p3;
reg   [13:0] indvar_flatten68_fu_178;
wire   [13:0] add_ln42_25_fu_2120_p2;
reg   [31:0] grp_fu_623_p0;
reg   [31:0] grp_fu_623_p1;
reg   [31:0] grp_fu_627_p0;
reg   [31:0] grp_fu_627_p1;
reg   [31:0] grp_fu_631_p0;
reg   [31:0] grp_fu_631_p1;
reg   [31:0] grp_fu_635_p0;
reg   [31:0] grp_fu_635_p1;
reg   [31:0] grp_fu_639_p0;
wire   [5:0] add_ln42_fu_768_p2;
wire   [9:0] tmp_8_fu_800_p3;
wire   [10:0] zext_ln51_1_fu_808_p1;
wire   [10:0] zext_ln51_fu_796_p1;
wire   [5:0] mul_ln42_fu_818_p0;
wire   [5:0] mul_ln42_fu_818_p1;
wire   [10:0] mul_ln42_fu_818_p2;
wire   [9:0] add_ln42_1_fu_833_p2;
wire   [0:0] icmp_ln44_fu_850_p2;
wire   [0:0] xor_ln42_fu_844_p2;
wire   [4:0] select_ln42_fu_780_p3;
wire   [0:0] or_ln43_fu_868_p2;
wire   [8:0] p_shl8_fu_894_p3;
wire   [8:0] select_ln43_1_cast_fu_890_p1;
wire   [8:0] empty_fu_902_p2;
wire   [8:0] select_ln43_cast_fu_908_p1;
wire   [8:0] empty_127_fu_912_p2;
wire   [9:0] add_ln42_2_fu_938_p2;
wire   [9:0] add_ln42_3_fu_948_p2;
wire   [4:0] empty_128_fu_958_p2;
wire   [9:0] add_ln42_4_fu_968_p2;
wire   [9:0] add_ln42_5_fu_978_p2;
wire   [4:0] add_ln48_fu_988_p2;
wire   [9:0] add_ln42_6_fu_998_p2;
wire   [9:0] add_ln42_7_fu_1008_p2;
wire   [4:0] add_ln48_1_fu_1018_p2;
wire   [9:0] add_ln42_8_fu_1028_p2;
wire   [9:0] add_ln42_9_fu_1038_p2;
wire   [31:0] bitcast_ln317_3_fu_1048_p1;
wire   [22:0] trunc_ln371_3_fu_1070_p1;
wire   [24:0] zext_ln346_6_cast_fu_1074_p4;
wire   [7:0] xs_exp_1_0_1_fu_1060_p4;
wire   [8:0] zext_ln346_7_fu_1088_p1;
wire   [8:0] add_ln346_6_fu_1092_p2;
wire   [7:0] sub_ln18_6_fu_1106_p2;
wire   [0:0] tmp_13_fu_1098_p3;
wire  signed [8:0] sext_ln18_6_fu_1112_p1;
wire   [8:0] select_ln18_9_fu_1116_p3;
wire  signed [31:0] sext_ln18_7_fu_1124_p1;
wire   [78:0] zext_ln346_6_fu_1084_p1;
wire   [78:0] zext_ln18_3_fu_1128_p1;
wire   [78:0] lshr_ln18_6_fu_1132_p2;
wire   [0:0] tmp_14_fu_1144_p3;
wire   [78:0] shl_ln18_6_fu_1138_p2;
wire   [13:0] zext_ln21_3_fu_1152_p1;
wire   [13:0] tmp_15_fu_1156_p4;
wire   [13:0] select_ln18_10_fu_1166_p3;
wire   [0:0] tmp_12_fu_1052_p3;
wire   [13:0] sub_ln59_3_fu_1174_p2;
wire   [9:0] add_ln42_10_fu_1206_p2;
wire   [9:0] add_ln42_11_fu_1216_p2;
wire   [31:0] bitcast_ln317_fu_1226_p1;
wire   [22:0] trunc_ln371_fu_1248_p1;
wire   [24:0] zext_ln346_cast_fu_1252_p4;
wire   [7:0] xs_exp_fu_1238_p4;
wire   [8:0] zext_ln346_1_fu_1266_p1;
wire   [8:0] add_ln346_fu_1270_p2;
wire   [7:0] sub_ln18_fu_1284_p2;
wire   [0:0] tmp_1_fu_1276_p3;
wire  signed [8:0] sext_ln18_fu_1290_p1;
wire   [8:0] select_ln18_fu_1294_p3;
wire  signed [31:0] sext_ln18_1_fu_1302_p1;
wire   [78:0] zext_ln346_fu_1262_p1;
wire   [78:0] zext_ln18_fu_1306_p1;
wire   [78:0] lshr_ln18_fu_1310_p2;
wire   [0:0] tmp_2_fu_1322_p3;
wire   [78:0] shl_ln18_fu_1316_p2;
wire   [9:0] zext_ln21_fu_1330_p1;
wire   [9:0] tmp_s_fu_1334_p4;
wire   [9:0] select_ln18_2_fu_1344_p3;
wire   [0:0] tmp_fu_1230_p3;
wire   [9:0] sub_ln59_fu_1352_p2;
wire   [9:0] select_ln59_fu_1358_p3;
wire   [11:0] zext_ln51_2_fu_1366_p1;
wire   [11:0] add_ln51_1_fu_1370_p2;
wire   [9:0] trunc_ln51_fu_1380_p1;
wire   [13:0] p_shl7_fu_1384_p3;
wire   [13:0] zext_ln51_3_fu_1376_p1;
wire   [4:0] add_ln48_3_fu_1398_p2;
wire   [9:0] add_ln42_12_fu_1408_p2;
wire   [9:0] add_ln42_13_fu_1418_p2;
wire   [31:0] bitcast_ln317_1_fu_1428_p1;
wire   [22:0] trunc_ln371_1_fu_1450_p1;
wire   [24:0] zext_ln346_2_cast_fu_1454_p4;
wire   [7:0] xs_exp_s_fu_1440_p4;
wire   [8:0] zext_ln346_3_fu_1468_p1;
wire   [8:0] add_ln346_1_fu_1472_p2;
wire   [7:0] sub_ln18_1_fu_1486_p2;
wire   [0:0] tmp_4_fu_1478_p3;
wire  signed [8:0] sext_ln18_2_fu_1492_p1;
wire   [8:0] select_ln18_5_fu_1496_p3;
wire  signed [31:0] sext_ln18_3_fu_1504_p1;
wire   [78:0] zext_ln346_2_fu_1464_p1;
wire   [78:0] zext_ln18_1_fu_1508_p1;
wire   [78:0] lshr_ln18_1_fu_1512_p2;
wire   [0:0] tmp_5_fu_1524_p3;
wire   [78:0] shl_ln18_1_fu_1518_p2;
wire   [13:0] zext_ln21_1_fu_1532_p1;
wire   [13:0] tmp_6_fu_1536_p4;
wire   [13:0] select_ln18_6_fu_1546_p3;
wire   [0:0] tmp_3_fu_1432_p3;
wire   [13:0] sub_ln59_1_fu_1554_p2;
wire   [13:0] add_ln51_5_fu_1568_p2;
wire   [4:0] empty_129_fu_1577_p2;
wire   [9:0] add_ln42_14_fu_1591_p2;
wire   [9:0] add_ln42_15_fu_1601_p2;
wire   [13:0] add_ln51_3_fu_1611_p2;
wire   [31:0] bitcast_ln317_2_fu_1620_p1;
wire   [22:0] trunc_ln371_2_fu_1642_p1;
wire   [24:0] zext_ln346_4_cast_fu_1646_p4;
wire   [7:0] xs_exp_1_0_s_fu_1632_p4;
wire   [8:0] zext_ln346_5_fu_1660_p1;
wire   [8:0] add_ln346_5_fu_1664_p2;
wire   [7:0] sub_ln18_5_fu_1678_p2;
wire   [0:0] tmp_9_fu_1670_p3;
wire  signed [8:0] sext_ln18_4_fu_1684_p1;
wire   [8:0] select_ln18_7_fu_1688_p3;
wire  signed [31:0] sext_ln18_5_fu_1696_p1;
wire   [78:0] zext_ln346_4_fu_1656_p1;
wire   [78:0] zext_ln18_2_fu_1700_p1;
wire   [78:0] lshr_ln18_5_fu_1704_p2;
wire   [0:0] tmp_10_fu_1716_p3;
wire   [78:0] shl_ln18_5_fu_1710_p2;
wire   [13:0] zext_ln21_2_fu_1724_p1;
wire   [13:0] tmp_11_fu_1728_p4;
wire   [13:0] select_ln18_8_fu_1738_p3;
wire   [0:0] tmp_7_fu_1624_p3;
wire   [13:0] sub_ln59_2_fu_1746_p2;
wire   [9:0] add_ln42_16_fu_1764_p2;
wire   [9:0] add_ln42_17_fu_1774_p2;
wire   [13:0] add_ln51_4_fu_1788_p2;
wire   [31:0] bitcast_ln317_4_fu_1797_p1;
wire   [22:0] trunc_ln371_4_fu_1819_p1;
wire   [24:0] zext_ln346_8_cast_fu_1823_p4;
wire   [7:0] xs_exp_1_0_2_fu_1809_p4;
wire   [8:0] zext_ln346_9_fu_1837_p1;
wire   [8:0] add_ln346_7_fu_1841_p2;
wire   [7:0] sub_ln18_7_fu_1855_p2;
wire   [0:0] tmp_17_fu_1847_p3;
wire  signed [8:0] sext_ln18_8_fu_1861_p1;
wire   [8:0] select_ln18_11_fu_1865_p3;
wire  signed [31:0] sext_ln18_9_fu_1873_p1;
wire   [78:0] zext_ln346_8_fu_1833_p1;
wire   [78:0] zext_ln18_4_fu_1877_p1;
wire   [78:0] lshr_ln18_7_fu_1881_p2;
wire   [0:0] tmp_18_fu_1893_p3;
wire   [78:0] shl_ln18_7_fu_1887_p2;
wire   [13:0] zext_ln21_4_fu_1901_p1;
wire   [13:0] tmp_19_fu_1905_p4;
wire   [13:0] select_ln18_12_fu_1915_p3;
wire   [0:0] tmp_16_fu_1801_p3;
wire   [13:0] sub_ln59_4_fu_1923_p2;
wire   [9:0] add_ln42_18_fu_1941_p2;
wire   [9:0] add_ln42_19_fu_1951_p2;
wire   [13:0] add_ln51_6_fu_1961_p2;
wire   [31:0] bitcast_ln317_5_fu_1970_p1;
wire   [22:0] trunc_ln371_5_fu_1992_p1;
wire   [24:0] zext_ln346_10_cast_fu_1996_p4;
wire   [7:0] xs_exp_1_0_3_fu_1982_p4;
wire   [8:0] zext_ln346_11_fu_2010_p1;
wire   [8:0] add_ln346_8_fu_2014_p2;
wire   [7:0] sub_ln18_8_fu_2028_p2;
wire   [0:0] tmp_21_fu_2020_p3;
wire  signed [8:0] sext_ln18_10_fu_2034_p1;
wire   [8:0] select_ln18_13_fu_2038_p3;
wire  signed [31:0] sext_ln18_11_fu_2046_p1;
wire   [78:0] zext_ln346_10_fu_2006_p1;
wire   [78:0] zext_ln18_5_fu_2050_p1;
wire   [78:0] lshr_ln18_8_fu_2054_p2;
wire   [0:0] tmp_23_fu_2066_p3;
wire   [78:0] shl_ln18_8_fu_2060_p2;
wire   [13:0] zext_ln21_5_fu_2074_p1;
wire   [13:0] tmp_22_fu_2078_p4;
wire   [13:0] select_ln18_14_fu_2088_p3;
wire   [0:0] tmp_20_fu_1974_p3;
wire   [13:0] sub_ln59_5_fu_2096_p2;
wire   [4:0] empty_130_fu_2110_p2;
wire   [9:0] add_ln42_20_fu_2129_p2;
wire   [9:0] add_ln42_21_fu_2139_p2;
wire   [13:0] add_ln51_7_fu_2149_p2;
wire   [31:0] bitcast_ln317_6_fu_2158_p1;
wire   [22:0] trunc_ln371_6_fu_2180_p1;
wire   [24:0] zext_ln346_12_cast_fu_2184_p4;
wire   [7:0] xs_exp_1_fu_2170_p4;
wire   [8:0] zext_ln346_13_fu_2198_p1;
wire   [8:0] add_ln346_9_fu_2202_p2;
wire   [7:0] sub_ln18_9_fu_2216_p2;
wire   [0:0] tmp_26_fu_2208_p3;
wire  signed [8:0] sext_ln18_12_fu_2222_p1;
wire   [8:0] select_ln18_1_fu_2226_p3;
wire  signed [31:0] sext_ln18_13_fu_2234_p1;
wire   [78:0] zext_ln346_12_fu_2194_p1;
wire   [78:0] zext_ln18_6_fu_2238_p1;
wire   [78:0] lshr_ln18_9_fu_2242_p2;
wire   [0:0] tmp_28_fu_2254_p3;
wire   [78:0] shl_ln18_9_fu_2248_p2;
wire   [9:0] zext_ln21_6_fu_2262_p1;
wire   [9:0] tmp_24_fu_2266_p4;
wire   [9:0] select_ln18_15_fu_2276_p3;
wire   [0:0] tmp_25_fu_2162_p3;
wire   [9:0] sub_ln59_6_fu_2284_p2;
wire   [9:0] select_ln59_6_fu_2290_p3;
wire   [11:0] zext_ln51_9_fu_2298_p1;
wire   [11:0] add_ln51_8_fu_2302_p2;
wire   [9:0] trunc_ln51_1_fu_2311_p1;
wire   [13:0] p_shl6_fu_2315_p3;
wire   [13:0] zext_ln51_10_fu_2307_p1;
wire   [4:0] empty_131_fu_2329_p2;
wire   [9:0] add_ln42_22_fu_2348_p2;
wire   [9:0] add_ln42_23_fu_2358_p2;
wire   [31:0] select_ln42_2_fu_2368_p3;
wire   [13:0] add_ln51_10_fu_2382_p2;
wire   [13:0] add_ln51_11_fu_2391_p2;
wire   [9:0] add_ln42_24_fu_2404_p2;
wire   [13:0] add_ln51_12_fu_2414_p2;
wire   [13:0] add_ln51_13_fu_2423_p2;
wire   [31:0] bitcast_ln317_7_fu_2432_p1;
wire   [22:0] trunc_ln371_7_fu_2454_p1;
wire   [24:0] zext_ln346_14_cast_fu_2458_p4;
wire   [7:0] xs_exp_2_fu_2444_p4;
wire   [8:0] zext_ln346_15_fu_2472_p1;
wire   [8:0] add_ln346_2_fu_2476_p2;
wire   [7:0] sub_ln18_2_fu_2490_p2;
wire   [0:0] tmp_31_fu_2482_p3;
wire  signed [8:0] sext_ln18_14_fu_2496_p1;
wire   [8:0] select_ln18_16_fu_2500_p3;
wire  signed [31:0] sext_ln18_15_fu_2508_p1;
wire   [78:0] zext_ln346_14_fu_2468_p1;
wire   [78:0] zext_ln18_7_fu_2512_p1;
wire   [78:0] lshr_ln18_2_fu_2516_p2;
wire   [0:0] tmp_32_fu_2528_p3;
wire   [78:0] shl_ln18_2_fu_2522_p2;
wire   [9:0] zext_ln21_7_fu_2536_p1;
wire   [9:0] tmp_27_fu_2540_p4;
wire   [9:0] select_ln18_17_fu_2550_p3;
wire   [0:0] tmp_29_fu_2436_p3;
wire   [9:0] sub_ln59_7_fu_2558_p2;
wire   [9:0] select_ln59_7_fu_2564_p3;
wire   [11:0] zext_ln51_16_fu_2572_p1;
wire   [11:0] add_ln51_15_fu_2576_p2;
wire   [9:0] trunc_ln51_2_fu_2585_p1;
wire   [13:0] p_shl5_fu_2589_p3;
wire   [13:0] zext_ln51_17_fu_2581_p1;
wire   [9:0] add_ln43_1_fu_2603_p2;
wire   [13:0] add_ln51_14_fu_2628_p2;
wire   [13:0] add_ln51_17_fu_2637_p2;
wire   [31:0] bitcast_ln317_8_fu_2646_p1;
wire   [22:0] trunc_ln371_8_fu_2668_p1;
wire   [24:0] zext_ln346_16_cast_fu_2672_p4;
wire   [7:0] xs_exp_3_fu_2658_p4;
wire   [8:0] zext_ln346_17_fu_2686_p1;
wire   [8:0] add_ln346_3_fu_2690_p2;
wire   [7:0] sub_ln18_3_fu_2704_p2;
wire   [0:0] tmp_35_fu_2696_p3;
wire  signed [8:0] sext_ln18_16_fu_2710_p1;
wire   [8:0] select_ln18_3_fu_2714_p3;
wire  signed [31:0] sext_ln18_17_fu_2722_p1;
wire   [78:0] zext_ln346_16_fu_2682_p1;
wire   [78:0] zext_ln18_8_fu_2726_p1;
wire   [78:0] lshr_ln18_3_fu_2730_p2;
wire   [0:0] tmp_36_fu_2742_p3;
wire   [78:0] shl_ln18_3_fu_2736_p2;
wire   [9:0] zext_ln21_8_fu_2750_p1;
wire   [9:0] tmp_30_fu_2754_p4;
wire   [9:0] select_ln18_18_fu_2764_p3;
wire   [0:0] tmp_34_fu_2650_p3;
wire   [9:0] sub_ln59_8_fu_2772_p2;
wire   [9:0] select_ln59_8_fu_2778_p3;
wire   [11:0] zext_ln51_23_fu_2786_p1;
wire   [11:0] add_ln51_22_fu_2790_p2;
wire   [9:0] trunc_ln51_3_fu_2799_p1;
wire   [13:0] p_shl4_fu_2803_p3;
wire   [13:0] zext_ln51_24_fu_2795_p1;
wire   [13:0] add_ln51_18_fu_2825_p2;
wire   [13:0] add_ln51_19_fu_2834_p2;
wire   [31:0] bitcast_ln317_9_fu_2843_p1;
wire   [22:0] trunc_ln371_9_fu_2865_p1;
wire   [24:0] zext_ln346_18_cast_fu_2869_p4;
wire   [7:0] xs_exp_4_fu_2855_p4;
wire   [8:0] zext_ln346_19_fu_2883_p1;
wire   [8:0] add_ln346_4_fu_2887_p2;
wire   [7:0] sub_ln18_4_fu_2901_p2;
wire   [0:0] tmp_38_fu_2893_p3;
wire  signed [8:0] sext_ln18_18_fu_2907_p1;
wire   [8:0] select_ln18_4_fu_2911_p3;
wire  signed [31:0] sext_ln18_19_fu_2919_p1;
wire   [78:0] zext_ln346_18_fu_2879_p1;
wire   [78:0] zext_ln18_9_fu_2923_p1;
wire   [78:0] lshr_ln18_4_fu_2927_p2;
wire   [0:0] tmp_39_fu_2939_p3;
wire   [78:0] shl_ln18_4_fu_2933_p2;
wire   [9:0] zext_ln21_9_fu_2947_p1;
wire   [9:0] tmp_33_fu_2951_p4;
wire   [9:0] select_ln18_19_fu_2961_p3;
wire   [0:0] tmp_37_fu_2847_p3;
wire   [9:0] sub_ln59_9_fu_2969_p2;
wire   [9:0] select_ln59_9_fu_2975_p3;
wire   [11:0] zext_ln51_30_fu_2983_p1;
wire   [11:0] add_ln51_29_fu_2987_p2;
wire   [9:0] trunc_ln51_4_fu_2996_p1;
wire   [13:0] p_shl3_fu_3000_p3;
wire   [13:0] zext_ln51_31_fu_2992_p1;
wire   [13:0] add_ln51_20_fu_3022_p2;
wire   [13:0] add_ln51_21_fu_3031_p2;
wire   [13:0] add_ln51_24_fu_3048_p2;
wire   [13:0] add_ln51_25_fu_3057_p2;
wire   [13:0] add_ln51_26_fu_3074_p2;
wire   [13:0] add_ln51_27_fu_3083_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage9;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [12:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mul_6ns_6ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_6ns_6ns_11_1_1_U2264(
    .din0(mul_ln42_fu_818_p0),
    .din1(mul_ln42_fu_818_p1),
    .dout(mul_ln42_fu_818_p2)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage12),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage12)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        in_feat_fu_174 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln42_fu_753_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_feat_fu_174 <= select_ln42_1_fu_788_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten26_fu_170 <= 10'd0;
        end else if (((icmp_ln42_reg_3225 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten26_fu_170 <= select_ln43_3_fu_2608_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten68_fu_178 <= 14'd0;
    end else if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        indvar_flatten68_fu_178 <= add_ln42_25_fu_2120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        reg_653 <= input_tile_q0;
    end else if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_653 <= input_tile_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        reg_669 <= input_tile_q1;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_669 <= input_tile_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        th_fu_166 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln42_fu_753_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        th_fu_166 <= select_ln43_1_fu_882_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        tw_fu_162 <= 5'd0;
    end else if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tw_fu_162 <= add_ln48_2_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        add_2_2_reg_4126 <= grp_fu_79_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln42_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln43_reg_3287 <= add_ln43_fu_862_p2;
        add_ln51_reg_3240 <= add_ln51_fu_812_p2;
        and_ln42_reg_3282 <= and_ln42_fu_856_p2;
        icmp_ln43_reg_3234 <= icmp_ln43_fu_774_p2;
        indvar_flatten26_load_reg_3229 <= indvar_flatten26_fu_170;
        layer3_output_tile_addr_reg_3308 <= p_cast_fu_918_p1;
        select_ln43_1_reg_3300 <= select_ln43_1_fu_882_p3;
        select_ln43_reg_3292 <= select_ln43_fu_874_p3;
        trunc_ln50_reg_3245 <= trunc_ln50_fu_829_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln51_16_reg_3769 <= add_ln51_16_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln51_23_reg_3808 <= add_ln51_23_fu_2811_p2;
        icmp_ln42_reg_3225 <= icmp_ln42_fu_753_p2;
        icmp_ln42_reg_3225_pp0_iter1_reg <= icmp_ln42_reg_3225;
        icmp_ln42_reg_3225_pp0_iter2_reg <= icmp_ln42_reg_3225_pp0_iter1_reg;
        icmp_ln42_reg_3225_pp0_iter3_reg <= icmp_ln42_reg_3225_pp0_iter2_reg;
        icmp_ln42_reg_3225_pp0_iter4_reg <= icmp_ln42_reg_3225_pp0_iter3_reg;
        icmp_ln42_reg_3225_pp0_iter5_reg <= icmp_ln42_reg_3225_pp0_iter4_reg;
        icmp_ln42_reg_3225_pp0_iter6_reg <= icmp_ln42_reg_3225_pp0_iter5_reg;
        icmp_ln42_reg_3225_pp0_iter7_reg <= icmp_ln42_reg_3225_pp0_iter6_reg;
        indvar_flatten68_load_reg_3220 <= indvar_flatten68_fu_178;
        layer3_output_tile_addr_reg_3308_pp0_iter1_reg <= layer3_output_tile_addr_reg_3308;
        layer3_output_tile_addr_reg_3308_pp0_iter2_reg <= layer3_output_tile_addr_reg_3308_pp0_iter1_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter3_reg <= layer3_output_tile_addr_reg_3308_pp0_iter2_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter4_reg <= layer3_output_tile_addr_reg_3308_pp0_iter3_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter5_reg <= layer3_output_tile_addr_reg_3308_pp0_iter4_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter6_reg <= layer3_output_tile_addr_reg_3308_pp0_iter5_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter7_reg <= layer3_output_tile_addr_reg_3308_pp0_iter6_reg;
        layer3_output_tile_addr_reg_3308_pp0_iter8_reg <= layer3_output_tile_addr_reg_3308_pp0_iter7_reg;
        mul_4_4_reg_4121_pp0_iter3_reg <= mul_4_4_reg_4121;
        mul_4_4_reg_4121_pp0_iter4_reg <= mul_4_4_reg_4121_pp0_iter3_reg;
        mul_4_4_reg_4121_pp0_iter5_reg <= mul_4_4_reg_4121_pp0_iter4_reg;
        mul_4_4_reg_4121_pp0_iter6_reg <= mul_4_4_reg_4121_pp0_iter5_reg;
        mul_4_4_reg_4121_pp0_iter7_reg <= mul_4_4_reg_4121_pp0_iter6_reg;
        mul_4_4_reg_4121_pp0_iter8_reg <= mul_4_4_reg_4121_pp0_iter7_reg;
        th_1_reg_3215 <= th_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln51_28_reg_3941 <= add_ln51_28_fu_3092_p2;
        add_ln51_31_reg_3946 <= add_ln51_31_fu_3096_p2;
        add_ln51_32_reg_3951 <= add_ln51_32_fu_3100_p2;
        add_ln51_33_reg_3956 <= add_ln51_33_fu_3104_p2;
        add_ln51_34_reg_3961 <= add_ln51_34_fu_3108_p2;
        add_ln51_35_reg_3966 <= add_ln51_35_fu_3112_p2;
        mul_1_4_reg_3921_pp0_iter2_reg <= mul_1_4_reg_3921;
        mul_1_4_reg_3921_pp0_iter3_reg <= mul_1_4_reg_3921_pp0_iter2_reg;
        mul_2_reg_3926_pp0_iter2_reg <= mul_2_reg_3926;
        mul_2_reg_3926_pp0_iter3_reg <= mul_2_reg_3926_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln51_2_reg_3460 <= add_ln51_2_fu_1392_p2;
        zext_ln42_reg_3432[10 : 0] <= zext_ln42_fu_1203_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln51_30_reg_3842 <= add_ln51_30_fu_3008_p2;
        mul_0_4_reg_3827_pp0_iter2_reg <= mul_0_4_reg_3827;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln51_9_reg_3680 <= add_ln51_9_fu_2323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv3_weights_load_10_reg_3474 <= conv3_weights_q0;
        conv3_weights_load_11_reg_3479 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        conv3_weights_load_12_reg_3518 <= conv3_weights_q0;
        conv3_weights_load_13_reg_3523 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        conv3_weights_load_14_reg_3557 <= conv3_weights_q0;
        conv3_weights_load_15_reg_3562 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        conv3_weights_load_16_reg_3601 <= conv3_weights_q0;
        conv3_weights_load_17_reg_3606 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        conv3_weights_load_18_reg_3650 <= conv3_weights_q0;
        conv3_weights_load_19_reg_3655 <= conv3_weights_q1;
        mul_0_2_reg_3670 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv3_weights_load_1_reg_3323 <= conv3_weights_q0;
        conv3_weights_load_reg_3318 <= conv3_weights_q1;
        layer3_output_tile_load_reg_3338 <= layer3_output_tile_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        conv3_weights_load_20_reg_3699 <= conv3_weights_q0;
        conv3_weights_load_21_reg_3704 <= conv3_weights_q1;
        mul_reg_3719 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv3_weights_load_22_reg_3739 <= conv3_weights_q0;
        conv3_weights_load_23_reg_3744 <= conv3_weights_q1;
        mul_0_1_reg_3754 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv3_weights_load_24_reg_3788 <= conv3_weights_q0;
        mul_0_3_reg_3793 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv3_weights_load_2_reg_3348 <= conv3_weights_q0;
        conv3_weights_load_3_reg_3353 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv3_weights_load_4_reg_3373 <= conv3_weights_q0;
        conv3_weights_load_5_reg_3378 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv3_weights_load_6_reg_3398 <= conv3_weights_q0;
        conv3_weights_load_7_reg_3403 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv3_weights_load_8_reg_3440 <= conv3_weights_q0;
        conv3_weights_load_9_reg_3445 <= conv3_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_tile_load_20_reg_4026 <= input_tile_q0;
        mul_2_3_reg_4011 <= grp_fu_87_p_dout0;
        mul_2_4_reg_4016 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_0_4_reg_3827 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_1_1_reg_3866 <= grp_fu_91_p_dout0;
        mul_1_reg_3861 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_1_1_reg_3866_pp0_iter2_reg <= mul_1_1_reg_3866;
        mul_1_reg_3861_pp0_iter2_reg <= mul_1_reg_3861;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_1_2_reg_3891 <= grp_fu_87_p_dout0;
        mul_1_3_reg_3896 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_1_2_reg_3891_pp0_iter2_reg <= mul_1_2_reg_3891;
        mul_1_3_reg_3896_pp0_iter2_reg <= mul_1_3_reg_3896;
        mul_1_3_reg_3896_pp0_iter3_reg <= mul_1_3_reg_3896_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_1_4_reg_3921 <= grp_fu_87_p_dout0;
        mul_2_reg_3926 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_2_1_reg_3981 <= grp_fu_87_p_dout0;
        mul_2_2_reg_3986 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_2_1_reg_3981_pp0_iter2_reg <= mul_2_1_reg_3981;
        mul_2_1_reg_3981_pp0_iter3_reg <= mul_2_1_reg_3981_pp0_iter2_reg;
        mul_2_2_reg_3986_pp0_iter2_reg <= mul_2_2_reg_3986;
        mul_2_2_reg_3986_pp0_iter3_reg <= mul_2_2_reg_3986_pp0_iter2_reg;
        mul_2_2_reg_3986_pp0_iter4_reg <= mul_2_2_reg_3986_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_3_reg_4011_pp0_iter2_reg <= mul_2_3_reg_4011;
        mul_2_3_reg_4011_pp0_iter3_reg <= mul_2_3_reg_4011_pp0_iter2_reg;
        mul_2_3_reg_4011_pp0_iter4_reg <= mul_2_3_reg_4011_pp0_iter3_reg;
        mul_2_4_reg_4016_pp0_iter2_reg <= mul_2_4_reg_4016;
        mul_2_4_reg_4016_pp0_iter3_reg <= mul_2_4_reg_4016_pp0_iter2_reg;
        mul_2_4_reg_4016_pp0_iter4_reg <= mul_2_4_reg_4016_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_3_1_reg_4046 <= grp_fu_91_p_dout0;
        mul_3_reg_4041 <= grp_fu_87_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_3_1_reg_4046_pp0_iter2_reg <= mul_3_1_reg_4046;
        mul_3_1_reg_4046_pp0_iter3_reg <= mul_3_1_reg_4046_pp0_iter2_reg;
        mul_3_1_reg_4046_pp0_iter4_reg <= mul_3_1_reg_4046_pp0_iter3_reg;
        mul_3_1_reg_4046_pp0_iter5_reg <= mul_3_1_reg_4046_pp0_iter4_reg;
        mul_3_reg_4041_pp0_iter2_reg <= mul_3_reg_4041;
        mul_3_reg_4041_pp0_iter3_reg <= mul_3_reg_4041_pp0_iter2_reg;
        mul_3_reg_4041_pp0_iter4_reg <= mul_3_reg_4041_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_3_2_reg_4061 <= grp_fu_87_p_dout0;
        mul_3_3_reg_4066 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_3_2_reg_4061_pp0_iter2_reg <= mul_3_2_reg_4061;
        mul_3_2_reg_4061_pp0_iter3_reg <= mul_3_2_reg_4061_pp0_iter2_reg;
        mul_3_2_reg_4061_pp0_iter4_reg <= mul_3_2_reg_4061_pp0_iter3_reg;
        mul_3_2_reg_4061_pp0_iter5_reg <= mul_3_2_reg_4061_pp0_iter4_reg;
        mul_3_3_reg_4066_pp0_iter2_reg <= mul_3_3_reg_4066;
        mul_3_3_reg_4066_pp0_iter3_reg <= mul_3_3_reg_4066_pp0_iter2_reg;
        mul_3_3_reg_4066_pp0_iter4_reg <= mul_3_3_reg_4066_pp0_iter3_reg;
        mul_3_3_reg_4066_pp0_iter5_reg <= mul_3_3_reg_4066_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_3_4_reg_4081 <= grp_fu_87_p_dout0;
        mul_4_reg_4091 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_3_4_reg_4081_pp0_iter2_reg <= mul_3_4_reg_4081;
        mul_3_4_reg_4081_pp0_iter3_reg <= mul_3_4_reg_4081_pp0_iter2_reg;
        mul_3_4_reg_4081_pp0_iter4_reg <= mul_3_4_reg_4081_pp0_iter3_reg;
        mul_3_4_reg_4081_pp0_iter5_reg <= mul_3_4_reg_4081_pp0_iter4_reg;
        mul_3_4_reg_4081_pp0_iter6_reg <= mul_3_4_reg_4081_pp0_iter5_reg;
        mul_4_reg_4091_pp0_iter2_reg <= mul_4_reg_4091;
        mul_4_reg_4091_pp0_iter3_reg <= mul_4_reg_4091_pp0_iter2_reg;
        mul_4_reg_4091_pp0_iter4_reg <= mul_4_reg_4091_pp0_iter3_reg;
        mul_4_reg_4091_pp0_iter5_reg <= mul_4_reg_4091_pp0_iter4_reg;
        mul_4_reg_4091_pp0_iter6_reg <= mul_4_reg_4091_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_4_1_reg_4101 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_4_1_reg_4101_pp0_iter2_reg <= mul_4_1_reg_4101;
        mul_4_1_reg_4101_pp0_iter3_reg <= mul_4_1_reg_4101_pp0_iter2_reg;
        mul_4_1_reg_4101_pp0_iter4_reg <= mul_4_1_reg_4101_pp0_iter3_reg;
        mul_4_1_reg_4101_pp0_iter5_reg <= mul_4_1_reg_4101_pp0_iter4_reg;
        mul_4_1_reg_4101_pp0_iter6_reg <= mul_4_1_reg_4101_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_4_2_reg_4111 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_4_2_reg_4111_pp0_iter2_reg <= mul_4_2_reg_4111;
        mul_4_2_reg_4111_pp0_iter3_reg <= mul_4_2_reg_4111_pp0_iter2_reg;
        mul_4_2_reg_4111_pp0_iter4_reg <= mul_4_2_reg_4111_pp0_iter3_reg;
        mul_4_2_reg_4111_pp0_iter5_reg <= mul_4_2_reg_4111_pp0_iter4_reg;
        mul_4_2_reg_4111_pp0_iter6_reg <= mul_4_2_reg_4111_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_4_3_reg_4116 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_4_3_reg_4116_pp0_iter3_reg <= mul_4_3_reg_4116;
        mul_4_3_reg_4116_pp0_iter4_reg <= mul_4_3_reg_4116_pp0_iter3_reg;
        mul_4_3_reg_4116_pp0_iter5_reg <= mul_4_3_reg_4116_pp0_iter4_reg;
        mul_4_3_reg_4116_pp0_iter6_reg <= mul_4_3_reg_4116_pp0_iter5_reg;
        mul_4_3_reg_4116_pp0_iter7_reg <= mul_4_3_reg_4116_pp0_iter6_reg;
        mul_4_3_reg_4116_pp0_iter8_reg <= mul_4_3_reg_4116_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_4_4_reg_4121 <= grp_fu_91_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == 
    ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_643 <= grp_generic_fmax_float_s_fu_98_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_648 <= input_tile_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_659 <= input_tile_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_664 <= input_tile_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_676 <= input_tile_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_681 <= grp_fu_79_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_686 <= grp_fu_79_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_691 <= grp_fu_79_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_696 <= grp_fu_79_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_701 <= grp_fu_83_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_706 <= grp_fu_83_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_711 <= grp_fu_83_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_716 <= grp_fu_83_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        select_ln59_1_reg_3494 <= select_ln59_1_fu_1560_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln59_2_reg_3543 <= select_ln59_2_fu_1752_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln59_3_reg_3418 <= select_ln59_3_fu_1180_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        select_ln59_4_reg_3587 <= select_ln59_4_fu_1929_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        select_ln59_5_reg_3626 <= select_ln59_5_fu_2102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln43_reg_3234 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'd0 == and_ln42_reg_3282))) begin
        x_assign_2_reg_3640 <= grp_fu_95_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln42_reg_3225 == 1'd1) & (1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln42_reg_3225_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_condition_exit_pp0_iter7_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv3_weights_address0 = zext_ln50_24_fu_2409_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        conv3_weights_address0 = zext_ln50_22_fu_2353_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        conv3_weights_address0 = zext_ln50_20_fu_2134_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        conv3_weights_address0 = zext_ln50_18_fu_1946_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        conv3_weights_address0 = zext_ln50_16_fu_1769_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        conv3_weights_address0 = zext_ln50_14_fu_1596_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv3_weights_address0 = zext_ln50_12_fu_1413_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv3_weights_address0 = zext_ln50_10_fu_1211_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv3_weights_address0 = zext_ln50_8_fu_1033_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv3_weights_address0 = zext_ln50_6_fu_1003_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv3_weights_address0 = zext_ln50_4_fu_973_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv3_weights_address0 = zext_ln50_2_fu_943_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv3_weights_address0 = zext_ln50_1_fu_839_p1;
    end else begin
        conv3_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv3_weights_address1 = zext_ln50_23_fu_2363_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv3_weights_address1 = zext_ln50_21_fu_2144_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv3_weights_address1 = zext_ln50_19_fu_1956_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv3_weights_address1 = zext_ln50_17_fu_1779_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv3_weights_address1 = zext_ln50_15_fu_1606_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv3_weights_address1 = zext_ln50_13_fu_1423_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv3_weights_address1 = zext_ln50_11_fu_1221_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv3_weights_address1 = zext_ln50_9_fu_1043_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv3_weights_address1 = zext_ln50_7_fu_1013_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv3_weights_address1 = zext_ln50_5_fu_983_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv3_weights_address1 = zext_ln50_3_fu_953_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv3_weights_address1 = zext_ln50_fu_824_p1;
        end else begin
            conv3_weights_address1 = 'bx;
        end
    end else begin
        conv3_weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv3_weights_ce0 = 1'b1;
    end else begin
        conv3_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv3_weights_ce1 = 1'b1;
    end else begin
        conv3_weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_623_p0 = reg_696;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_623_p0 = reg_691;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_623_p0 = reg_686;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_623_p0 = reg_681;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_623_p0 = layer3_output_tile_load_reg_3338;
    end else begin
        grp_fu_623_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_623_p1 = mul_2_2_reg_3986_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_623_p1 = mul_2_1_reg_3981_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_623_p1 = mul_2_reg_3926_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_623_p1 = mul_1_4_reg_3921_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_623_p1 = mul_1_3_reg_3896_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_623_p1 = mul_1_2_reg_3891_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_623_p1 = mul_1_1_reg_3866_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_623_p1 = mul_1_reg_3861_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_623_p1 = mul_0_4_reg_3827_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_623_p1 = mul_0_3_reg_3793;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_623_p1 = mul_0_2_reg_3670;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_623_p1 = mul_0_1_reg_3754;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_623_p1 = mul_reg_3719;
    end else begin
        grp_fu_623_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_627_p0 = reg_716;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_627_p0 = reg_711;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_627_p0 = reg_706;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_627_p0 = reg_701;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_627_p0 = add_2_2_reg_4126;
    end else begin
        grp_fu_627_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_627_p1 = mul_4_4_reg_4121_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_627_p1 = mul_4_3_reg_4116_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_627_p1 = mul_4_2_reg_4111_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_627_p1 = mul_4_1_reg_4101_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_627_p1 = mul_4_reg_4091_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_627_p1 = mul_3_4_reg_4081_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_627_p1 = mul_3_3_reg_4066_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_627_p1 = mul_3_2_reg_4061_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_627_p1 = mul_3_1_reg_4046_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_627_p1 = mul_3_reg_4041_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_627_p1 = mul_2_4_reg_4016_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_627_p1 = mul_2_3_reg_4011_pp0_iter4_reg;
    end else begin
        grp_fu_627_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_631_p0 = bitcast_ln42_19_fu_3144_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_631_p0 = bitcast_ln42_17_fu_3132_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_631_p0 = bitcast_ln42_15_fu_3116_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_631_p0 = bitcast_ln42_13_fu_3066_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_631_p0 = bitcast_ln42_11_fu_3040_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_631_p0 = bitcast_ln42_9_fu_3014_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_631_p0 = bitcast_ln42_7_fu_2817_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_631_p0 = bitcast_ln42_5_fu_2620_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_631_p0 = bitcast_ln42_4_fu_2400_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_631_p0 = bitcast_ln42_3_fu_2344_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_631_p0 = bitcast_ln42_1_fu_2125_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_631_p0 = bitcast_ln42_fu_1937_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_631_p0 = bitcast_ln42_2_fu_1760_p1;
    end else begin
        grp_fu_631_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_631_p1 = reg_669;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_631_p1 = reg_659;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_631_p1 = reg_653;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_631_p1 = reg_648;
    end else begin
        grp_fu_631_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            grp_fu_635_p0 = bitcast_ln42_24_fu_3176_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_635_p0 = bitcast_ln42_23_fu_3172_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_635_p0 = bitcast_ln42_22_fu_3164_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_635_p0 = bitcast_ln42_21_fu_3156_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_635_p0 = bitcast_ln42_20_fu_3148_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_635_p0 = bitcast_ln42_18_fu_3136_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_635_p0 = bitcast_ln42_16_fu_3120_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_635_p0 = bitcast_ln42_14_fu_3070_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_635_p0 = bitcast_ln42_12_fu_3044_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_635_p0 = bitcast_ln42_10_fu_3018_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_635_p0 = bitcast_ln42_8_fu_2821_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_635_p0 = bitcast_ln42_6_fu_2624_p1;
        end else begin
            grp_fu_635_p0 = 'bx;
        end
    end else begin
        grp_fu_635_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_635_p1 = input_tile_load_20_reg_4026;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_635_p1 = reg_676;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_635_p1 = reg_669;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_635_p1 = reg_664;
    end else begin
        grp_fu_635_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_639_p0 = p_cast26_fu_2334_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_639_p0 = p_cast25_fu_2115_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_639_p0 = th_cast22_mid1_fu_1784_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_639_p0 = th_cast22_fu_1587_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_639_p0 = x_assign_150_fu_1582_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_639_p0 = zext_ln48_2_fu_1403_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_639_p0 = zext_ln48_1_fu_1193_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_639_p0 = sext_ln48_1_fu_1023_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_639_p0 = sext_ln48_fu_993_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_639_p0 = x_assign147_fu_963_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_639_p0 = zext_ln48_fu_923_p1;
        end else begin
            grp_fu_639_p0 = 'bx;
        end
    end else begin
        grp_fu_639_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_generic_fmax_float_s_fu_613_x = select_ln43_2_fu_2374_p3;
    end else if ((((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln42_reg_3225 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_generic_fmax_float_s_fu_613_x = grp_fu_95_p_dout0;
    end else begin
        grp_generic_fmax_float_s_fu_613_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_tile_address0 = zext_ln51_36_fu_3168_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_tile_address0 = zext_ln51_35_fu_3160_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_tile_address0 = zext_ln51_34_fu_3152_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_tile_address0 = zext_ln51_33_fu_3140_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_tile_address0 = zext_ln51_32_fu_3128_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_tile_address0 = zext_ln51_28_fu_3087_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_tile_address0 = zext_ln51_26_fu_3061_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_tile_address0 = zext_ln51_22_fu_3035_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_tile_address0 = zext_ln51_20_fu_2838_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_tile_address0 = zext_ln51_18_fu_2641_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_tile_address0 = zext_ln51_14_fu_2427_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_tile_address0 = zext_ln51_12_fu_2395_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_tile_address0 = zext_ln51_8_fu_2153_p1;
    end else begin
        input_tile_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        input_tile_address1 = zext_ln51_29_fu_3124_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        input_tile_address1 = zext_ln51_27_fu_3078_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_tile_address1 = zext_ln51_25_fu_3052_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_tile_address1 = zext_ln51_21_fu_3026_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_tile_address1 = zext_ln51_19_fu_2829_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_tile_address1 = zext_ln51_15_fu_2632_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_tile_address1 = zext_ln51_13_fu_2418_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        input_tile_address1 = zext_ln51_11_fu_2386_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_tile_address1 = zext_ln51_7_fu_1965_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_tile_address1 = zext_ln51_5_fu_1792_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        input_tile_address1 = zext_ln51_4_fu_1615_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_tile_address1 = zext_ln51_6_fu_1572_p1;
    end else begin
        input_tile_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) 
    & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        input_tile_ce0 = 1'b1;
    end else begin
        input_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & 
    (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        input_tile_ce1 = 1'b1;
    end else begin
        input_tile_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        layer3_output_tile_address0 = layer3_output_tile_addr_reg_3308_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer3_output_tile_address0 = p_cast_fu_918_p1;
    end else begin
        layer3_output_tile_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        layer3_output_tile_ce0 = 1'b1;
    end else begin
        layer3_output_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        layer3_output_tile_we0 = 1'b1;
    end else begin
        layer3_output_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage9))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln346_1_fu_1472_p2 = ($signed(zext_ln346_3_fu_1468_p1) + $signed(9'd385));

assign add_ln346_2_fu_2476_p2 = ($signed(zext_ln346_15_fu_2472_p1) + $signed(9'd385));

assign add_ln346_3_fu_2690_p2 = ($signed(zext_ln346_17_fu_2686_p1) + $signed(9'd385));

assign add_ln346_4_fu_2887_p2 = ($signed(zext_ln346_19_fu_2883_p1) + $signed(9'd385));

assign add_ln346_5_fu_1664_p2 = ($signed(zext_ln346_5_fu_1660_p1) + $signed(9'd385));

assign add_ln346_6_fu_1092_p2 = ($signed(zext_ln346_7_fu_1088_p1) + $signed(9'd385));

assign add_ln346_7_fu_1841_p2 = ($signed(zext_ln346_9_fu_1837_p1) + $signed(9'd385));

assign add_ln346_8_fu_2014_p2 = ($signed(zext_ln346_11_fu_2010_p1) + $signed(9'd385));

assign add_ln346_9_fu_2202_p2 = ($signed(zext_ln346_13_fu_2198_p1) + $signed(9'd385));

assign add_ln346_fu_1270_p2 = ($signed(zext_ln346_1_fu_1266_p1) + $signed(9'd385));

assign add_ln42_10_fu_1206_p2 = (trunc_ln50_reg_3245 + 10'd10);

assign add_ln42_11_fu_1216_p2 = (trunc_ln50_reg_3245 + 10'd11);

assign add_ln42_12_fu_1408_p2 = (trunc_ln50_reg_3245 + 10'd12);

assign add_ln42_13_fu_1418_p2 = (trunc_ln50_reg_3245 + 10'd13);

assign add_ln42_14_fu_1591_p2 = (trunc_ln50_reg_3245 + 10'd14);

assign add_ln42_15_fu_1601_p2 = (trunc_ln50_reg_3245 + 10'd15);

assign add_ln42_16_fu_1764_p2 = (trunc_ln50_reg_3245 + 10'd16);

assign add_ln42_17_fu_1774_p2 = (trunc_ln50_reg_3245 + 10'd17);

assign add_ln42_18_fu_1941_p2 = (trunc_ln50_reg_3245 + 10'd18);

assign add_ln42_19_fu_1951_p2 = (trunc_ln50_reg_3245 + 10'd19);

assign add_ln42_1_fu_833_p2 = (trunc_ln50_fu_829_p1 + 10'd1);

assign add_ln42_20_fu_2129_p2 = (trunc_ln50_reg_3245 + 10'd20);

assign add_ln42_21_fu_2139_p2 = (trunc_ln50_reg_3245 + 10'd21);

assign add_ln42_22_fu_2348_p2 = (trunc_ln50_reg_3245 + 10'd22);

assign add_ln42_23_fu_2358_p2 = (trunc_ln50_reg_3245 + 10'd23);

assign add_ln42_24_fu_2404_p2 = (trunc_ln50_reg_3245 + 10'd24);

assign add_ln42_25_fu_2120_p2 = (indvar_flatten68_load_reg_3220 + 14'd1);

assign add_ln42_2_fu_938_p2 = (trunc_ln50_reg_3245 + 10'd2);

assign add_ln42_3_fu_948_p2 = (trunc_ln50_reg_3245 + 10'd3);

assign add_ln42_4_fu_968_p2 = (trunc_ln50_reg_3245 + 10'd4);

assign add_ln42_5_fu_978_p2 = (trunc_ln50_reg_3245 + 10'd5);

assign add_ln42_6_fu_998_p2 = (trunc_ln50_reg_3245 + 10'd6);

assign add_ln42_7_fu_1008_p2 = (trunc_ln50_reg_3245 + 10'd7);

assign add_ln42_8_fu_1028_p2 = (trunc_ln50_reg_3245 + 10'd8);

assign add_ln42_9_fu_1038_p2 = (trunc_ln50_reg_3245 + 10'd9);

assign add_ln42_fu_768_p2 = (in_feat_fu_174 + 6'd1);

assign add_ln43_1_fu_2603_p2 = (indvar_flatten26_load_reg_3229 + 10'd1);

assign add_ln43_fu_862_p2 = (select_ln42_fu_780_p3 + 5'd1);

assign add_ln48_1_fu_1018_p2 = ($signed(select_ln43_reg_3292) + $signed(5'd31));

assign add_ln48_2_fu_1188_p2 = (select_ln43_reg_3292 + 5'd1);

assign add_ln48_3_fu_1398_p2 = (select_ln43_reg_3292 + 5'd2);

assign add_ln48_fu_988_p2 = ($signed(select_ln43_reg_3292) + $signed(5'd30));

assign add_ln51_10_fu_2382_p2 = (add_ln51_9_reg_3680 + select_ln59_1_reg_3494);

assign add_ln51_11_fu_2391_p2 = (add_ln51_9_reg_3680 + select_ln59_2_reg_3543);

assign add_ln51_12_fu_2414_p2 = (add_ln51_9_reg_3680 + select_ln59_3_reg_3418);

assign add_ln51_13_fu_2423_p2 = (add_ln51_9_reg_3680 + select_ln59_4_reg_3587);

assign add_ln51_14_fu_2628_p2 = (add_ln51_9_reg_3680 + select_ln59_5_reg_3626);

assign add_ln51_15_fu_2576_p2 = (zext_ln42_reg_3432 + zext_ln51_16_fu_2572_p1);

assign add_ln51_16_fu_2597_p2 = (p_shl5_fu_2589_p3 + zext_ln51_17_fu_2581_p1);

assign add_ln51_17_fu_2637_p2 = (add_ln51_16_reg_3769 + select_ln59_1_reg_3494);

assign add_ln51_18_fu_2825_p2 = (add_ln51_16_reg_3769 + select_ln59_2_reg_3543);

assign add_ln51_19_fu_2834_p2 = (add_ln51_16_reg_3769 + select_ln59_3_reg_3418);

assign add_ln51_1_fu_1370_p2 = (zext_ln42_fu_1203_p1 + zext_ln51_2_fu_1366_p1);

assign add_ln51_20_fu_3022_p2 = (add_ln51_16_reg_3769 + select_ln59_4_reg_3587);

assign add_ln51_21_fu_3031_p2 = (add_ln51_16_reg_3769 + select_ln59_5_reg_3626);

assign add_ln51_22_fu_2790_p2 = (zext_ln42_reg_3432 + zext_ln51_23_fu_2786_p1);

assign add_ln51_23_fu_2811_p2 = (p_shl4_fu_2803_p3 + zext_ln51_24_fu_2795_p1);

assign add_ln51_24_fu_3048_p2 = (add_ln51_23_reg_3808 + select_ln59_1_reg_3494);

assign add_ln51_25_fu_3057_p2 = (add_ln51_23_reg_3808 + select_ln59_2_reg_3543);

assign add_ln51_26_fu_3074_p2 = (add_ln51_23_reg_3808 + select_ln59_3_reg_3418);

assign add_ln51_27_fu_3083_p2 = (add_ln51_23_reg_3808 + select_ln59_4_reg_3587);

assign add_ln51_28_fu_3092_p2 = (add_ln51_23_reg_3808 + select_ln59_5_reg_3626);

assign add_ln51_29_fu_2987_p2 = (zext_ln42_reg_3432 + zext_ln51_30_fu_2983_p1);

assign add_ln51_2_fu_1392_p2 = (p_shl7_fu_1384_p3 + zext_ln51_3_fu_1376_p1);

assign add_ln51_30_fu_3008_p2 = (p_shl3_fu_3000_p3 + zext_ln51_31_fu_2992_p1);

assign add_ln51_31_fu_3096_p2 = (add_ln51_30_reg_3842 + select_ln59_1_reg_3494);

assign add_ln51_32_fu_3100_p2 = (add_ln51_30_reg_3842 + select_ln59_2_reg_3543);

assign add_ln51_33_fu_3104_p2 = (add_ln51_30_reg_3842 + select_ln59_3_reg_3418);

assign add_ln51_34_fu_3108_p2 = (add_ln51_30_reg_3842 + select_ln59_4_reg_3587);

assign add_ln51_35_fu_3112_p2 = (add_ln51_30_reg_3842 + select_ln59_5_reg_3626);

assign add_ln51_3_fu_1611_p2 = (add_ln51_2_reg_3460 + select_ln59_1_reg_3494);

assign add_ln51_4_fu_1788_p2 = (add_ln51_2_reg_3460 + select_ln59_2_reg_3543);

assign add_ln51_5_fu_1568_p2 = (add_ln51_2_reg_3460 + select_ln59_3_reg_3418);

assign add_ln51_6_fu_1961_p2 = (add_ln51_2_reg_3460 + select_ln59_4_reg_3587);

assign add_ln51_7_fu_2149_p2 = (add_ln51_2_reg_3460 + select_ln59_5_reg_3626);

assign add_ln51_8_fu_2302_p2 = (zext_ln42_reg_3432 + zext_ln51_9_fu_2298_p1);

assign add_ln51_9_fu_2323_p2 = (p_shl6_fu_2315_p3 + zext_ln51_10_fu_2307_p1);

assign add_ln51_fu_812_p2 = (zext_ln51_1_fu_808_p1 + zext_ln51_fu_796_p1);

assign and_ln42_fu_856_p2 = (xor_ln42_fu_844_p2 & icmp_ln44_fu_850_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage8_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage9_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage10_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage11_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage12_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage8_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage9_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage9_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage10_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage11_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage12_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage12;

assign bitcast_ln317_1_fu_1428_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_2_fu_1620_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_3_fu_1048_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_4_fu_1797_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_5_fu_1970_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_6_fu_2158_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_7_fu_2432_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_8_fu_2646_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_9_fu_2843_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln317_fu_1226_p1 = grp_generic_fmin_float_s_fu_102_p_dout0;

assign bitcast_ln42_10_fu_3018_p1 = conv3_weights_load_10_reg_3474;

assign bitcast_ln42_11_fu_3040_p1 = conv3_weights_load_11_reg_3479;

assign bitcast_ln42_12_fu_3044_p1 = conv3_weights_load_12_reg_3518;

assign bitcast_ln42_13_fu_3066_p1 = conv3_weights_load_13_reg_3523;

assign bitcast_ln42_14_fu_3070_p1 = conv3_weights_load_14_reg_3557;

assign bitcast_ln42_15_fu_3116_p1 = conv3_weights_load_15_reg_3562;

assign bitcast_ln42_16_fu_3120_p1 = conv3_weights_load_16_reg_3601;

assign bitcast_ln42_17_fu_3132_p1 = conv3_weights_load_17_reg_3606;

assign bitcast_ln42_18_fu_3136_p1 = conv3_weights_load_18_reg_3650;

assign bitcast_ln42_19_fu_3144_p1 = conv3_weights_load_19_reg_3655;

assign bitcast_ln42_1_fu_2125_p1 = conv3_weights_load_1_reg_3323;

assign bitcast_ln42_20_fu_3148_p1 = conv3_weights_load_20_reg_3699;

assign bitcast_ln42_21_fu_3156_p1 = conv3_weights_load_21_reg_3704;

assign bitcast_ln42_22_fu_3164_p1 = conv3_weights_load_22_reg_3739;

assign bitcast_ln42_23_fu_3172_p1 = conv3_weights_load_23_reg_3744;

assign bitcast_ln42_24_fu_3176_p1 = conv3_weights_load_24_reg_3788;

assign bitcast_ln42_2_fu_1760_p1 = conv3_weights_load_2_reg_3348;

assign bitcast_ln42_3_fu_2344_p1 = conv3_weights_load_3_reg_3353;

assign bitcast_ln42_4_fu_2400_p1 = conv3_weights_load_4_reg_3373;

assign bitcast_ln42_5_fu_2620_p1 = conv3_weights_load_5_reg_3378;

assign bitcast_ln42_6_fu_2624_p1 = conv3_weights_load_6_reg_3398;

assign bitcast_ln42_7_fu_2817_p1 = conv3_weights_load_7_reg_3403;

assign bitcast_ln42_8_fu_2821_p1 = conv3_weights_load_8_reg_3440;

assign bitcast_ln42_9_fu_3014_p1 = conv3_weights_load_9_reg_3445;

assign bitcast_ln42_fu_1937_p1 = conv3_weights_load_reg_3318;

assign empty_127_fu_912_p2 = (empty_fu_902_p2 + select_ln43_cast_fu_908_p1);

assign empty_128_fu_958_p2 = ($signed(select_ln43_1_reg_3300) + $signed(5'd30));

assign empty_129_fu_1577_p2 = ($signed(select_ln43_1_reg_3300) + $signed(5'd31));

assign empty_130_fu_2110_p2 = (select_ln43_1_reg_3300 + 5'd1);

assign empty_131_fu_2329_p2 = (select_ln43_1_reg_3300 + 5'd2);

assign empty_fu_902_p2 = (p_shl8_fu_894_p3 + select_ln43_1_cast_fu_890_p1);

assign grp_fu_79_p_ce = 1'b1;

assign grp_fu_79_p_din0 = grp_fu_623_p0;

assign grp_fu_79_p_din1 = grp_fu_623_p1;

assign grp_fu_79_p_opcode = 2'd0;

assign grp_fu_83_p_ce = 1'b1;

assign grp_fu_83_p_din0 = grp_fu_627_p0;

assign grp_fu_83_p_din1 = grp_fu_627_p1;

assign grp_fu_83_p_opcode = 2'd0;

assign grp_fu_87_p_ce = 1'b1;

assign grp_fu_87_p_din0 = grp_fu_631_p0;

assign grp_fu_87_p_din1 = grp_fu_631_p1;

assign grp_fu_91_p_ce = 1'b1;

assign grp_fu_91_p_din0 = grp_fu_635_p0;

assign grp_fu_91_p_din1 = grp_fu_635_p1;

assign grp_fu_95_p_ce = 1'b1;

assign grp_fu_95_p_din0 = grp_fu_639_p0;

assign grp_generic_fmax_float_s_fu_98_p_din1 = grp_generic_fmax_float_s_fu_613_x;

assign grp_generic_fmin_float_s_fu_102_p_din1 = reg_643;

assign icmp_ln42_fu_753_p2 = ((indvar_flatten68_fu_178 == 14'd9248) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_774_p2 = ((indvar_flatten26_fu_170 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_850_p2 = ((tw_fu_162 == 5'd17) ? 1'b1 : 1'b0);

assign layer3_output_tile_d0 = reg_716;

assign lshr_ln18_1_fu_1512_p2 = zext_ln346_2_fu_1464_p1 >> zext_ln18_1_fu_1508_p1;

assign lshr_ln18_2_fu_2516_p2 = zext_ln346_14_fu_2468_p1 >> zext_ln18_7_fu_2512_p1;

assign lshr_ln18_3_fu_2730_p2 = zext_ln346_16_fu_2682_p1 >> zext_ln18_8_fu_2726_p1;

assign lshr_ln18_4_fu_2927_p2 = zext_ln346_18_fu_2879_p1 >> zext_ln18_9_fu_2923_p1;

assign lshr_ln18_5_fu_1704_p2 = zext_ln346_4_fu_1656_p1 >> zext_ln18_2_fu_1700_p1;

assign lshr_ln18_6_fu_1132_p2 = zext_ln346_6_fu_1084_p1 >> zext_ln18_3_fu_1128_p1;

assign lshr_ln18_7_fu_1881_p2 = zext_ln346_8_fu_1833_p1 >> zext_ln18_4_fu_1877_p1;

assign lshr_ln18_8_fu_2054_p2 = zext_ln346_10_fu_2006_p1 >> zext_ln18_5_fu_2050_p1;

assign lshr_ln18_9_fu_2242_p2 = zext_ln346_12_fu_2194_p1 >> zext_ln18_6_fu_2238_p1;

assign lshr_ln18_fu_1310_p2 = zext_ln346_fu_1262_p1 >> zext_ln18_fu_1306_p1;

assign mul_ln42_fu_818_p0 = zext_ln51_fu_796_p1;

assign mul_ln42_fu_818_p1 = 11'd25;

assign or_ln43_fu_868_p2 = (icmp_ln43_fu_774_p2 | and_ln42_fu_856_p2);

assign p_cast25_fu_2115_p1 = empty_130_fu_2110_p2;

assign p_cast26_fu_2334_p1 = empty_131_fu_2329_p2;

assign p_cast_fu_918_p1 = empty_127_fu_912_p2;

assign p_shl3_fu_3000_p3 = {{trunc_ln51_4_fu_2996_p1}, {4'd0}};

assign p_shl4_fu_2803_p3 = {{trunc_ln51_3_fu_2799_p1}, {4'd0}};

assign p_shl5_fu_2589_p3 = {{trunc_ln51_2_fu_2585_p1}, {4'd0}};

assign p_shl6_fu_2315_p3 = {{trunc_ln51_1_fu_2311_p1}, {4'd0}};

assign p_shl7_fu_1384_p3 = {{trunc_ln51_fu_1380_p1}, {4'd0}};

assign p_shl8_fu_894_p3 = {{select_ln43_1_fu_882_p3}, {4'd0}};

assign select_ln18_10_fu_1166_p3 = ((tmp_13_fu_1098_p3[0:0] == 1'b1) ? zext_ln21_3_fu_1152_p1 : tmp_15_fu_1156_p4);

assign select_ln18_11_fu_1865_p3 = ((tmp_17_fu_1847_p3[0:0] == 1'b1) ? sext_ln18_8_fu_1861_p1 : add_ln346_7_fu_1841_p2);

assign select_ln18_12_fu_1915_p3 = ((tmp_17_fu_1847_p3[0:0] == 1'b1) ? zext_ln21_4_fu_1901_p1 : tmp_19_fu_1905_p4);

assign select_ln18_13_fu_2038_p3 = ((tmp_21_fu_2020_p3[0:0] == 1'b1) ? sext_ln18_10_fu_2034_p1 : add_ln346_8_fu_2014_p2);

assign select_ln18_14_fu_2088_p3 = ((tmp_21_fu_2020_p3[0:0] == 1'b1) ? zext_ln21_5_fu_2074_p1 : tmp_22_fu_2078_p4);

assign select_ln18_15_fu_2276_p3 = ((tmp_26_fu_2208_p3[0:0] == 1'b1) ? zext_ln21_6_fu_2262_p1 : tmp_24_fu_2266_p4);

assign select_ln18_16_fu_2500_p3 = ((tmp_31_fu_2482_p3[0:0] == 1'b1) ? sext_ln18_14_fu_2496_p1 : add_ln346_2_fu_2476_p2);

assign select_ln18_17_fu_2550_p3 = ((tmp_31_fu_2482_p3[0:0] == 1'b1) ? zext_ln21_7_fu_2536_p1 : tmp_27_fu_2540_p4);

assign select_ln18_18_fu_2764_p3 = ((tmp_35_fu_2696_p3[0:0] == 1'b1) ? zext_ln21_8_fu_2750_p1 : tmp_30_fu_2754_p4);

assign select_ln18_19_fu_2961_p3 = ((tmp_38_fu_2893_p3[0:0] == 1'b1) ? zext_ln21_9_fu_2947_p1 : tmp_33_fu_2951_p4);

assign select_ln18_1_fu_2226_p3 = ((tmp_26_fu_2208_p3[0:0] == 1'b1) ? sext_ln18_12_fu_2222_p1 : add_ln346_9_fu_2202_p2);

assign select_ln18_2_fu_1344_p3 = ((tmp_1_fu_1276_p3[0:0] == 1'b1) ? zext_ln21_fu_1330_p1 : tmp_s_fu_1334_p4);

assign select_ln18_3_fu_2714_p3 = ((tmp_35_fu_2696_p3[0:0] == 1'b1) ? sext_ln18_16_fu_2710_p1 : add_ln346_3_fu_2690_p2);

assign select_ln18_4_fu_2911_p3 = ((tmp_38_fu_2893_p3[0:0] == 1'b1) ? sext_ln18_18_fu_2907_p1 : add_ln346_4_fu_2887_p2);

assign select_ln18_5_fu_1496_p3 = ((tmp_4_fu_1478_p3[0:0] == 1'b1) ? sext_ln18_2_fu_1492_p1 : add_ln346_1_fu_1472_p2);

assign select_ln18_6_fu_1546_p3 = ((tmp_4_fu_1478_p3[0:0] == 1'b1) ? zext_ln21_1_fu_1532_p1 : tmp_6_fu_1536_p4);

assign select_ln18_7_fu_1688_p3 = ((tmp_9_fu_1670_p3[0:0] == 1'b1) ? sext_ln18_4_fu_1684_p1 : add_ln346_5_fu_1664_p2);

assign select_ln18_8_fu_1738_p3 = ((tmp_9_fu_1670_p3[0:0] == 1'b1) ? zext_ln21_2_fu_1724_p1 : tmp_11_fu_1728_p4);

assign select_ln18_9_fu_1116_p3 = ((tmp_13_fu_1098_p3[0:0] == 1'b1) ? sext_ln18_6_fu_1112_p1 : add_ln346_6_fu_1092_p2);

assign select_ln18_fu_1294_p3 = ((tmp_1_fu_1276_p3[0:0] == 1'b1) ? sext_ln18_fu_1290_p1 : add_ln346_fu_1270_p2);

assign select_ln42_1_fu_788_p3 = ((icmp_ln43_fu_774_p2[0:0] == 1'b1) ? add_ln42_fu_768_p2 : in_feat_fu_174);

assign select_ln42_2_fu_2368_p3 = ((icmp_ln43_reg_3234[0:0] == 1'b1) ? 32'd0 : x_assign_2_reg_3640);

assign select_ln42_fu_780_p3 = ((icmp_ln43_fu_774_p2[0:0] == 1'b1) ? 5'd0 : th_fu_166);

assign select_ln43_1_cast_fu_890_p1 = select_ln43_1_fu_882_p3;

assign select_ln43_1_fu_882_p3 = ((and_ln42_fu_856_p2[0:0] == 1'b1) ? add_ln43_fu_862_p2 : select_ln42_fu_780_p3);

assign select_ln43_2_fu_2374_p3 = ((and_ln42_reg_3282[0:0] == 1'b1) ? grp_fu_95_p_dout0 : select_ln42_2_fu_2368_p3);

assign select_ln43_3_fu_2608_p3 = ((icmp_ln43_reg_3234[0:0] == 1'b1) ? 10'd1 : add_ln43_1_fu_2603_p2);

assign select_ln43_cast_fu_908_p1 = select_ln43_fu_874_p3;

assign select_ln43_fu_874_p3 = ((or_ln43_fu_868_p2[0:0] == 1'b1) ? 5'd0 : tw_fu_162);

assign select_ln59_1_fu_1560_p3 = ((tmp_3_fu_1432_p3[0:0] == 1'b1) ? sub_ln59_1_fu_1554_p2 : select_ln18_6_fu_1546_p3);

assign select_ln59_2_fu_1752_p3 = ((tmp_7_fu_1624_p3[0:0] == 1'b1) ? sub_ln59_2_fu_1746_p2 : select_ln18_8_fu_1738_p3);

assign select_ln59_3_fu_1180_p3 = ((tmp_12_fu_1052_p3[0:0] == 1'b1) ? sub_ln59_3_fu_1174_p2 : select_ln18_10_fu_1166_p3);

assign select_ln59_4_fu_1929_p3 = ((tmp_16_fu_1801_p3[0:0] == 1'b1) ? sub_ln59_4_fu_1923_p2 : select_ln18_12_fu_1915_p3);

assign select_ln59_5_fu_2102_p3 = ((tmp_20_fu_1974_p3[0:0] == 1'b1) ? sub_ln59_5_fu_2096_p2 : select_ln18_14_fu_2088_p3);

assign select_ln59_6_fu_2290_p3 = ((tmp_25_fu_2162_p3[0:0] == 1'b1) ? sub_ln59_6_fu_2284_p2 : select_ln18_15_fu_2276_p3);

assign select_ln59_7_fu_2564_p3 = ((tmp_29_fu_2436_p3[0:0] == 1'b1) ? sub_ln59_7_fu_2558_p2 : select_ln18_17_fu_2550_p3);

assign select_ln59_8_fu_2778_p3 = ((tmp_34_fu_2650_p3[0:0] == 1'b1) ? sub_ln59_8_fu_2772_p2 : select_ln18_18_fu_2764_p3);

assign select_ln59_9_fu_2975_p3 = ((tmp_37_fu_2847_p3[0:0] == 1'b1) ? sub_ln59_9_fu_2969_p2 : select_ln18_19_fu_2961_p3);

assign select_ln59_fu_1358_p3 = ((tmp_fu_1230_p3[0:0] == 1'b1) ? sub_ln59_fu_1352_p2 : select_ln18_2_fu_1344_p3);

assign sext_ln18_10_fu_2034_p1 = $signed(sub_ln18_8_fu_2028_p2);

assign sext_ln18_11_fu_2046_p1 = $signed(select_ln18_13_fu_2038_p3);

assign sext_ln18_12_fu_2222_p1 = $signed(sub_ln18_9_fu_2216_p2);

assign sext_ln18_13_fu_2234_p1 = $signed(select_ln18_1_fu_2226_p3);

assign sext_ln18_14_fu_2496_p1 = $signed(sub_ln18_2_fu_2490_p2);

assign sext_ln18_15_fu_2508_p1 = $signed(select_ln18_16_fu_2500_p3);

assign sext_ln18_16_fu_2710_p1 = $signed(sub_ln18_3_fu_2704_p2);

assign sext_ln18_17_fu_2722_p1 = $signed(select_ln18_3_fu_2714_p3);

assign sext_ln18_18_fu_2907_p1 = $signed(sub_ln18_4_fu_2901_p2);

assign sext_ln18_19_fu_2919_p1 = $signed(select_ln18_4_fu_2911_p3);

assign sext_ln18_1_fu_1302_p1 = $signed(select_ln18_fu_1294_p3);

assign sext_ln18_2_fu_1492_p1 = $signed(sub_ln18_1_fu_1486_p2);

assign sext_ln18_3_fu_1504_p1 = $signed(select_ln18_5_fu_1496_p3);

assign sext_ln18_4_fu_1684_p1 = $signed(sub_ln18_5_fu_1678_p2);

assign sext_ln18_5_fu_1696_p1 = $signed(select_ln18_7_fu_1688_p3);

assign sext_ln18_6_fu_1112_p1 = $signed(sub_ln18_6_fu_1106_p2);

assign sext_ln18_7_fu_1124_p1 = $signed(select_ln18_9_fu_1116_p3);

assign sext_ln18_8_fu_1861_p1 = $signed(sub_ln18_7_fu_1855_p2);

assign sext_ln18_9_fu_1873_p1 = $signed(select_ln18_11_fu_1865_p3);

assign sext_ln18_fu_1290_p1 = $signed(sub_ln18_fu_1284_p2);

assign sext_ln48_1_fu_1023_p1 = $signed(add_ln48_1_fu_1018_p2);

assign sext_ln48_fu_993_p1 = $signed(add_ln48_fu_988_p2);

assign shl_ln18_1_fu_1518_p2 = zext_ln346_2_fu_1464_p1 << zext_ln18_1_fu_1508_p1;

assign shl_ln18_2_fu_2522_p2 = zext_ln346_14_fu_2468_p1 << zext_ln18_7_fu_2512_p1;

assign shl_ln18_3_fu_2736_p2 = zext_ln346_16_fu_2682_p1 << zext_ln18_8_fu_2726_p1;

assign shl_ln18_4_fu_2933_p2 = zext_ln346_18_fu_2879_p1 << zext_ln18_9_fu_2923_p1;

assign shl_ln18_5_fu_1710_p2 = zext_ln346_4_fu_1656_p1 << zext_ln18_2_fu_1700_p1;

assign shl_ln18_6_fu_1138_p2 = zext_ln346_6_fu_1084_p1 << zext_ln18_3_fu_1128_p1;

assign shl_ln18_7_fu_1887_p2 = zext_ln346_8_fu_1833_p1 << zext_ln18_4_fu_1877_p1;

assign shl_ln18_8_fu_2060_p2 = zext_ln346_10_fu_2006_p1 << zext_ln18_5_fu_2050_p1;

assign shl_ln18_9_fu_2248_p2 = zext_ln346_12_fu_2194_p1 << zext_ln18_6_fu_2238_p1;

assign shl_ln18_fu_1316_p2 = zext_ln346_fu_1262_p1 << zext_ln18_fu_1306_p1;

assign sub_ln18_1_fu_1486_p2 = (8'd127 - xs_exp_s_fu_1440_p4);

assign sub_ln18_2_fu_2490_p2 = (8'd127 - xs_exp_2_fu_2444_p4);

assign sub_ln18_3_fu_2704_p2 = (8'd127 - xs_exp_3_fu_2658_p4);

assign sub_ln18_4_fu_2901_p2 = (8'd127 - xs_exp_4_fu_2855_p4);

assign sub_ln18_5_fu_1678_p2 = (8'd127 - xs_exp_1_0_s_fu_1632_p4);

assign sub_ln18_6_fu_1106_p2 = (8'd127 - xs_exp_1_0_1_fu_1060_p4);

assign sub_ln18_7_fu_1855_p2 = (8'd127 - xs_exp_1_0_2_fu_1809_p4);

assign sub_ln18_8_fu_2028_p2 = (8'd127 - xs_exp_1_0_3_fu_1982_p4);

assign sub_ln18_9_fu_2216_p2 = (8'd127 - xs_exp_1_fu_2170_p4);

assign sub_ln18_fu_1284_p2 = (8'd127 - xs_exp_fu_1238_p4);

assign sub_ln59_1_fu_1554_p2 = (14'd0 - select_ln18_6_fu_1546_p3);

assign sub_ln59_2_fu_1746_p2 = (14'd0 - select_ln18_8_fu_1738_p3);

assign sub_ln59_3_fu_1174_p2 = (14'd0 - select_ln18_10_fu_1166_p3);

assign sub_ln59_4_fu_1923_p2 = (14'd0 - select_ln18_12_fu_1915_p3);

assign sub_ln59_5_fu_2096_p2 = (14'd0 - select_ln18_14_fu_2088_p3);

assign sub_ln59_6_fu_2284_p2 = (10'd0 - select_ln18_15_fu_2276_p3);

assign sub_ln59_7_fu_2558_p2 = (10'd0 - select_ln18_17_fu_2550_p3);

assign sub_ln59_8_fu_2772_p2 = (10'd0 - select_ln18_18_fu_2764_p3);

assign sub_ln59_9_fu_2969_p2 = (10'd0 - select_ln18_19_fu_2961_p3);

assign sub_ln59_fu_1352_p2 = (10'd0 - select_ln18_2_fu_1344_p3);

assign th_cast22_fu_1587_p1 = th_1_reg_3215;

assign th_cast22_mid1_fu_1784_p1 = add_ln43_reg_3287;

assign tmp_10_fu_1716_p3 = lshr_ln18_5_fu_1704_p2[32'd24];

assign tmp_11_fu_1728_p4 = {{shl_ln18_5_fu_1710_p2[37:24]}};

assign tmp_12_fu_1052_p3 = bitcast_ln317_3_fu_1048_p1[32'd31];

assign tmp_13_fu_1098_p3 = add_ln346_6_fu_1092_p2[32'd8];

assign tmp_14_fu_1144_p3 = lshr_ln18_6_fu_1132_p2[32'd24];

assign tmp_15_fu_1156_p4 = {{shl_ln18_6_fu_1138_p2[37:24]}};

assign tmp_16_fu_1801_p3 = bitcast_ln317_4_fu_1797_p1[32'd31];

assign tmp_17_fu_1847_p3 = add_ln346_7_fu_1841_p2[32'd8];

assign tmp_18_fu_1893_p3 = lshr_ln18_7_fu_1881_p2[32'd24];

assign tmp_19_fu_1905_p4 = {{shl_ln18_7_fu_1887_p2[37:24]}};

assign tmp_1_fu_1276_p3 = add_ln346_fu_1270_p2[32'd8];

assign tmp_20_fu_1974_p3 = bitcast_ln317_5_fu_1970_p1[32'd31];

assign tmp_21_fu_2020_p3 = add_ln346_8_fu_2014_p2[32'd8];

assign tmp_22_fu_2078_p4 = {{shl_ln18_8_fu_2060_p2[37:24]}};

assign tmp_23_fu_2066_p3 = lshr_ln18_8_fu_2054_p2[32'd24];

assign tmp_24_fu_2266_p4 = {{shl_ln18_9_fu_2248_p2[33:24]}};

assign tmp_25_fu_2162_p3 = bitcast_ln317_6_fu_2158_p1[32'd31];

assign tmp_26_fu_2208_p3 = add_ln346_9_fu_2202_p2[32'd8];

assign tmp_27_fu_2540_p4 = {{shl_ln18_2_fu_2522_p2[33:24]}};

assign tmp_28_fu_2254_p3 = lshr_ln18_9_fu_2242_p2[32'd24];

assign tmp_29_fu_2436_p3 = bitcast_ln317_7_fu_2432_p1[32'd31];

assign tmp_2_fu_1322_p3 = lshr_ln18_fu_1310_p2[32'd24];

assign tmp_30_fu_2754_p4 = {{shl_ln18_3_fu_2736_p2[33:24]}};

assign tmp_31_fu_2482_p3 = add_ln346_2_fu_2476_p2[32'd8];

assign tmp_32_fu_2528_p3 = lshr_ln18_2_fu_2516_p2[32'd24];

assign tmp_33_fu_2951_p4 = {{shl_ln18_4_fu_2933_p2[33:24]}};

assign tmp_34_fu_2650_p3 = bitcast_ln317_8_fu_2646_p1[32'd31];

assign tmp_35_fu_2696_p3 = add_ln346_3_fu_2690_p2[32'd8];

assign tmp_36_fu_2742_p3 = lshr_ln18_3_fu_2730_p2[32'd24];

assign tmp_37_fu_2847_p3 = bitcast_ln317_9_fu_2843_p1[32'd31];

assign tmp_38_fu_2893_p3 = add_ln346_4_fu_2887_p2[32'd8];

assign tmp_39_fu_2939_p3 = lshr_ln18_4_fu_2927_p2[32'd24];

assign tmp_3_fu_1432_p3 = bitcast_ln317_1_fu_1428_p1[32'd31];

assign tmp_4_fu_1478_p3 = add_ln346_1_fu_1472_p2[32'd8];

assign tmp_5_fu_1524_p3 = lshr_ln18_1_fu_1512_p2[32'd24];

assign tmp_6_fu_1536_p4 = {{shl_ln18_1_fu_1518_p2[37:24]}};

assign tmp_7_fu_1624_p3 = bitcast_ln317_2_fu_1620_p1[32'd31];

assign tmp_8_fu_800_p3 = {{select_ln42_1_fu_788_p3}, {4'd0}};

assign tmp_9_fu_1670_p3 = add_ln346_5_fu_1664_p2[32'd8];

assign tmp_fu_1230_p3 = bitcast_ln317_fu_1226_p1[32'd31];

assign tmp_s_fu_1334_p4 = {{shl_ln18_fu_1316_p2[33:24]}};

assign trunc_ln371_1_fu_1450_p1 = bitcast_ln317_1_fu_1428_p1[22:0];

assign trunc_ln371_2_fu_1642_p1 = bitcast_ln317_2_fu_1620_p1[22:0];

assign trunc_ln371_3_fu_1070_p1 = bitcast_ln317_3_fu_1048_p1[22:0];

assign trunc_ln371_4_fu_1819_p1 = bitcast_ln317_4_fu_1797_p1[22:0];

assign trunc_ln371_5_fu_1992_p1 = bitcast_ln317_5_fu_1970_p1[22:0];

assign trunc_ln371_6_fu_2180_p1 = bitcast_ln317_6_fu_2158_p1[22:0];

assign trunc_ln371_7_fu_2454_p1 = bitcast_ln317_7_fu_2432_p1[22:0];

assign trunc_ln371_8_fu_2668_p1 = bitcast_ln317_8_fu_2646_p1[22:0];

assign trunc_ln371_9_fu_2865_p1 = bitcast_ln317_9_fu_2843_p1[22:0];

assign trunc_ln371_fu_1248_p1 = bitcast_ln317_fu_1226_p1[22:0];

assign trunc_ln50_fu_829_p1 = mul_ln42_fu_818_p2[9:0];

assign trunc_ln51_1_fu_2311_p1 = add_ln51_8_fu_2302_p2[9:0];

assign trunc_ln51_2_fu_2585_p1 = add_ln51_15_fu_2576_p2[9:0];

assign trunc_ln51_3_fu_2799_p1 = add_ln51_22_fu_2790_p2[9:0];

assign trunc_ln51_4_fu_2996_p1 = add_ln51_29_fu_2987_p2[9:0];

assign trunc_ln51_fu_1380_p1 = add_ln51_1_fu_1370_p2[9:0];

assign x_assign147_fu_963_p1 = $signed(empty_128_fu_958_p2);

assign x_assign_150_fu_1582_p1 = $signed(empty_129_fu_1577_p2);

assign xor_ln42_fu_844_p2 = (icmp_ln43_fu_774_p2 ^ 1'd1);

assign xs_exp_1_0_1_fu_1060_p4 = {{bitcast_ln317_3_fu_1048_p1[30:23]}};

assign xs_exp_1_0_2_fu_1809_p4 = {{bitcast_ln317_4_fu_1797_p1[30:23]}};

assign xs_exp_1_0_3_fu_1982_p4 = {{bitcast_ln317_5_fu_1970_p1[30:23]}};

assign xs_exp_1_0_s_fu_1632_p4 = {{bitcast_ln317_2_fu_1620_p1[30:23]}};

assign xs_exp_1_fu_2170_p4 = {{bitcast_ln317_6_fu_2158_p1[30:23]}};

assign xs_exp_2_fu_2444_p4 = {{bitcast_ln317_7_fu_2432_p1[30:23]}};

assign xs_exp_3_fu_2658_p4 = {{bitcast_ln317_8_fu_2646_p1[30:23]}};

assign xs_exp_4_fu_2855_p4 = {{bitcast_ln317_9_fu_2843_p1[30:23]}};

assign xs_exp_fu_1238_p4 = {{bitcast_ln317_fu_1226_p1[30:23]}};

assign xs_exp_s_fu_1440_p4 = {{bitcast_ln317_1_fu_1428_p1[30:23]}};

assign zext_ln18_1_fu_1508_p1 = $unsigned(sext_ln18_3_fu_1504_p1);

assign zext_ln18_2_fu_1700_p1 = $unsigned(sext_ln18_5_fu_1696_p1);

assign zext_ln18_3_fu_1128_p1 = $unsigned(sext_ln18_7_fu_1124_p1);

assign zext_ln18_4_fu_1877_p1 = $unsigned(sext_ln18_9_fu_1873_p1);

assign zext_ln18_5_fu_2050_p1 = $unsigned(sext_ln18_11_fu_2046_p1);

assign zext_ln18_6_fu_2238_p1 = $unsigned(sext_ln18_13_fu_2234_p1);

assign zext_ln18_7_fu_2512_p1 = $unsigned(sext_ln18_15_fu_2508_p1);

assign zext_ln18_8_fu_2726_p1 = $unsigned(sext_ln18_17_fu_2722_p1);

assign zext_ln18_9_fu_2923_p1 = $unsigned(sext_ln18_19_fu_2919_p1);

assign zext_ln18_fu_1306_p1 = $unsigned(sext_ln18_1_fu_1302_p1);

assign zext_ln21_1_fu_1532_p1 = tmp_5_fu_1524_p3;

assign zext_ln21_2_fu_1724_p1 = tmp_10_fu_1716_p3;

assign zext_ln21_3_fu_1152_p1 = tmp_14_fu_1144_p3;

assign zext_ln21_4_fu_1901_p1 = tmp_18_fu_1893_p3;

assign zext_ln21_5_fu_2074_p1 = tmp_23_fu_2066_p3;

assign zext_ln21_6_fu_2262_p1 = tmp_28_fu_2254_p3;

assign zext_ln21_7_fu_2536_p1 = tmp_32_fu_2528_p3;

assign zext_ln21_8_fu_2750_p1 = tmp_36_fu_2742_p3;

assign zext_ln21_9_fu_2947_p1 = tmp_39_fu_2939_p3;

assign zext_ln21_fu_1330_p1 = tmp_2_fu_1322_p3;

assign zext_ln346_10_cast_fu_1996_p4 = {{{{1'd1}, {trunc_ln371_5_fu_1992_p1}}}, {1'd0}};

assign zext_ln346_10_fu_2006_p1 = zext_ln346_10_cast_fu_1996_p4;

assign zext_ln346_11_fu_2010_p1 = xs_exp_1_0_3_fu_1982_p4;

assign zext_ln346_12_cast_fu_2184_p4 = {{{{1'd1}, {trunc_ln371_6_fu_2180_p1}}}, {1'd0}};

assign zext_ln346_12_fu_2194_p1 = zext_ln346_12_cast_fu_2184_p4;

assign zext_ln346_13_fu_2198_p1 = xs_exp_1_fu_2170_p4;

assign zext_ln346_14_cast_fu_2458_p4 = {{{{1'd1}, {trunc_ln371_7_fu_2454_p1}}}, {1'd0}};

assign zext_ln346_14_fu_2468_p1 = zext_ln346_14_cast_fu_2458_p4;

assign zext_ln346_15_fu_2472_p1 = xs_exp_2_fu_2444_p4;

assign zext_ln346_16_cast_fu_2672_p4 = {{{{1'd1}, {trunc_ln371_8_fu_2668_p1}}}, {1'd0}};

assign zext_ln346_16_fu_2682_p1 = zext_ln346_16_cast_fu_2672_p4;

assign zext_ln346_17_fu_2686_p1 = xs_exp_3_fu_2658_p4;

assign zext_ln346_18_cast_fu_2869_p4 = {{{{1'd1}, {trunc_ln371_9_fu_2865_p1}}}, {1'd0}};

assign zext_ln346_18_fu_2879_p1 = zext_ln346_18_cast_fu_2869_p4;

assign zext_ln346_19_fu_2883_p1 = xs_exp_4_fu_2855_p4;

assign zext_ln346_1_fu_1266_p1 = xs_exp_fu_1238_p4;

assign zext_ln346_2_cast_fu_1454_p4 = {{{{1'd1}, {trunc_ln371_1_fu_1450_p1}}}, {1'd0}};

assign zext_ln346_2_fu_1464_p1 = zext_ln346_2_cast_fu_1454_p4;

assign zext_ln346_3_fu_1468_p1 = xs_exp_s_fu_1440_p4;

assign zext_ln346_4_cast_fu_1646_p4 = {{{{1'd1}, {trunc_ln371_2_fu_1642_p1}}}, {1'd0}};

assign zext_ln346_4_fu_1656_p1 = zext_ln346_4_cast_fu_1646_p4;

assign zext_ln346_5_fu_1660_p1 = xs_exp_1_0_s_fu_1632_p4;

assign zext_ln346_6_cast_fu_1074_p4 = {{{{1'd1}, {trunc_ln371_3_fu_1070_p1}}}, {1'd0}};

assign zext_ln346_6_fu_1084_p1 = zext_ln346_6_cast_fu_1074_p4;

assign zext_ln346_7_fu_1088_p1 = xs_exp_1_0_1_fu_1060_p4;

assign zext_ln346_8_cast_fu_1823_p4 = {{{{1'd1}, {trunc_ln371_4_fu_1819_p1}}}, {1'd0}};

assign zext_ln346_8_fu_1833_p1 = zext_ln346_8_cast_fu_1823_p4;

assign zext_ln346_9_fu_1837_p1 = xs_exp_1_0_2_fu_1809_p4;

assign zext_ln346_cast_fu_1252_p4 = {{{{1'd1}, {trunc_ln371_fu_1248_p1}}}, {1'd0}};

assign zext_ln346_fu_1262_p1 = zext_ln346_cast_fu_1252_p4;

assign zext_ln42_fu_1203_p1 = add_ln51_reg_3240;

assign zext_ln48_1_fu_1193_p1 = add_ln48_2_fu_1188_p2;

assign zext_ln48_2_fu_1403_p1 = add_ln48_3_fu_1398_p2;

assign zext_ln48_fu_923_p1 = select_ln43_fu_874_p3;

assign zext_ln50_10_fu_1211_p1 = add_ln42_10_fu_1206_p2;

assign zext_ln50_11_fu_1221_p1 = add_ln42_11_fu_1216_p2;

assign zext_ln50_12_fu_1413_p1 = add_ln42_12_fu_1408_p2;

assign zext_ln50_13_fu_1423_p1 = add_ln42_13_fu_1418_p2;

assign zext_ln50_14_fu_1596_p1 = add_ln42_14_fu_1591_p2;

assign zext_ln50_15_fu_1606_p1 = add_ln42_15_fu_1601_p2;

assign zext_ln50_16_fu_1769_p1 = add_ln42_16_fu_1764_p2;

assign zext_ln50_17_fu_1779_p1 = add_ln42_17_fu_1774_p2;

assign zext_ln50_18_fu_1946_p1 = add_ln42_18_fu_1941_p2;

assign zext_ln50_19_fu_1956_p1 = add_ln42_19_fu_1951_p2;

assign zext_ln50_1_fu_839_p1 = add_ln42_1_fu_833_p2;

assign zext_ln50_20_fu_2134_p1 = add_ln42_20_fu_2129_p2;

assign zext_ln50_21_fu_2144_p1 = add_ln42_21_fu_2139_p2;

assign zext_ln50_22_fu_2353_p1 = add_ln42_22_fu_2348_p2;

assign zext_ln50_23_fu_2363_p1 = add_ln42_23_fu_2358_p2;

assign zext_ln50_24_fu_2409_p1 = add_ln42_24_fu_2404_p2;

assign zext_ln50_2_fu_943_p1 = add_ln42_2_fu_938_p2;

assign zext_ln50_3_fu_953_p1 = add_ln42_3_fu_948_p2;

assign zext_ln50_4_fu_973_p1 = add_ln42_4_fu_968_p2;

assign zext_ln50_5_fu_983_p1 = add_ln42_5_fu_978_p2;

assign zext_ln50_6_fu_1003_p1 = add_ln42_6_fu_998_p2;

assign zext_ln50_7_fu_1013_p1 = add_ln42_7_fu_1008_p2;

assign zext_ln50_8_fu_1033_p1 = add_ln42_8_fu_1028_p2;

assign zext_ln50_9_fu_1043_p1 = add_ln42_9_fu_1038_p2;

assign zext_ln50_fu_824_p1 = mul_ln42_fu_818_p2;

assign zext_ln51_10_fu_2307_p1 = add_ln51_8_fu_2302_p2;

assign zext_ln51_11_fu_2386_p1 = add_ln51_10_fu_2382_p2;

assign zext_ln51_12_fu_2395_p1 = add_ln51_11_fu_2391_p2;

assign zext_ln51_13_fu_2418_p1 = add_ln51_12_fu_2414_p2;

assign zext_ln51_14_fu_2427_p1 = add_ln51_13_fu_2423_p2;

assign zext_ln51_15_fu_2632_p1 = add_ln51_14_fu_2628_p2;

assign zext_ln51_16_fu_2572_p1 = select_ln59_7_fu_2564_p3;

assign zext_ln51_17_fu_2581_p1 = add_ln51_15_fu_2576_p2;

assign zext_ln51_18_fu_2641_p1 = add_ln51_17_fu_2637_p2;

assign zext_ln51_19_fu_2829_p1 = add_ln51_18_fu_2825_p2;

assign zext_ln51_1_fu_808_p1 = tmp_8_fu_800_p3;

assign zext_ln51_20_fu_2838_p1 = add_ln51_19_fu_2834_p2;

assign zext_ln51_21_fu_3026_p1 = add_ln51_20_fu_3022_p2;

assign zext_ln51_22_fu_3035_p1 = add_ln51_21_fu_3031_p2;

assign zext_ln51_23_fu_2786_p1 = select_ln59_8_fu_2778_p3;

assign zext_ln51_24_fu_2795_p1 = add_ln51_22_fu_2790_p2;

assign zext_ln51_25_fu_3052_p1 = add_ln51_24_fu_3048_p2;

assign zext_ln51_26_fu_3061_p1 = add_ln51_25_fu_3057_p2;

assign zext_ln51_27_fu_3078_p1 = add_ln51_26_fu_3074_p2;

assign zext_ln51_28_fu_3087_p1 = add_ln51_27_fu_3083_p2;

assign zext_ln51_29_fu_3124_p1 = add_ln51_28_reg_3941;

assign zext_ln51_2_fu_1366_p1 = select_ln59_fu_1358_p3;

assign zext_ln51_30_fu_2983_p1 = select_ln59_9_fu_2975_p3;

assign zext_ln51_31_fu_2992_p1 = add_ln51_29_fu_2987_p2;

assign zext_ln51_32_fu_3128_p1 = add_ln51_31_reg_3946;

assign zext_ln51_33_fu_3140_p1 = add_ln51_32_reg_3951;

assign zext_ln51_34_fu_3152_p1 = add_ln51_33_reg_3956;

assign zext_ln51_35_fu_3160_p1 = add_ln51_34_reg_3961;

assign zext_ln51_36_fu_3168_p1 = add_ln51_35_reg_3966;

assign zext_ln51_3_fu_1376_p1 = add_ln51_1_fu_1370_p2;

assign zext_ln51_4_fu_1615_p1 = add_ln51_3_fu_1611_p2;

assign zext_ln51_5_fu_1792_p1 = add_ln51_4_fu_1788_p2;

assign zext_ln51_6_fu_1572_p1 = add_ln51_5_fu_1568_p2;

assign zext_ln51_7_fu_1965_p1 = add_ln51_6_fu_1961_p2;

assign zext_ln51_8_fu_2153_p1 = add_ln51_7_fu_2149_p2;

assign zext_ln51_9_fu_2298_p1 = select_ln59_6_fu_2290_p3;

assign zext_ln51_fu_796_p1 = select_ln42_1_fu_788_p3;

always @ (posedge ap_clk) begin
    zext_ln42_reg_3432[11] <= 1'b0;
end

endmodule //srcnn_conv33_Pipeline_MAC_CONV3_VITIS_LOOP_43_5_VITIS_LOOP_44_6
