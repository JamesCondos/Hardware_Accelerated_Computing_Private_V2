// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_OUT_STATIONARY_CONV2_VITIS_LOOP_43_3_VITIS_LOOP_44_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty_32,
        empty_33,
        empty_34,
        empty_35,
        empty_36,
        empty_37,
        empty_38,
        empty_39,
        empty_40,
        empty_41,
        empty_42,
        empty_43,
        empty_44,
        empty_45,
        empty_46,
        empty_47,
        empty_48,
        empty_49,
        empty_50,
        empty_51,
        empty_52,
        empty_53,
        empty_54,
        empty_55,
        empty_56,
        empty_57,
        empty_58,
        empty_59,
        empty_60,
        empty_61,
        empty_62,
        empty,
        layer2_output_tile_address0,
        layer2_output_tile_ce0,
        layer2_output_tile_we0,
        layer2_output_tile_d0,
        layer2_output_tile_1_address0,
        layer2_output_tile_1_ce0,
        layer2_output_tile_1_we0,
        layer2_output_tile_1_d0,
        layer2_output_tile_2_address0,
        layer2_output_tile_2_ce0,
        layer2_output_tile_2_we0,
        layer2_output_tile_2_d0,
        layer2_output_tile_3_address0,
        layer2_output_tile_3_ce0,
        layer2_output_tile_3_we0,
        layer2_output_tile_3_d0,
        layer2_output_tile_4_address0,
        layer2_output_tile_4_ce0,
        layer2_output_tile_4_we0,
        layer2_output_tile_4_d0,
        layer2_output_tile_5_address0,
        layer2_output_tile_5_ce0,
        layer2_output_tile_5_we0,
        layer2_output_tile_5_d0,
        layer2_output_tile_6_address0,
        layer2_output_tile_6_ce0,
        layer2_output_tile_6_we0,
        layer2_output_tile_6_d0,
        layer2_output_tile_7_address0,
        layer2_output_tile_7_ce0,
        layer2_output_tile_7_we0,
        layer2_output_tile_7_d0,
        layer2_output_tile_8_address0,
        layer2_output_tile_8_ce0,
        layer2_output_tile_8_we0,
        layer2_output_tile_8_d0,
        layer2_output_tile_9_address0,
        layer2_output_tile_9_ce0,
        layer2_output_tile_9_we0,
        layer2_output_tile_9_d0,
        layer2_output_tile_10_address0,
        layer2_output_tile_10_ce0,
        layer2_output_tile_10_we0,
        layer2_output_tile_10_d0,
        layer2_output_tile_11_address0,
        layer2_output_tile_11_ce0,
        layer2_output_tile_11_we0,
        layer2_output_tile_11_d0,
        layer2_output_tile_12_address0,
        layer2_output_tile_12_ce0,
        layer2_output_tile_12_we0,
        layer2_output_tile_12_d0,
        layer2_output_tile_13_address0,
        layer2_output_tile_13_ce0,
        layer2_output_tile_13_we0,
        layer2_output_tile_13_d0,
        layer2_output_tile_14_address0,
        layer2_output_tile_14_ce0,
        layer2_output_tile_14_we0,
        layer2_output_tile_14_d0,
        layer2_output_tile_15_address0,
        layer2_output_tile_15_ce0,
        layer2_output_tile_15_we0,
        layer2_output_tile_15_d0,
        layer2_output_tile_16_address0,
        layer2_output_tile_16_ce0,
        layer2_output_tile_16_we0,
        layer2_output_tile_16_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] empty_32;
input  [31:0] empty_33;
input  [31:0] empty_34;
input  [31:0] empty_35;
input  [31:0] empty_36;
input  [31:0] empty_37;
input  [31:0] empty_38;
input  [31:0] empty_39;
input  [31:0] empty_40;
input  [31:0] empty_41;
input  [31:0] empty_42;
input  [31:0] empty_43;
input  [31:0] empty_44;
input  [31:0] empty_45;
input  [31:0] empty_46;
input  [31:0] empty_47;
input  [31:0] empty_48;
input  [31:0] empty_49;
input  [31:0] empty_50;
input  [31:0] empty_51;
input  [31:0] empty_52;
input  [31:0] empty_53;
input  [31:0] empty_54;
input  [31:0] empty_55;
input  [31:0] empty_56;
input  [31:0] empty_57;
input  [31:0] empty_58;
input  [31:0] empty_59;
input  [31:0] empty_60;
input  [31:0] empty_61;
input  [31:0] empty_62;
input  [31:0] empty;
output  [9:0] layer2_output_tile_address0;
output   layer2_output_tile_ce0;
output   layer2_output_tile_we0;
output  [31:0] layer2_output_tile_d0;
output  [9:0] layer2_output_tile_1_address0;
output   layer2_output_tile_1_ce0;
output   layer2_output_tile_1_we0;
output  [31:0] layer2_output_tile_1_d0;
output  [9:0] layer2_output_tile_2_address0;
output   layer2_output_tile_2_ce0;
output   layer2_output_tile_2_we0;
output  [31:0] layer2_output_tile_2_d0;
output  [9:0] layer2_output_tile_3_address0;
output   layer2_output_tile_3_ce0;
output   layer2_output_tile_3_we0;
output  [31:0] layer2_output_tile_3_d0;
output  [9:0] layer2_output_tile_4_address0;
output   layer2_output_tile_4_ce0;
output   layer2_output_tile_4_we0;
output  [31:0] layer2_output_tile_4_d0;
output  [9:0] layer2_output_tile_5_address0;
output   layer2_output_tile_5_ce0;
output   layer2_output_tile_5_we0;
output  [31:0] layer2_output_tile_5_d0;
output  [9:0] layer2_output_tile_6_address0;
output   layer2_output_tile_6_ce0;
output   layer2_output_tile_6_we0;
output  [31:0] layer2_output_tile_6_d0;
output  [9:0] layer2_output_tile_7_address0;
output   layer2_output_tile_7_ce0;
output   layer2_output_tile_7_we0;
output  [31:0] layer2_output_tile_7_d0;
output  [9:0] layer2_output_tile_8_address0;
output   layer2_output_tile_8_ce0;
output   layer2_output_tile_8_we0;
output  [31:0] layer2_output_tile_8_d0;
output  [9:0] layer2_output_tile_9_address0;
output   layer2_output_tile_9_ce0;
output   layer2_output_tile_9_we0;
output  [31:0] layer2_output_tile_9_d0;
output  [9:0] layer2_output_tile_10_address0;
output   layer2_output_tile_10_ce0;
output   layer2_output_tile_10_we0;
output  [31:0] layer2_output_tile_10_d0;
output  [9:0] layer2_output_tile_11_address0;
output   layer2_output_tile_11_ce0;
output   layer2_output_tile_11_we0;
output  [31:0] layer2_output_tile_11_d0;
output  [9:0] layer2_output_tile_12_address0;
output   layer2_output_tile_12_ce0;
output   layer2_output_tile_12_we0;
output  [31:0] layer2_output_tile_12_d0;
output  [9:0] layer2_output_tile_13_address0;
output   layer2_output_tile_13_ce0;
output   layer2_output_tile_13_we0;
output  [31:0] layer2_output_tile_13_d0;
output  [9:0] layer2_output_tile_14_address0;
output   layer2_output_tile_14_ce0;
output   layer2_output_tile_14_we0;
output  [31:0] layer2_output_tile_14_d0;
output  [9:0] layer2_output_tile_15_address0;
output   layer2_output_tile_15_ce0;
output   layer2_output_tile_15_we0;
output  [31:0] layer2_output_tile_15_d0;
output  [9:0] layer2_output_tile_16_address0;
output   layer2_output_tile_16_ce0;
output   layer2_output_tile_16_we0;
output  [31:0] layer2_output_tile_16_d0;

reg ap_idle;
reg layer2_output_tile_ce0;
reg layer2_output_tile_we0;
reg layer2_output_tile_1_ce0;
reg layer2_output_tile_1_we0;
reg layer2_output_tile_2_ce0;
reg layer2_output_tile_2_we0;
reg layer2_output_tile_3_ce0;
reg layer2_output_tile_3_we0;
reg layer2_output_tile_4_ce0;
reg layer2_output_tile_4_we0;
reg layer2_output_tile_5_ce0;
reg layer2_output_tile_5_we0;
reg layer2_output_tile_6_ce0;
reg layer2_output_tile_6_we0;
reg layer2_output_tile_7_ce0;
reg layer2_output_tile_7_we0;
reg layer2_output_tile_8_ce0;
reg layer2_output_tile_8_we0;
reg layer2_output_tile_9_ce0;
reg layer2_output_tile_9_we0;
reg layer2_output_tile_10_ce0;
reg layer2_output_tile_10_we0;
reg layer2_output_tile_11_ce0;
reg layer2_output_tile_11_we0;
reg layer2_output_tile_12_ce0;
reg layer2_output_tile_12_we0;
reg layer2_output_tile_13_ce0;
reg layer2_output_tile_13_we0;
reg layer2_output_tile_14_ce0;
reg layer2_output_tile_14_we0;
reg layer2_output_tile_15_ce0;
reg layer2_output_tile_15_we0;
reg layer2_output_tile_16_ce0;
reg layer2_output_tile_16_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln42_fu_689_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln46_2_fu_876_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] j_fu_180;
wire   [4:0] add_ln44_fu_897_p2;
wire    ap_loop_init;
reg   [4:0] i_2_fu_184;
wire   [4:0] select_ln43_4_fu_858_p3;
reg   [9:0] indvar_flatten104_fu_188;
wire   [9:0] select_ln43_5_fu_909_p3;
reg   [5:0] out_feat_fu_192;
wire   [5:0] select_ln42_3_fu_727_p3;
reg   [13:0] indvar_flatten117_fu_196;
wire   [13:0] add_ln42_26_fu_695_p2;
wire   [4:0] select_ln43_fu_850_p3;
wire   [31:0] select_ln42_4_fu_795_p3;
wire   [4:0] tmp_fu_651_p33;
wire   [0:0] icmp_ln43_fu_713_p2;
wire   [5:0] add_ln42_fu_707_p2;
wire   [9:0] tmp_s_fu_739_p3;
wire   [9:0] zext_ln46_fu_735_p1;
wire   [4:0] tmp_mid1_fu_757_p33;
wire   [31:0] tmp_mid1_fu_757_p34;
wire   [31:0] tmp_fu_651_p34;
wire   [0:0] icmp_ln44_fu_826_p2;
wire   [0:0] xor_ln42_fu_820_p2;
wire   [4:0] select_ln42_fu_719_p3;
wire   [0:0] and_ln42_fu_832_p2;
wire   [0:0] or_ln43_fu_844_p2;
wire   [4:0] add_ln43_fu_838_p2;
wire   [9:0] add_ln46_fu_747_p2;
wire   [9:0] zext_ln46_1_fu_866_p1;
wire   [9:0] add_ln46_1_fu_870_p2;
wire   [9:0] add_ln43_2_fu_903_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1805(
    .din0(empty_32),
    .din1(empty_33),
    .din2(empty_34),
    .din3(empty_35),
    .din4(empty_36),
    .din5(empty_37),
    .din6(empty_38),
    .din7(empty_39),
    .din8(empty_40),
    .din9(empty_41),
    .din10(empty_42),
    .din11(empty_43),
    .din12(empty_44),
    .din13(empty_45),
    .din14(empty_46),
    .din15(empty_47),
    .din16(empty_48),
    .din17(empty_49),
    .din18(empty_50),
    .din19(empty_51),
    .din20(empty_52),
    .din21(empty_53),
    .din22(empty_54),
    .din23(empty_55),
    .din24(empty_56),
    .din25(empty_57),
    .din26(empty_58),
    .din27(empty_59),
    .din28(empty_60),
    .din29(empty_61),
    .din30(empty_62),
    .din31(empty),
    .din32(tmp_fu_651_p33),
    .dout(tmp_fu_651_p34)
);

srcnn_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U1806(
    .din0(empty_32),
    .din1(empty_33),
    .din2(empty_34),
    .din3(empty_35),
    .din4(empty_36),
    .din5(empty_37),
    .din6(empty_38),
    .din7(empty_39),
    .din8(empty_40),
    .din9(empty_41),
    .din10(empty_42),
    .din11(empty_43),
    .din12(empty_44),
    .din13(empty_45),
    .din14(empty_46),
    .din15(empty_47),
    .din16(empty_48),
    .din17(empty_49),
    .din18(empty_50),
    .din19(empty_51),
    .din20(empty_52),
    .din21(empty_53),
    .din22(empty_54),
    .din23(empty_55),
    .din24(empty_56),
    .din25(empty_57),
    .din26(empty_58),
    .din27(empty_59),
    .din28(empty_60),
    .din29(empty_61),
    .din30(empty_62),
    .din31(empty),
    .din32(tmp_mid1_fu_757_p33),
    .dout(tmp_mid1_fu_757_p34)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_2_fu_184 <= 5'd0;
        end else if (((icmp_ln42_fu_689_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_2_fu_184 <= select_ln43_4_fu_858_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten104_fu_188 <= 10'd0;
        end else if (((icmp_ln42_fu_689_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten104_fu_188 <= select_ln43_5_fu_909_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten117_fu_196 <= 14'd0;
        end else if (((icmp_ln42_fu_689_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten117_fu_196 <= add_ln42_26_fu_695_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_180 <= 5'd0;
        end else if (((icmp_ln42_fu_689_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_180 <= add_ln44_fu_897_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            out_feat_fu_192 <= 6'd0;
        end else if (((icmp_ln42_fu_689_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            out_feat_fu_192 <= select_ln42_3_fu_727_p3;
        end
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_10_ce0 = 1'b1;
    end else begin
        layer2_output_tile_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_10_we0 = 1'b1;
    end else begin
        layer2_output_tile_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_11_ce0 = 1'b1;
    end else begin
        layer2_output_tile_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_11_we0 = 1'b1;
    end else begin
        layer2_output_tile_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_12_ce0 = 1'b1;
    end else begin
        layer2_output_tile_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_12_we0 = 1'b1;
    end else begin
        layer2_output_tile_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_13_ce0 = 1'b1;
    end else begin
        layer2_output_tile_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_13_we0 = 1'b1;
    end else begin
        layer2_output_tile_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_14_ce0 = 1'b1;
    end else begin
        layer2_output_tile_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_14_we0 = 1'b1;
    end else begin
        layer2_output_tile_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_15_ce0 = 1'b1;
    end else begin
        layer2_output_tile_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_15_we0 = 1'b1;
    end else begin
        layer2_output_tile_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_16_ce0 = 1'b1;
    end else begin
        layer2_output_tile_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln43_fu_850_p3 == 5'd0) & ~(select_ln43_fu_850_p3 == 5'd1) & ~(select_ln43_fu_850_p3 == 5'd2) & ~(select_ln43_fu_850_p3 == 5'd3) & ~(select_ln43_fu_850_p3 == 5'd4) & ~(select_ln43_fu_850_p3 == 5'd5) & ~(select_ln43_fu_850_p3 == 5'd6) & ~(select_ln43_fu_850_p3 == 5'd7) & ~(select_ln43_fu_850_p3 == 5'd8) & ~(select_ln43_fu_850_p3 == 5'd9) & ~(select_ln43_fu_850_p3 == 5'd10) & ~(select_ln43_fu_850_p3 == 5'd11) & ~(select_ln43_fu_850_p3 == 5'd12) & ~(select_ln43_fu_850_p3 == 5'd13) & ~(select_ln43_fu_850_p3 == 5'd14) & ~(select_ln43_fu_850_p3 == 5'd15) & (icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_16_we0 = 1'b1;
    end else begin
        layer2_output_tile_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_1_ce0 = 1'b1;
    end else begin
        layer2_output_tile_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_1_we0 = 1'b1;
    end else begin
        layer2_output_tile_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_2_ce0 = 1'b1;
    end else begin
        layer2_output_tile_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_2_we0 = 1'b1;
    end else begin
        layer2_output_tile_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_3_ce0 = 1'b1;
    end else begin
        layer2_output_tile_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_3_we0 = 1'b1;
    end else begin
        layer2_output_tile_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_4_ce0 = 1'b1;
    end else begin
        layer2_output_tile_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_4_we0 = 1'b1;
    end else begin
        layer2_output_tile_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_5_ce0 = 1'b1;
    end else begin
        layer2_output_tile_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_5_we0 = 1'b1;
    end else begin
        layer2_output_tile_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_6_ce0 = 1'b1;
    end else begin
        layer2_output_tile_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_6_we0 = 1'b1;
    end else begin
        layer2_output_tile_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_7_ce0 = 1'b1;
    end else begin
        layer2_output_tile_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_7_we0 = 1'b1;
    end else begin
        layer2_output_tile_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_8_ce0 = 1'b1;
    end else begin
        layer2_output_tile_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_8_we0 = 1'b1;
    end else begin
        layer2_output_tile_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_9_ce0 = 1'b1;
    end else begin
        layer2_output_tile_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_9_we0 = 1'b1;
    end else begin
        layer2_output_tile_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_ce0 = 1'b1;
    end else begin
        layer2_output_tile_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_689_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln43_fu_850_p3 == 5'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_output_tile_we0 = 1'b1;
    end else begin
        layer2_output_tile_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln42_26_fu_695_p2 = (indvar_flatten117_fu_196 + 14'd1);

assign add_ln42_fu_707_p2 = (out_feat_fu_192 + 6'd1);

assign add_ln43_2_fu_903_p2 = (indvar_flatten104_fu_188 + 10'd1);

assign add_ln43_fu_838_p2 = (select_ln42_fu_719_p3 + 5'd1);

assign add_ln44_fu_897_p2 = (select_ln43_fu_850_p3 + 5'd1);

assign add_ln46_1_fu_870_p2 = (add_ln46_fu_747_p2 + zext_ln46_1_fu_866_p1);

assign add_ln46_fu_747_p2 = (tmp_s_fu_739_p3 + zext_ln46_fu_735_p1);

assign and_ln42_fu_832_p2 = (xor_ln42_fu_820_p2 & icmp_ln44_fu_826_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln42_fu_689_p2 = ((indvar_flatten117_fu_196 == 14'd9248) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_713_p2 = ((indvar_flatten104_fu_188 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_826_p2 = ((j_fu_180 == 5'd17) ? 1'b1 : 1'b0);

assign layer2_output_tile_10_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_10_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_11_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_11_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_12_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_12_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_13_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_13_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_14_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_14_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_15_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_15_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_16_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_16_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_1_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_1_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_2_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_2_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_3_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_3_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_4_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_4_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_5_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_5_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_6_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_6_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_7_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_7_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_8_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_8_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_9_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_9_d0 = select_ln42_4_fu_795_p3;

assign layer2_output_tile_address0 = zext_ln46_2_fu_876_p1;

assign layer2_output_tile_d0 = select_ln42_4_fu_795_p3;

assign or_ln43_fu_844_p2 = (icmp_ln43_fu_713_p2 | and_ln42_fu_832_p2);

assign select_ln42_3_fu_727_p3 = ((icmp_ln43_fu_713_p2[0:0] == 1'b1) ? add_ln42_fu_707_p2 : out_feat_fu_192);

assign select_ln42_4_fu_795_p3 = ((icmp_ln43_fu_713_p2[0:0] == 1'b1) ? tmp_mid1_fu_757_p34 : tmp_fu_651_p34);

assign select_ln42_fu_719_p3 = ((icmp_ln43_fu_713_p2[0:0] == 1'b1) ? 5'd0 : i_2_fu_184);

assign select_ln43_4_fu_858_p3 = ((and_ln42_fu_832_p2[0:0] == 1'b1) ? add_ln43_fu_838_p2 : select_ln42_fu_719_p3);

assign select_ln43_5_fu_909_p3 = ((icmp_ln43_fu_713_p2[0:0] == 1'b1) ? 10'd1 : add_ln43_2_fu_903_p2);

assign select_ln43_fu_850_p3 = ((or_ln43_fu_844_p2[0:0] == 1'b1) ? 5'd0 : j_fu_180);

assign tmp_fu_651_p33 = out_feat_fu_192[4:0];

assign tmp_mid1_fu_757_p33 = add_ln42_fu_707_p2[4:0];

assign tmp_s_fu_739_p3 = {{select_ln42_3_fu_727_p3}, {4'd0}};

assign xor_ln42_fu_820_p2 = (icmp_ln43_fu_713_p2 ^ 1'd1);

assign zext_ln46_1_fu_866_p1 = select_ln43_4_fu_858_p3;

assign zext_ln46_2_fu_876_p1 = add_ln46_1_fu_870_p2;

assign zext_ln46_fu_735_p1 = select_ln42_3_fu_727_p3;

endmodule //srcnn_conv2_Pipeline_OUT_STATIONARY_CONV2_VITIS_LOOP_43_3_VITIS_LOOP_44_4
