// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv3_from_precomputed_conv2_Pipeline_VITIS_LOOP_192_7_VITIS_LOOP_193_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc3,
        zext_ln176_3,
        h0_cast,
        zext_ln173,
        sub60_cast,
        add_ln204,
        zext_ln180_1,
        w0_cast5,
        zext_ln174,
        zext_ln176,
        conv2_buf_address0,
        conv2_buf_ce0,
        conv2_buf_q0,
        mux_case_091_reload,
        mux_case_197_reload,
        mux_case_2103_reload,
        mux_case_3109_reload,
        mux_case_4115_reload,
        mux_case_046122_reload,
        mux_case_148128_reload,
        mux_case_250134_reload,
        mux_case_352140_reload,
        mux_case_454146_reload,
        mux_case_057152_reload,
        mux_case_159158_reload,
        mux_case_261164_reload,
        mux_case_363170_reload,
        mux_case_465176_reload,
        mux_case_068182_reload,
        mux_case_170188_reload,
        mux_case_272194_reload,
        mux_case_374200_reload,
        mux_case_476206_reload,
        mux_case_079212_reload,
        mux_case_181218_reload,
        mux_case_283224_reload,
        mux_case_385230_reload,
        mux_case_487236_reload,
        acc3_2_out,
        acc3_2_out_ap_vld,
        grp_fu_1043_p_din0,
        grp_fu_1043_p_din1,
        grp_fu_1043_p_opcode,
        grp_fu_1043_p_dout0,
        grp_fu_1043_p_ce,
        grp_fu_1047_p_din0,
        grp_fu_1047_p_din1,
        grp_fu_1047_p_dout0,
        grp_fu_1047_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] acc3;
input  [8:0] zext_ln176_3;
input  [8:0] h0_cast;
input  [8:0] zext_ln173;
input  [8:0] sub60_cast;
input  [12:0] add_ln204;
input  [8:0] zext_ln180_1;
input  [7:0] w0_cast5;
input  [8:0] zext_ln174;
input  [8:0] zext_ln176;
output  [17:0] conv2_buf_address0;
output   conv2_buf_ce0;
input  [31:0] conv2_buf_q0;
input  [31:0] mux_case_091_reload;
input  [31:0] mux_case_197_reload;
input  [31:0] mux_case_2103_reload;
input  [31:0] mux_case_3109_reload;
input  [31:0] mux_case_4115_reload;
input  [31:0] mux_case_046122_reload;
input  [31:0] mux_case_148128_reload;
input  [31:0] mux_case_250134_reload;
input  [31:0] mux_case_352140_reload;
input  [31:0] mux_case_454146_reload;
input  [31:0] mux_case_057152_reload;
input  [31:0] mux_case_159158_reload;
input  [31:0] mux_case_261164_reload;
input  [31:0] mux_case_363170_reload;
input  [31:0] mux_case_465176_reload;
input  [31:0] mux_case_068182_reload;
input  [31:0] mux_case_170188_reload;
input  [31:0] mux_case_272194_reload;
input  [31:0] mux_case_374200_reload;
input  [31:0] mux_case_476206_reload;
input  [31:0] mux_case_079212_reload;
input  [31:0] mux_case_181218_reload;
input  [31:0] mux_case_283224_reload;
input  [31:0] mux_case_385230_reload;
input  [31:0] mux_case_487236_reload;
output  [31:0] acc3_2_out;
output   acc3_2_out_ap_vld;
output  [31:0] grp_fu_1043_p_din0;
output  [31:0] grp_fu_1043_p_din1;
output  [1:0] grp_fu_1043_p_opcode;
input  [31:0] grp_fu_1043_p_dout0;
output   grp_fu_1043_p_ce;
output  [31:0] grp_fu_1047_p_din0;
output  [31:0] grp_fu_1047_p_din1;
input  [31:0] grp_fu_1047_p_dout0;
output   grp_fu_1047_p_ce;

reg ap_idle;
reg conv2_buf_ce0;
reg acc3_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln192_reg_1109;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln192_fu_594_p2;
wire   [17:0] add_ln204_3_fu_925_p2;
reg   [17:0] add_ln204_3_reg_1113;
wire   [31:0] a_assign_fu_1011_p7;
reg   [31:0] a_assign_reg_1118;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] c2_reg_1128;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln204_fu_1048_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] acc3_2_fu_156;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [2:0] kx_fu_160;
wire   [2:0] add_ln193_fu_1027_p2;
reg   [2:0] ap_sig_allocacmp_kx_load;
reg   [2:0] ky_1_fu_164;
wire   [2:0] select_ln192_fu_795_p3;
reg   [2:0] ap_sig_allocacmp_ky;
reg   [4:0] indvar_flatten24_fu_168;
wire   [4:0] add_ln192_1_fu_600_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten24_load;
reg   [31:0] p_2_fu_172;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage3_01001;
wire   [2:0] tmp2_fu_476_p2;
wire  signed [10:0] tmp2_cast_fu_482_p1;
wire   [10:0] zext_ln176_3_cast_fu_442_p1;
wire   [10:0] empty_fu_486_p2;
wire   [0:0] tmp_13_fu_506_p3;
wire   [0:0] tmp_12_fu_492_p3;
wire   [0:0] cmp1_i_fu_500_p2;
wire   [0:0] empty_23_fu_522_p2;
wire   [10:0] p_cast_cast_fu_514_p3;
wire   [10:0] gy_fu_528_p3;
wire   [10:0] h0_cast_cast_fu_438_p1;
wire   [10:0] sub53_fu_536_p2;
wire   [9:0] empty_24_fu_542_p1;
wire   [10:0] yi_fu_546_p2;
wire   [10:0] zext_ln173_cast_fu_434_p1;
wire   [0:0] slt_fu_566_p2;
wire   [0:0] rev72_fu_572_p2;
wire   [9:0] sub60_cast_cast_fu_430_p1;
wire   [9:0] yi_cast_fu_552_p2;
wire   [0:0] tmp_14_fu_558_p3;
wire   [9:0] yi_2_fu_578_p3;
wire   [0:0] icmp_ln193_fu_615_p2;
wire   [2:0] tmp2_mid1_fu_629_p2;
wire  signed [10:0] tmp2_cast_mid1_fu_635_p1;
wire   [10:0] p_mid1_fu_639_p2;
wire   [0:0] tmp_16_fu_659_p3;
wire   [0:0] tmp_15_fu_645_p3;
wire   [0:0] cmp1_i_mid1_fu_653_p2;
wire   [0:0] p_mid120_fu_675_p2;
wire   [10:0] p_mid118_cast_cast_fu_667_p3;
wire   [10:0] gy_mid1_fu_681_p3;
wire   [10:0] sub53_mid1_fu_689_p2;
wire   [9:0] empty_25_fu_695_p1;
wire   [10:0] yi_mid1_fu_699_p2;
wire   [0:0] slt73_fu_719_p2;
wire   [0:0] rev74_fu_725_p2;
wire   [9:0] yi_cast_mid1_fu_705_p2;
wire   [0:0] tmp_17_fu_711_p3;
wire   [9:0] yi_2_mid1_fu_731_p3;
wire   [9:0] yi_1_mid1_fu_739_p3;
wire   [9:0] yi_1_fu_586_p3;
wire   [9:0] select_ln180_1_fu_747_p3;
wire   [13:0] add_ln204_cast_fu_446_p1;
wire  signed [13:0] sext_ln204_fu_755_p1;
wire   [13:0] add_ln204_1_fu_759_p2;
wire   [11:0] trunc_ln204_fu_765_p1;
wire   [15:0] tmp_18_fu_777_p3;
wire   [17:0] p_shl5_fu_769_p3;
wire  signed [17:0] sext_ln204_1_fu_785_p1;
wire   [2:0] add_ln192_fu_609_p2;
wire   [2:0] select_ln180_fu_621_p3;
wire   [2:0] add_ln197_fu_803_p2;
wire  signed [9:0] sext_ln197_fu_809_p1;
wire   [9:0] zext_ln180_1_cast_fu_426_p1;
wire   [9:0] add_ln197_1_fu_813_p2;
wire   [0:0] tmp_20_fu_833_p3;
wire   [0:0] tmp_19_fu_819_p3;
wire   [0:0] icmp_ln26_fu_827_p2;
wire   [0:0] or_ln26_fu_849_p2;
wire   [9:0] select_ln26_fu_841_p3;
wire   [9:0] gx_fu_855_p3;
wire   [9:0] w0_cast5_cast_fu_422_p1;
wire  signed [9:0] sub_ln200_fu_863_p2;
wire  signed [10:0] sext_ln200_fu_869_p1;
wire   [10:0] xi_fu_873_p2;
wire   [10:0] zext_ln174_cast_fu_418_p1;
wire   [0:0] icmp_ln202_fu_893_p2;
wire   [0:0] xor_ln202_fu_899_p2;
wire   [9:0] zext_ln176_cast_fu_414_p1;
wire   [9:0] add_ln200_1_fu_879_p2;
wire   [0:0] tmp_21_fu_885_p3;
wire   [9:0] xi_1_fu_905_p3;
wire   [9:0] xi_2_fu_913_p3;
wire   [17:0] add_ln204_2_fu_789_p2;
wire  signed [17:0] sext_ln204_2_fu_921_p1;
wire   [31:0] tmp_fu_931_p7;
wire   [31:0] tmp_4_fu_947_p7;
wire   [31:0] tmp_5_fu_963_p7;
wire   [31:0] tmp_6_fu_979_p7;
wire   [31:0] tmp_7_fu_995_p7;
wire   [2:0] a_assign_fu_1011_p6;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U221(
    .din0(mux_case_091_reload),
    .din1(mux_case_197_reload),
    .din2(mux_case_2103_reload),
    .din3(mux_case_3109_reload),
    .din4(mux_case_4115_reload),
    .din5(select_ln180_fu_621_p3),
    .dout(tmp_fu_931_p7)
);

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U222(
    .din0(mux_case_046122_reload),
    .din1(mux_case_148128_reload),
    .din2(mux_case_250134_reload),
    .din3(mux_case_352140_reload),
    .din4(mux_case_454146_reload),
    .din5(select_ln180_fu_621_p3),
    .dout(tmp_4_fu_947_p7)
);

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U223(
    .din0(mux_case_057152_reload),
    .din1(mux_case_159158_reload),
    .din2(mux_case_261164_reload),
    .din3(mux_case_363170_reload),
    .din4(mux_case_465176_reload),
    .din5(select_ln180_fu_621_p3),
    .dout(tmp_5_fu_963_p7)
);

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U224(
    .din0(mux_case_068182_reload),
    .din1(mux_case_170188_reload),
    .din2(mux_case_272194_reload),
    .din3(mux_case_374200_reload),
    .din4(mux_case_476206_reload),
    .din5(select_ln180_fu_621_p3),
    .dout(tmp_6_fu_979_p7)
);

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U225(
    .din0(mux_case_079212_reload),
    .din1(mux_case_181218_reload),
    .din2(mux_case_283224_reload),
    .din3(mux_case_385230_reload),
    .din4(mux_case_487236_reload),
    .din5(select_ln180_fu_621_p3),
    .dout(tmp_7_fu_995_p7)
);

srcnn_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U226(
    .din0(tmp_fu_931_p7),
    .din1(tmp_4_fu_947_p7),
    .din2(tmp_5_fu_963_p7),
    .din3(tmp_6_fu_979_p7),
    .din4(tmp_7_fu_995_p7),
    .din5(a_assign_fu_1011_p6),
    .dout(a_assign_fu_1011_p7)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        acc3_2_fu_156 <= acc3;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        acc3_2_fu_156 <= grp_fu_1043_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln192_fu_594_p2 == 1'd0))) begin
            indvar_flatten24_fu_168 <= add_ln192_1_fu_600_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten24_fu_168 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln192_fu_594_p2 == 1'd0))) begin
            kx_fu_160 <= add_ln193_fu_1027_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            kx_fu_160 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln192_fu_594_p2 == 1'd0))) begin
            ky_1_fu_164 <= select_ln192_fu_795_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ky_1_fu_164 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln192_fu_594_p2 == 1'd0))) begin
        a_assign_reg_1118 <= a_assign_fu_1011_p7;
        add_ln204_3_reg_1113 <= add_ln204_3_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_reg_1109 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        c2_reg_1128 <= conv2_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln192_reg_1109 <= icmp_ln192_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_reg_1109 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_2_fu_172 <= grp_fu_1047_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln192_reg_1109 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        acc3_2_out_ap_vld = 1'b1;
    end else begin
        acc3_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln192_reg_1109 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten24_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten24_load = indvar_flatten24_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_kx_load = 3'd0;
    end else begin
        ap_sig_allocacmp_kx_load = kx_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ky = 3'd0;
    end else begin
        ap_sig_allocacmp_ky = ky_1_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv2_buf_ce0 = 1'b1;
    end else begin
        conv2_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_assign_fu_1011_p6 = ((icmp_ln193_fu_615_p2[0:0] == 1'b1) ? add_ln192_fu_609_p2 : ap_sig_allocacmp_ky);

assign acc3_2_out = acc3_2_fu_156;

assign add_ln192_1_fu_600_p2 = (ap_sig_allocacmp_indvar_flatten24_load + 5'd1);

assign add_ln192_fu_609_p2 = (ap_sig_allocacmp_ky + 3'd1);

assign add_ln193_fu_1027_p2 = (select_ln180_fu_621_p3 + 3'd1);

assign add_ln197_1_fu_813_p2 = ($signed(sext_ln197_fu_809_p1) + $signed(zext_ln180_1_cast_fu_426_p1));

assign add_ln197_fu_803_p2 = ($signed(select_ln180_fu_621_p3) + $signed(3'd6));

assign add_ln200_1_fu_879_p2 = ($signed(sub_ln200_fu_863_p2) + $signed(10'd2));

assign add_ln204_1_fu_759_p2 = ($signed(add_ln204_cast_fu_446_p1) + $signed(sext_ln204_fu_755_p1));

assign add_ln204_2_fu_789_p2 = ($signed(p_shl5_fu_769_p3) + $signed(sext_ln204_1_fu_785_p1));

assign add_ln204_3_fu_925_p2 = ($signed(add_ln204_2_fu_789_p2) + $signed(sext_ln204_2_fu_921_p1));

assign add_ln204_cast_fu_446_p1 = add_ln204;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign cmp1_i_fu_500_p2 = (($signed(empty_fu_486_p2) > $signed(11'd254)) ? 1'b1 : 1'b0);

assign cmp1_i_mid1_fu_653_p2 = (($signed(p_mid1_fu_639_p2) > $signed(11'd254)) ? 1'b1 : 1'b0);

assign conv2_buf_address0 = zext_ln204_fu_1048_p1;

assign empty_23_fu_522_p2 = (tmp_12_fu_492_p3 | cmp1_i_fu_500_p2);

assign empty_24_fu_542_p1 = sub53_fu_536_p2[9:0];

assign empty_25_fu_695_p1 = sub53_mid1_fu_689_p2[9:0];

assign empty_fu_486_p2 = ($signed(tmp2_cast_fu_482_p1) + $signed(zext_ln176_3_cast_fu_442_p1));

assign grp_fu_1043_p_ce = 1'b1;

assign grp_fu_1043_p_din0 = acc3_2_fu_156;

assign grp_fu_1043_p_din1 = p_2_fu_172;

assign grp_fu_1043_p_opcode = 2'd0;

assign grp_fu_1047_p_ce = 1'b1;

assign grp_fu_1047_p_din0 = a_assign_reg_1118;

assign grp_fu_1047_p_din1 = c2_reg_1128;

assign gx_fu_855_p3 = ((or_ln26_fu_849_p2[0:0] == 1'b1) ? select_ln26_fu_841_p3 : add_ln197_1_fu_813_p2);

assign gy_fu_528_p3 = ((empty_23_fu_522_p2[0:0] == 1'b1) ? p_cast_cast_fu_514_p3 : empty_fu_486_p2);

assign gy_mid1_fu_681_p3 = ((p_mid120_fu_675_p2[0:0] == 1'b1) ? p_mid118_cast_cast_fu_667_p3 : p_mid1_fu_639_p2);

assign h0_cast_cast_fu_438_p1 = h0_cast;

assign icmp_ln192_fu_594_p2 = ((ap_sig_allocacmp_indvar_flatten24_load == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_615_p2 = ((ap_sig_allocacmp_kx_load == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_893_p2 = (($signed(xi_fu_873_p2) < $signed(zext_ln174_cast_fu_418_p1)) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_827_p2 = (($signed(add_ln197_1_fu_813_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign or_ln26_fu_849_p2 = (tmp_19_fu_819_p3 | icmp_ln26_fu_827_p2);

assign p_cast_cast_fu_514_p3 = ((tmp_13_fu_506_p3[0:0] == 1'b1) ? 11'd0 : 11'd254);

assign p_mid118_cast_cast_fu_667_p3 = ((tmp_16_fu_659_p3[0:0] == 1'b1) ? 11'd0 : 11'd254);

assign p_mid120_fu_675_p2 = (tmp_15_fu_645_p3 | cmp1_i_mid1_fu_653_p2);

assign p_mid1_fu_639_p2 = ($signed(tmp2_cast_mid1_fu_635_p1) + $signed(zext_ln176_3_cast_fu_442_p1));

assign p_shl5_fu_769_p3 = {{trunc_ln204_fu_765_p1}, {6'd0}};

assign rev72_fu_572_p2 = (slt_fu_566_p2 ^ 1'd1);

assign rev74_fu_725_p2 = (slt73_fu_719_p2 ^ 1'd1);

assign select_ln180_1_fu_747_p3 = ((icmp_ln193_fu_615_p2[0:0] == 1'b1) ? yi_1_mid1_fu_739_p3 : yi_1_fu_586_p3);

assign select_ln180_fu_621_p3 = ((icmp_ln193_fu_615_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_kx_load);

assign select_ln192_fu_795_p3 = ((icmp_ln193_fu_615_p2[0:0] == 1'b1) ? add_ln192_fu_609_p2 : ap_sig_allocacmp_ky);

assign select_ln26_fu_841_p3 = ((tmp_20_fu_833_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign sext_ln197_fu_809_p1 = $signed(add_ln197_fu_803_p2);

assign sext_ln200_fu_869_p1 = sub_ln200_fu_863_p2;

assign sext_ln204_1_fu_785_p1 = $signed(tmp_18_fu_777_p3);

assign sext_ln204_2_fu_921_p1 = $signed(xi_2_fu_913_p3);

assign sext_ln204_fu_755_p1 = $signed(select_ln180_1_fu_747_p3);

assign slt73_fu_719_p2 = (($signed(yi_mid1_fu_699_p2) < $signed(zext_ln173_cast_fu_434_p1)) ? 1'b1 : 1'b0);

assign slt_fu_566_p2 = (($signed(yi_fu_546_p2) < $signed(zext_ln173_cast_fu_434_p1)) ? 1'b1 : 1'b0);

assign sub53_fu_536_p2 = (gy_fu_528_p3 - h0_cast_cast_fu_438_p1);

assign sub53_mid1_fu_689_p2 = (gy_mid1_fu_681_p3 - h0_cast_cast_fu_438_p1);

assign sub60_cast_cast_fu_430_p1 = sub60_cast;

assign sub_ln200_fu_863_p2 = (gx_fu_855_p3 - w0_cast5_cast_fu_422_p1);

assign tmp2_cast_fu_482_p1 = $signed(tmp2_fu_476_p2);

assign tmp2_cast_mid1_fu_635_p1 = $signed(tmp2_mid1_fu_629_p2);

assign tmp2_fu_476_p2 = ($signed(ap_sig_allocacmp_ky) + $signed(3'd6));

assign tmp2_mid1_fu_629_p2 = ($signed(ap_sig_allocacmp_ky) + $signed(3'd7));

assign tmp_12_fu_492_p3 = empty_fu_486_p2[32'd10];

assign tmp_13_fu_506_p3 = empty_fu_486_p2[32'd10];

assign tmp_14_fu_558_p3 = yi_fu_546_p2[32'd10];

assign tmp_15_fu_645_p3 = p_mid1_fu_639_p2[32'd10];

assign tmp_16_fu_659_p3 = p_mid1_fu_639_p2[32'd10];

assign tmp_17_fu_711_p3 = yi_mid1_fu_699_p2[32'd10];

assign tmp_18_fu_777_p3 = {{add_ln204_1_fu_759_p2}, {2'd0}};

assign tmp_19_fu_819_p3 = add_ln197_1_fu_813_p2[32'd9];

assign tmp_20_fu_833_p3 = add_ln197_1_fu_813_p2[32'd9];

assign tmp_21_fu_885_p3 = xi_fu_873_p2[32'd10];

assign trunc_ln204_fu_765_p1 = add_ln204_1_fu_759_p2[11:0];

assign w0_cast5_cast_fu_422_p1 = w0_cast5;

assign xi_1_fu_905_p3 = ((xor_ln202_fu_899_p2[0:0] == 1'b1) ? zext_ln176_cast_fu_414_p1 : add_ln200_1_fu_879_p2);

assign xi_2_fu_913_p3 = ((tmp_21_fu_885_p3[0:0] == 1'b1) ? 10'd0 : xi_1_fu_905_p3);

assign xi_fu_873_p2 = ($signed(sext_ln200_fu_869_p1) + $signed(11'd2));

assign xor_ln202_fu_899_p2 = (icmp_ln202_fu_893_p2 ^ 1'd1);

assign yi_1_fu_586_p3 = ((tmp_14_fu_558_p3[0:0] == 1'b1) ? 10'd0 : yi_2_fu_578_p3);

assign yi_1_mid1_fu_739_p3 = ((tmp_17_fu_711_p3[0:0] == 1'b1) ? 10'd0 : yi_2_mid1_fu_731_p3);

assign yi_2_fu_578_p3 = ((rev72_fu_572_p2[0:0] == 1'b1) ? sub60_cast_cast_fu_430_p1 : yi_cast_fu_552_p2);

assign yi_2_mid1_fu_731_p3 = ((rev74_fu_725_p2[0:0] == 1'b1) ? sub60_cast_cast_fu_430_p1 : yi_cast_mid1_fu_705_p2);

assign yi_cast_fu_552_p2 = (empty_24_fu_542_p1 + 10'd2);

assign yi_cast_mid1_fu_705_p2 = (empty_25_fu_695_p1 + 10'd2);

assign yi_fu_546_p2 = (sub53_fu_536_p2 + 11'd2);

assign yi_mid1_fu_699_p2 = (sub53_mid1_fu_689_p2 + 11'd2);

assign zext_ln173_cast_fu_434_p1 = zext_ln173;

assign zext_ln174_cast_fu_418_p1 = zext_ln174;

assign zext_ln176_3_cast_fu_442_p1 = zext_ln176_3;

assign zext_ln176_cast_fu_414_p1 = zext_ln176;

assign zext_ln180_1_cast_fu_426_p1 = zext_ln180_1;

assign zext_ln204_fu_1048_p1 = add_ln204_3_reg_1113;

endmodule //srcnn_conv3_from_precomputed_conv2_Pipeline_VITIS_LOOP_192_7_VITIS_LOOP_193_8
