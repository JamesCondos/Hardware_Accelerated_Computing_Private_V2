// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_ftmap_address0,
        input_ftmap_ce0,
        input_ftmap_q0,
        conv1_weights_address0,
        conv1_weights_ce0,
        conv1_weights_q0,
        conv1_weights_address1,
        conv1_weights_ce1,
        conv1_weights_q1,
        conv1_biases_address0,
        conv1_biases_ce0,
        conv1_biases_q0,
        layer1_output_address0,
        layer1_output_ce0,
        layer1_output_we0,
        layer1_output_d0,
        grp_fu_97_p_din0,
        grp_fu_97_p_din1,
        grp_fu_97_p_opcode,
        grp_fu_97_p_dout0,
        grp_fu_97_p_ce,
        grp_fu_101_p_din0,
        grp_fu_101_p_din1,
        grp_fu_101_p_dout0,
        grp_fu_101_p_ce,
        grp_fu_105_p_din0,
        grp_fu_105_p_dout0,
        grp_fu_105_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 36'd1;
parameter    ap_ST_fsm_pp0_stage1 = 36'd2;
parameter    ap_ST_fsm_pp0_stage2 = 36'd4;
parameter    ap_ST_fsm_pp0_stage3 = 36'd8;
parameter    ap_ST_fsm_pp0_stage4 = 36'd16;
parameter    ap_ST_fsm_pp0_stage5 = 36'd32;
parameter    ap_ST_fsm_pp0_stage6 = 36'd64;
parameter    ap_ST_fsm_pp0_stage7 = 36'd128;
parameter    ap_ST_fsm_pp0_stage8 = 36'd256;
parameter    ap_ST_fsm_pp0_stage9 = 36'd512;
parameter    ap_ST_fsm_pp0_stage10 = 36'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 36'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 36'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 36'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 36'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 36'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 36'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 36'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 36'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 36'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 36'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 36'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 36'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 36'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 36'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 36'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 36'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 36'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 36'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 36'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 36'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 36'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 36'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 36'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 36'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] input_ftmap_address0;
output   input_ftmap_ce0;
input  [31:0] input_ftmap_q0;
output  [12:0] conv1_weights_address0;
output   conv1_weights_ce0;
input  [31:0] conv1_weights_q0;
output  [12:0] conv1_weights_address1;
output   conv1_weights_ce1;
input  [31:0] conv1_weights_q1;
output  [5:0] conv1_biases_address0;
output   conv1_biases_ce0;
input  [31:0] conv1_biases_q0;
output  [21:0] layer1_output_address0;
output   layer1_output_ce0;
output   layer1_output_we0;
output  [31:0] layer1_output_d0;
output  [31:0] grp_fu_97_p_din0;
output  [31:0] grp_fu_97_p_din1;
output  [1:0] grp_fu_97_p_opcode;
input  [31:0] grp_fu_97_p_dout0;
output   grp_fu_97_p_ce;
output  [31:0] grp_fu_101_p_din0;
output  [31:0] grp_fu_101_p_din1;
input  [31:0] grp_fu_101_p_dout0;
output   grp_fu_101_p_ce;
output  [31:0] grp_fu_105_p_din0;
input  [63:0] grp_fu_105_p_dout0;
output   grp_fu_105_p_ce;

reg ap_idle;
reg[15:0] input_ftmap_address0;
reg input_ftmap_ce0;
reg[12:0] conv1_weights_address0;
reg conv1_weights_ce0;
reg[12:0] conv1_weights_address1;
reg conv1_weights_ce1;
reg conv1_biases_ce0;
reg layer1_output_ce0;
reg layer1_output_we0;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state55_pp0_stage19_iter1;
wire    ap_block_pp0_stage19_subdone;
reg   [0:0] icmp_ln14_reg_2941;
reg    ap_condition_exit_pp0_iter0_stage19;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
reg   [63:0] reg_404;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state41_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state48_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state49_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state50_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state56_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_11001;
wire   [63:0] grp_generic_fmax_double_s_fu_381_ap_return;
reg   [63:0] reg_409;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state42_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state43_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state44_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state45_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state46_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
wire   [63:0] grp_generic_fmin_double_s_fu_386_ap_return;
reg   [63:0] reg_414;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state47_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
reg   [63:0] reg_418;
reg   [31:0] reg_422;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state52_pp0_stage16_iter1;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state54_pp0_stage18_iter1;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
reg   [31:0] reg_426;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state53_pp0_stage17_iter1;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
reg   [31:0] reg_431;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state51_pp0_stage15_iter1;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
reg   [31:0] reg_436;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state38_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] reg_441;
wire    ap_block_pp0_stage19_11001;
reg   [31:0] reg_446;
reg   [0:0] ifzero_reg_3613;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state37_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [11:0] indvar_flatten_load_reg_2921;
reg   [7:0] out_feat_y_2_reg_2926;
reg   [25:0] indvar_flatten48_load_reg_2931;
wire   [31:0] zext_ln39_fu_503_p1;
wire   [0:0] icmp_ln14_fu_508_p2;
wire   [0:0] icmp_ln16_fu_529_p2;
reg   [0:0] icmp_ln16_reg_2945;
wire   [6:0] select_ln14_1_fu_535_p3;
reg   [6:0] select_ln14_1_reg_2951;
wire   [12:0] mul_ln42_fu_547_p2;
reg   [12:0] mul_ln42_reg_2958;
wire   [0:0] and_ln14_1_fu_583_p2;
reg   [0:0] and_ln14_1_reg_2969;
wire   [0:0] or_ln16_fu_589_p2;
reg   [0:0] or_ln16_reg_2975;
wire   [0:0] or_ln18_15_fu_633_p2;
reg   [0:0] or_ln18_15_reg_2980;
wire   [3:0] select_ln18_12_fu_639_p3;
reg   [3:0] select_ln18_12_reg_2985;
wire   [7:0] select_ln18_16_fu_647_p3;
reg   [7:0] select_ln18_16_reg_2991;
wire   [12:0] zext_ln42_1_fu_655_p1;
reg   [12:0] zext_ln42_1_reg_2997;
wire   [7:0] select_ln14_fu_710_p3;
reg   [7:0] select_ln14_reg_3018;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state39_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] add_ln16_fu_726_p2;
reg   [7:0] add_ln16_reg_3023;
wire  signed [31:0] sext_ln1432_4_fu_774_p1;
reg   [31:0] conv1_weights_load_reg_3044;
reg   [31:0] conv1_weights_load_1_reg_3049;
wire   [7:0] select_ln16_1_fu_789_p3;
reg   [7:0] select_ln16_1_reg_3054;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state40_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [8:0] zext_ln1432_fu_794_p1;
reg   [8:0] zext_ln1432_reg_3060;
wire  signed [31:0] sext_ln1432_5_fu_824_p1;
reg   [31:0] conv1_weights_load_2_reg_3085;
reg   [31:0] conv1_weights_load_3_reg_3090;
wire   [12:0] add_ln42_16_fu_874_p2;
reg   [12:0] add_ln42_16_reg_3105;
wire  signed [31:0] sext_ln1432_6_fu_884_p1;
reg   [31:0] conv1_weights_load_4_reg_3115;
reg   [31:0] conv1_weights_load_5_reg_3120;
wire  signed [31:0] sext_ln1432_7_fu_903_p1;
reg   [31:0] conv1_weights_load_6_reg_3135;
reg   [31:0] conv1_weights_load_7_reg_3140;
reg   [0:0] xs_sign_reg_3145;
wire   [136:0] zext_ln15_fu_944_p1;
reg   [136:0] zext_ln15_reg_3150;
wire   [0:0] tmp_40_fu_958_p3;
reg   [0:0] tmp_40_reg_3155;
wire   [136:0] zext_ln18_fu_988_p1;
reg   [136:0] zext_ln18_reg_3160;
reg   [0:0] tmp_41_reg_3165;
wire  signed [31:0] sext_ln1432_8_fu_1011_p1;
reg   [31:0] conv1_weights_load_8_reg_3175;
wire   [31:0] zext_ln39_1_fu_1016_p1;
wire   [15:0] result_fu_1050_p3;
reg   [15:0] result_reg_3185;
reg   [0:0] tmp_42_reg_3198;
wire   [136:0] zext_ln515_11_fu_1093_p1;
reg   [136:0] zext_ln515_11_reg_3203;
wire   [0:0] tmp_43_fu_1107_p3;
reg   [0:0] tmp_43_reg_3208;
wire   [136:0] zext_ln18_6_fu_1137_p1;
reg   [136:0] zext_ln18_6_reg_3213;
reg   [0:0] tmp_44_reg_3218;
wire   [31:0] zext_ln1432_3_fu_1160_p1;
wire   [31:0] zext_ln1432_4_fu_1235_p1;
wire   [63:0] select_ln16_2_fu_1247_p3;
reg   [63:0] select_ln16_2_reg_3238;
reg   [0:0] tmp_45_reg_3243;
wire   [136:0] zext_ln515_13_fu_1290_p1;
reg   [136:0] zext_ln515_13_reg_3248;
wire   [0:0] tmp_46_fu_1304_p3;
reg   [0:0] tmp_46_reg_3253;
wire   [136:0] zext_ln18_7_fu_1334_p1;
reg   [136:0] zext_ln18_7_reg_3258;
reg   [0:0] tmp_47_reg_3263;
wire   [31:0] zext_ln1432_5_fu_1357_p1;
wire   [31:0] bitcast_ln42_fu_1362_p1;
wire   [31:0] bitcast_ln42_1_fu_1366_p1;
reg   [63:0] x_assign_19_4_reg_3288;
wire   [31:0] zext_ln1432_6_fu_1441_p1;
reg   [0:0] tmp_48_reg_3298;
wire   [136:0] zext_ln515_15_fu_1482_p1;
reg   [136:0] zext_ln515_15_reg_3303;
wire   [0:0] tmp_49_fu_1496_p3;
reg   [0:0] tmp_49_reg_3308;
wire   [136:0] zext_ln18_8_fu_1526_p1;
reg   [136:0] zext_ln18_8_reg_3313;
reg   [0:0] tmp_50_reg_3318;
wire   [31:0] bitcast_ln42_9_fu_1544_p1;
wire   [31:0] bitcast_ln42_10_fu_1548_p1;
reg   [63:0] x_assign_19_6_reg_3338;
wire   [31:0] select_ln18_14_fu_1621_p3;
reg   [0:0] tmp_51_reg_3348;
wire   [136:0] zext_ln515_17_fu_1665_p1;
reg   [136:0] zext_ln515_17_reg_3353;
wire   [0:0] tmp_52_fu_1679_p3;
reg   [0:0] tmp_52_reg_3358;
wire   [136:0] zext_ln18_9_fu_1709_p1;
reg   [136:0] zext_ln18_9_reg_3363;
reg   [0:0] tmp_53_reg_3368;
wire   [31:0] bitcast_ln42_2_fu_1727_p1;
wire   [31:0] bitcast_ln42_11_fu_1731_p1;
reg   [63:0] x_assign_19_8_reg_3388;
reg   [0:0] tmp_54_reg_3393;
wire   [136:0] zext_ln515_19_fu_1836_p1;
reg   [136:0] zext_ln515_19_reg_3398;
wire   [0:0] tmp_55_fu_1850_p3;
reg   [0:0] tmp_55_reg_3403;
wire   [136:0] zext_ln18_10_fu_1880_p1;
reg   [136:0] zext_ln18_10_reg_3408;
reg   [0:0] tmp_56_reg_3413;
wire   [31:0] bitcast_ln42_3_fu_1898_p1;
wire   [31:0] bitcast_ln42_12_fu_1902_p1;
reg   [0:0] tmp_57_reg_3433;
wire   [136:0] zext_ln515_21_fu_2008_p1;
reg   [136:0] zext_ln515_21_reg_3438;
wire   [0:0] tmp_58_fu_2022_p3;
reg   [0:0] tmp_58_reg_3443;
wire   [136:0] zext_ln18_11_fu_2052_p1;
reg   [136:0] zext_ln18_11_reg_3448;
reg   [0:0] tmp_59_reg_3453;
wire   [31:0] bitcast_ln42_4_fu_2070_p1;
wire   [31:0] bitcast_ln42_13_fu_2074_p1;
reg   [0:0] tmp_60_reg_3473;
wire   [136:0] zext_ln515_23_fu_2179_p1;
reg   [136:0] zext_ln515_23_reg_3478;
wire   [0:0] tmp_61_fu_2193_p3;
reg   [0:0] tmp_61_reg_3483;
wire   [136:0] zext_ln18_12_fu_2223_p1;
reg   [136:0] zext_ln18_12_reg_3488;
reg   [0:0] tmp_62_reg_3493;
wire   [31:0] bitcast_ln42_5_fu_2241_p1;
wire   [31:0] bitcast_ln42_14_fu_2245_p1;
reg   [0:0] tmp_63_reg_3513;
wire   [136:0] zext_ln515_25_fu_2351_p1;
reg   [136:0] zext_ln515_25_reg_3518;
wire   [0:0] tmp_64_fu_2365_p3;
reg   [0:0] tmp_64_reg_3523;
wire   [136:0] zext_ln18_13_fu_2395_p1;
reg   [136:0] zext_ln18_13_reg_3528;
reg   [0:0] tmp_65_reg_3533;
reg   [31:0] mul_5_reg_3538;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire   [31:0] bitcast_ln42_6_fu_2413_p1;
wire   [31:0] bitcast_ln42_15_fu_2417_p1;
reg   [0:0] tmp_66_reg_3558;
wire   [136:0] zext_ln515_27_fu_2522_p1;
reg   [136:0] zext_ln515_27_reg_3563;
wire   [0:0] tmp_67_fu_2536_p3;
reg   [0:0] tmp_67_reg_3568;
wire   [136:0] zext_ln18_14_fu_2566_p1;
reg   [136:0] zext_ln18_14_reg_3573;
reg   [0:0] tmp_68_reg_3578;
wire   [31:0] bitcast_ln42_7_fu_2584_p1;
wire   [31:0] bitcast_ln42_16_fu_2588_p1;
reg   [31:0] mul_7_reg_3598;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_11001;
wire   [31:0] bitcast_ln42_8_fu_2658_p1;
wire   [31:0] bitcast_ln42_17_fu_2662_p1;
wire   [0:0] ifzero_fu_2672_p2;
wire   [21:0] add_ln47_1_fu_2762_p2;
reg   [21:0] add_ln47_1_reg_3622;
reg   [31:0] conv1_biases_load_reg_3627;
wire   [31:0] bitcast_ln14_fu_2768_p1;
reg   [31:0] bitcast_ln14_reg_3632;
reg   [21:0] layer1_output_addr_reg_3637;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_generic_fmax_double_s_fu_381_ap_ready;
reg   [63:0] grp_generic_fmax_double_s_fu_381_x;
wire    grp_generic_fmin_double_s_fu_386_ap_ready;
reg   [63:0] grp_generic_fmin_double_s_fu_386_x;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln42_2_fu_665_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln42_3_fu_676_p1;
wire   [63:0] zext_ln42_4_fu_740_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln42_5_fu_750_p1;
wire   [63:0] zext_ln42_6_fu_803_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln42_7_fu_813_p1;
wire   [63:0] zext_ln42_8_fu_859_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln42_9_fu_869_p1;
wire   [63:0] zext_ln42_10_fu_894_p1;
wire   [63:0] zext_ln42_12_fu_1225_p1;
wire   [63:0] zext_ln42_14_fu_1431_p1;
wire   [63:0] zext_ln42_16_fu_1613_p1;
wire   [63:0] zext_ln42_18_fu_1796_p1;
wire   [63:0] zext_ln42_20_fu_1967_p1;
wire    ap_block_pp0_stage17;
wire   [63:0] zext_ln42_22_fu_2139_p1;
wire    ap_block_pp0_stage19;
wire   [63:0] zext_ln42_24_fu_2310_p1;
wire    ap_block_pp0_stage21;
wire   [63:0] zext_ln42_26_fu_2482_p1;
wire    ap_block_pp0_stage23;
wire   [63:0] zext_ln42_28_fu_2653_p1;
wire    ap_block_pp0_stage25;
wire   [63:0] zext_ln14_fu_2700_p1;
wire   [63:0] zext_ln47_4_fu_2771_p1;
reg   [31:0] convolution_fu_166;
wire    ap_loop_init;
reg   [3:0] kernel_x_fu_170;
wire   [3:0] add_ln31_fu_2667_p2;
reg   [7:0] out_feat_x_fu_174;
reg   [11:0] indvar_flatten_fu_178;
wire   [11:0] select_ln18_35_fu_2683_p3;
reg   [7:0] out_feat_y_fu_182;
reg   [19:0] indvar_flatten15_fu_186;
wire   [19:0] select_ln16_3_fu_687_p3;
reg   [6:0] out_feat_fu_190;
reg   [25:0] indvar_flatten48_fu_194;
wire   [25:0] add_ln14_1_fu_834_p2;
wire    ap_block_pp0_stage0;
reg   [31:0] grp_fu_392_p0;
reg   [31:0] grp_fu_392_p1;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
reg   [31:0] grp_fu_396_p0;
reg   [31:0] grp_fu_396_p1;
wire    ap_block_pp0_stage27;
reg   [31:0] grp_fu_400_p0;
wire   [6:0] add_ln14_fu_523_p2;
wire   [6:0] mul_ln42_fu_547_p0;
wire   [7:0] mul_ln42_fu_547_p1;
wire   [0:0] icmp_ln31_fu_565_p2;
wire   [0:0] xor_ln14_fu_559_p2;
wire   [0:0] icmp_ln18_fu_577_p2;
wire   [0:0] xor_ln16_fu_603_p2;
wire   [0:0] and_ln14_fu_571_p2;
wire   [0:0] or_ln16_1_fu_609_p2;
wire   [7:0] select_ln16_fu_595_p3;
wire   [0:0] and_ln16_fu_615_p2;
wire   [0:0] or_ln18_fu_627_p2;
wire   [7:0] add_ln18_fu_621_p2;
wire   [12:0] add_ln42_8_fu_659_p2;
wire   [12:0] add_ln42_fu_553_p2;
wire   [12:0] add_ln42_9_fu_670_p2;
wire   [19:0] add_ln16_1_fu_681_p2;
wire   [12:0] add_ln42_1_fu_716_p2;
wire   [12:0] add_ln42_10_fu_735_p2;
wire   [12:0] add_ln42_2_fu_721_p2;
wire   [12:0] add_ln42_11_fu_745_p2;
wire   [8:0] select_ln18_18_cast_fu_732_p1;
wire   [8:0] add_ln1432_13_fu_758_p2;
wire  signed [9:0] sext_ln1432_fu_764_p1;
wire   [9:0] zext_ln1432_2_fu_755_p1;
wire   [9:0] add_ln1432_fu_768_p2;
wire   [12:0] add_ln42_3_fu_779_p2;
wire   [12:0] add_ln42_12_fu_798_p2;
wire   [12:0] add_ln42_4_fu_784_p2;
wire   [12:0] add_ln42_13_fu_808_p2;
wire   [8:0] add_ln1432_5_fu_818_p2;
wire   [12:0] add_ln42_5_fu_839_p2;
wire   [12:0] add_ln42_14_fu_854_p2;
wire   [12:0] add_ln42_6_fu_844_p2;
wire   [12:0] add_ln42_15_fu_864_p2;
wire   [12:0] add_ln42_7_fu_849_p2;
wire   [8:0] add_ln1432_6_fu_879_p2;
wire   [8:0] add_ln1432_7_fu_898_p2;
wire   [63:0] data_fu_908_p1;
wire   [51:0] trunc_ln534_fu_930_p1;
wire   [53:0] mantissa_fu_934_p4;
wire   [10:0] xs_exp_fu_920_p4;
wire   [11:0] zext_ln515_fu_948_p1;
wire   [11:0] add_ln515_fu_952_p2;
wire   [10:0] sub_ln18_fu_966_p2;
wire  signed [11:0] sext_ln18_fu_972_p1;
wire   [11:0] select_ln18_fu_976_p3;
wire  signed [31:0] sext_ln18_12_fu_984_p1;
wire   [136:0] lshr_ln18_fu_992_p2;
wire   [8:0] add_ln1432_8_fu_1006_p2;
wire   [136:0] shl_ln18_fu_1020_p2;
wire   [15:0] zext_ln21_fu_1024_p1;
wire   [15:0] tmp_s_fu_1027_p4;
wire   [15:0] val_fu_1037_p3;
wire   [15:0] result_10_fu_1044_p2;
wire   [63:0] bitcast_ln488_fu_1057_p1;
wire   [51:0] trunc_ln534_8_fu_1079_p1;
wire   [53:0] zext_ln515_11_cast_fu_1083_p4;
wire   [10:0] xs_exp_s_fu_1069_p4;
wire   [11:0] zext_ln515_12_fu_1097_p1;
wire   [11:0] add_ln515_6_fu_1101_p2;
wire   [10:0] sub_ln18_6_fu_1115_p2;
wire  signed [11:0] sext_ln18_13_fu_1121_p1;
wire   [11:0] select_ln18_13_fu_1125_p3;
wire  signed [31:0] sext_ln18_14_fu_1133_p1;
wire   [136:0] lshr_ln18_6_fu_1141_p2;
wire   [7:0] add_ln1432_9_fu_1155_p2;
wire   [136:0] shl_ln18_6_fu_1165_p2;
wire   [7:0] zext_ln21_6_fu_1169_p1;
wire   [7:0] tmp_15_fu_1172_p4;
wire   [7:0] select_ln18_20_fu_1182_p3;
wire   [7:0] sub_ln59_fu_1189_p2;
wire   [7:0] select_ln59_fu_1195_p3;
wire   [15:0] tmp_16_fu_1206_p3;
wire   [15:0] zext_ln42_11_fu_1202_p1;
wire   [15:0] sub_ln42_fu_1214_p2;
wire   [15:0] add_ln42_17_fu_1220_p2;
wire   [8:0] add_ln1432_10_fu_1230_p2;
wire   [63:0] select_ln14_2_fu_1240_p3;
wire   [63:0] bitcast_ln488_3_fu_1254_p1;
wire   [51:0] trunc_ln534_9_fu_1276_p1;
wire   [53:0] zext_ln515_13_cast_fu_1280_p4;
wire   [10:0] xs_exp_3_s_fu_1266_p4;
wire   [11:0] zext_ln515_14_fu_1294_p1;
wire   [11:0] add_ln515_7_fu_1298_p2;
wire   [10:0] sub_ln18_7_fu_1312_p2;
wire  signed [11:0] sext_ln18_15_fu_1318_p1;
wire   [11:0] select_ln18_15_fu_1322_p3;
wire  signed [31:0] sext_ln18_16_fu_1330_p1;
wire   [136:0] lshr_ln18_7_fu_1338_p2;
wire   [8:0] add_ln1432_11_fu_1352_p2;
wire   [136:0] shl_ln18_7_fu_1371_p2;
wire   [7:0] zext_ln21_7_fu_1375_p1;
wire   [7:0] tmp_17_fu_1378_p4;
wire   [7:0] select_ln18_22_fu_1388_p3;
wire   [7:0] sub_ln59_5_fu_1395_p2;
wire   [7:0] select_ln59_5_fu_1401_p3;
wire   [15:0] tmp_18_fu_1412_p3;
wire   [15:0] zext_ln42_13_fu_1408_p1;
wire   [15:0] sub_ln42_1_fu_1420_p2;
wire   [15:0] add_ln42_18_fu_1426_p2;
wire   [8:0] add_ln1432_12_fu_1436_p2;
wire   [63:0] bitcast_ln488_4_fu_1446_p1;
wire   [51:0] trunc_ln534_10_fu_1468_p1;
wire   [53:0] zext_ln515_15_cast_fu_1472_p4;
wire   [10:0] xs_exp_3_1_fu_1458_p4;
wire   [11:0] zext_ln515_16_fu_1486_p1;
wire   [11:0] add_ln515_8_fu_1490_p2;
wire   [10:0] sub_ln18_8_fu_1504_p2;
wire  signed [11:0] sext_ln18_17_fu_1510_p1;
wire   [11:0] select_ln18_17_fu_1514_p3;
wire  signed [31:0] sext_ln18_18_fu_1522_p1;
wire   [136:0] lshr_ln18_8_fu_1530_p2;
wire   [136:0] shl_ln18_8_fu_1553_p2;
wire   [7:0] zext_ln21_8_fu_1557_p1;
wire   [7:0] tmp_19_fu_1560_p4;
wire   [7:0] select_ln18_24_fu_1570_p3;
wire   [7:0] sub_ln59_6_fu_1577_p2;
wire   [7:0] select_ln59_6_fu_1583_p3;
wire   [15:0] tmp_20_fu_1594_p3;
wire   [15:0] zext_ln42_15_fu_1590_p1;
wire   [15:0] sub_ln42_2_fu_1602_p2;
wire   [15:0] add_ln42_19_fu_1608_p2;
wire   [63:0] bitcast_ln488_5_fu_1629_p1;
wire   [51:0] trunc_ln534_11_fu_1651_p1;
wire   [53:0] zext_ln515_17_cast_fu_1655_p4;
wire   [10:0] xs_exp_3_2_fu_1641_p4;
wire   [11:0] zext_ln515_18_fu_1669_p1;
wire   [11:0] add_ln515_9_fu_1673_p2;
wire   [10:0] sub_ln18_9_fu_1687_p2;
wire  signed [11:0] sext_ln18_19_fu_1693_p1;
wire   [11:0] select_ln18_19_fu_1697_p3;
wire  signed [31:0] sext_ln18_20_fu_1705_p1;
wire   [136:0] lshr_ln18_9_fu_1713_p2;
wire   [136:0] shl_ln18_9_fu_1736_p2;
wire   [7:0] zext_ln21_9_fu_1740_p1;
wire   [7:0] tmp_21_fu_1743_p4;
wire   [7:0] select_ln18_26_fu_1753_p3;
wire   [7:0] sub_ln59_7_fu_1760_p2;
wire   [7:0] select_ln59_7_fu_1766_p3;
wire   [15:0] tmp_22_fu_1777_p3;
wire   [15:0] zext_ln42_17_fu_1773_p1;
wire   [15:0] sub_ln42_3_fu_1785_p2;
wire   [15:0] add_ln42_20_fu_1791_p2;
wire    ap_block_pp0_stage16;
wire   [63:0] bitcast_ln488_6_fu_1801_p1;
wire   [51:0] trunc_ln534_12_fu_1822_p1;
wire   [53:0] zext_ln515_19_cast_fu_1826_p4;
wire   [10:0] xs_exp_3_3_fu_1812_p4;
wire   [11:0] zext_ln515_20_fu_1840_p1;
wire   [11:0] add_ln515_10_fu_1844_p2;
wire   [10:0] sub_ln18_10_fu_1858_p2;
wire  signed [11:0] sext_ln18_21_fu_1864_p1;
wire   [11:0] select_ln18_21_fu_1868_p3;
wire  signed [31:0] sext_ln18_22_fu_1876_p1;
wire   [136:0] lshr_ln18_10_fu_1884_p2;
wire   [136:0] shl_ln18_10_fu_1907_p2;
wire   [7:0] zext_ln21_10_fu_1911_p1;
wire   [7:0] tmp_23_fu_1914_p4;
wire   [7:0] select_ln18_28_fu_1924_p3;
wire   [7:0] sub_ln59_8_fu_1931_p2;
wire   [7:0] select_ln59_8_fu_1937_p3;
wire   [15:0] tmp_24_fu_1948_p3;
wire   [15:0] zext_ln42_19_fu_1944_p1;
wire   [15:0] sub_ln42_4_fu_1956_p2;
wire   [15:0] add_ln42_21_fu_1962_p2;
wire   [63:0] bitcast_ln488_7_fu_1972_p1;
wire   [51:0] trunc_ln534_13_fu_1994_p1;
wire   [53:0] zext_ln515_21_cast_fu_1998_p4;
wire   [10:0] xs_exp_3_4_fu_1984_p4;
wire   [11:0] zext_ln515_22_fu_2012_p1;
wire   [11:0] add_ln515_11_fu_2016_p2;
wire   [10:0] sub_ln18_11_fu_2030_p2;
wire  signed [11:0] sext_ln18_23_fu_2036_p1;
wire   [11:0] select_ln18_23_fu_2040_p3;
wire  signed [31:0] sext_ln18_24_fu_2048_p1;
wire   [136:0] lshr_ln18_11_fu_2056_p2;
wire   [136:0] shl_ln18_11_fu_2079_p2;
wire   [7:0] zext_ln21_11_fu_2083_p1;
wire   [7:0] tmp_25_fu_2086_p4;
wire   [7:0] select_ln18_30_fu_2096_p3;
wire   [7:0] sub_ln59_9_fu_2103_p2;
wire   [7:0] select_ln59_9_fu_2109_p3;
wire   [15:0] tmp_26_fu_2120_p3;
wire   [15:0] zext_ln42_21_fu_2116_p1;
wire   [15:0] sub_ln42_5_fu_2128_p2;
wire   [15:0] add_ln42_22_fu_2134_p2;
wire    ap_block_pp0_stage20;
wire   [63:0] bitcast_ln488_8_fu_2144_p1;
wire   [51:0] trunc_ln534_14_fu_2165_p1;
wire   [53:0] zext_ln515_23_cast_fu_2169_p4;
wire   [10:0] xs_exp_3_5_fu_2155_p4;
wire   [11:0] zext_ln515_24_fu_2183_p1;
wire   [11:0] add_ln515_12_fu_2187_p2;
wire   [10:0] sub_ln18_12_fu_2201_p2;
wire  signed [11:0] sext_ln18_25_fu_2207_p1;
wire   [11:0] select_ln18_25_fu_2211_p3;
wire  signed [31:0] sext_ln18_26_fu_2219_p1;
wire   [136:0] lshr_ln18_12_fu_2227_p2;
wire   [136:0] shl_ln18_12_fu_2250_p2;
wire   [7:0] zext_ln21_12_fu_2254_p1;
wire   [7:0] tmp_27_fu_2257_p4;
wire   [7:0] select_ln18_31_fu_2267_p3;
wire   [7:0] sub_ln59_10_fu_2274_p2;
wire   [7:0] select_ln59_10_fu_2280_p3;
wire   [15:0] tmp_28_fu_2291_p3;
wire   [15:0] zext_ln42_23_fu_2287_p1;
wire   [15:0] sub_ln42_6_fu_2299_p2;
wire   [15:0] add_ln42_23_fu_2305_p2;
wire   [63:0] bitcast_ln488_9_fu_2315_p1;
wire   [51:0] trunc_ln534_15_fu_2337_p1;
wire   [53:0] zext_ln515_25_cast_fu_2341_p4;
wire   [10:0] xs_exp_3_6_fu_2327_p4;
wire   [11:0] zext_ln515_26_fu_2355_p1;
wire   [11:0] add_ln515_13_fu_2359_p2;
wire   [10:0] sub_ln18_13_fu_2373_p2;
wire  signed [11:0] sext_ln18_27_fu_2379_p1;
wire   [11:0] select_ln18_27_fu_2383_p3;
wire  signed [31:0] sext_ln18_28_fu_2391_p1;
wire   [136:0] lshr_ln18_13_fu_2399_p2;
wire   [136:0] shl_ln18_13_fu_2422_p2;
wire   [7:0] zext_ln21_13_fu_2426_p1;
wire   [7:0] tmp_29_fu_2429_p4;
wire   [7:0] select_ln18_32_fu_2439_p3;
wire   [7:0] sub_ln59_11_fu_2446_p2;
wire   [7:0] select_ln59_11_fu_2452_p3;
wire   [15:0] tmp_30_fu_2463_p3;
wire   [15:0] zext_ln42_25_fu_2459_p1;
wire   [15:0] sub_ln42_7_fu_2471_p2;
wire   [15:0] add_ln42_24_fu_2477_p2;
wire    ap_block_pp0_stage24;
wire   [63:0] bitcast_ln488_10_fu_2487_p1;
wire   [51:0] trunc_ln534_16_fu_2508_p1;
wire   [53:0] zext_ln515_27_cast_fu_2512_p4;
wire   [10:0] xs_exp_3_7_fu_2498_p4;
wire   [11:0] zext_ln515_28_fu_2526_p1;
wire   [11:0] add_ln515_14_fu_2530_p2;
wire   [10:0] sub_ln18_14_fu_2544_p2;
wire  signed [11:0] sext_ln18_29_fu_2550_p1;
wire   [11:0] select_ln18_29_fu_2554_p3;
wire  signed [31:0] sext_ln18_30_fu_2562_p1;
wire   [136:0] lshr_ln18_14_fu_2570_p2;
wire   [136:0] shl_ln18_14_fu_2593_p2;
wire   [7:0] zext_ln21_14_fu_2597_p1;
wire   [7:0] tmp_31_fu_2600_p4;
wire   [7:0] select_ln18_33_fu_2610_p3;
wire   [7:0] sub_ln59_12_fu_2617_p2;
wire   [7:0] select_ln59_12_fu_2623_p3;
wire   [15:0] tmp_32_fu_2634_p3;
wire   [15:0] zext_ln42_27_fu_2630_p1;
wire   [15:0] sub_ln42_8_fu_2642_p2;
wire   [15:0] add_ln42_25_fu_2648_p2;
wire   [11:0] add_ln18_1_fu_2678_p2;
wire   [14:0] tmp_fu_2707_p3;
wire   [15:0] zext_ln47_1_fu_2714_p1;
wire   [15:0] zext_ln47_fu_2704_p1;
wire   [15:0] sub_ln47_fu_2718_p2;
wire  signed [16:0] sext_ln42_fu_2724_p1;
wire   [16:0] zext_ln47_2_fu_2728_p1;
wire  signed [16:0] add_ln47_fu_2731_p2;
wire   [13:0] trunc_ln47_fu_2741_p1;
wire   [21:0] p_shl1_fu_2745_p3;
wire  signed [21:0] sext_ln47_fu_2737_p1;
wire   [21:0] sub_ln47_1_fu_2753_p2;
wire   [21:0] zext_ln47_3_fu_2759_p1;
wire   [31:0] data_28_fu_2780_p1;
wire   [7:0] y_fp_exp_fu_2784_p4;
wire   [22:0] y_fp_sig_fu_2794_p1;
wire   [0:0] icmp_ln25_fu_2798_p2;
wire   [0:0] icmp_ln25_8_fu_2804_p2;
wire   [0:0] ymaggreater_fu_2828_p2;
wire   [0:0] and_ln25_fu_2810_p2;
wire   [31:0] res_fu_2834_p3;
wire   [0:0] icmp_ln18_16_fu_2816_p2;
wire   [0:0] xor_ln18_fu_2822_p2;
wire   [0:0] and_ln18_fu_2850_p2;
wire   [31:0] select_ln25_fu_2842_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [35:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage14_00001;
wire    ap_block_pp0_stage18_00001;
wire    ap_block_pp0_stage22_00001;
wire    ap_block_pp0_stage26_00001;
wire    ap_block_pp0_stage30_00001;
wire    ap_block_pp0_stage34_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage15_00001;
wire   [12:0] mul_ln42_fu_547_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_generic_fmax_double_s grp_generic_fmax_double_s_fu_381(
    .ap_ready(grp_generic_fmax_double_s_fu_381_ap_ready),
    .x(grp_generic_fmax_double_s_fu_381_x),
    .ap_return(grp_generic_fmax_double_s_fu_381_ap_return)
);

srcnn_generic_fmin_double_s grp_generic_fmin_double_s_fu_386(
    .ap_ready(grp_generic_fmin_double_s_fu_386_ap_ready),
    .x(grp_generic_fmin_double_s_fu_386_x),
    .ap_return(grp_generic_fmin_double_s_fu_386_ap_return)
);

srcnn_mul_7ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_7ns_8ns_13_1_1_U6(
    .din0(mul_ln42_fu_547_p0),
    .din1(mul_ln42_fu_547_p1),
    .dout(mul_ln42_fu_547_p2)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage19),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage19)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage35_subdone) & (1'b1 == ap_CS_fsm_pp0_stage35))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        convolution_fu_166 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        convolution_fu_166 <= grp_fu_97_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten15_fu_186 <= 20'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten15_fu_186 <= select_ln16_3_fu_687_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten48_fu_194 <= 26'd0;
    end else if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        indvar_flatten48_fu_194 <= add_ln14_1_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_178 <= 12'd0;
        end else if (((icmp_ln14_reg_2941 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_178 <= select_ln18_35_fu_2683_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            kernel_x_fu_170 <= 4'd0;
        end else if (((icmp_ln14_reg_2941 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            kernel_x_fu_170 <= add_ln31_fu_2667_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        out_feat_fu_190 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_feat_fu_190 <= select_ln14_1_fu_535_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        out_feat_x_fu_174 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_feat_x_fu_174 <= select_ln18_16_fu_647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        out_feat_y_fu_182 <= 8'd0;
    end else if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_feat_y_fu_182 <= select_ln16_1_fu_789_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln16_reg_3023 <= add_ln16_fu_726_p2;
        select_ln14_reg_3018 <= select_ln14_fu_710_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln42_16_reg_3105 <= add_ln42_16_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln47_1_reg_3622 <= add_ln47_1_fu_2762_p2;
        icmp_ln14_reg_2941 <= icmp_ln14_fu_508_p2;
        indvar_flatten48_load_reg_2931 <= indvar_flatten48_fu_194;
        indvar_flatten_load_reg_2921 <= indvar_flatten_fu_178;
        out_feat_y_2_reg_2926 <= out_feat_y_fu_182;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln14_fu_508_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln14_1_reg_2969 <= and_ln14_1_fu_583_p2;
        icmp_ln16_reg_2945 <= icmp_ln16_fu_529_p2;
        mul_ln42_reg_2958 <= mul_ln42_fu_547_p2;
        or_ln16_reg_2975 <= or_ln16_fu_589_p2;
        or_ln18_15_reg_2980 <= or_ln18_15_fu_633_p2;
        select_ln14_1_reg_2951 <= select_ln14_1_fu_535_p3;
        select_ln18_12_reg_2985 <= select_ln18_12_fu_639_p3;
        select_ln18_16_reg_2991 <= select_ln18_16_fu_647_p3;
        zext_ln42_1_reg_2997[3 : 0] <= zext_ln42_1_fu_655_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        bitcast_ln14_reg_3632 <= bitcast_ln14_fu_2768_p1;
        layer1_output_addr_reg_3637 <= zext_ln47_4_fu_2771_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv1_biases_load_reg_3627 <= conv1_biases_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv1_weights_load_1_reg_3049 <= conv1_weights_q0;
        conv1_weights_load_reg_3044 <= conv1_weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv1_weights_load_2_reg_3085 <= conv1_weights_q1;
        conv1_weights_load_3_reg_3090 <= conv1_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv1_weights_load_4_reg_3115 <= conv1_weights_q1;
        conv1_weights_load_5_reg_3120 <= conv1_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv1_weights_load_6_reg_3135 <= conv1_weights_q1;
        conv1_weights_load_7_reg_3140 <= conv1_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv1_weights_load_8_reg_3175 <= conv1_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifzero_reg_3613 <= ifzero_fu_2672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        mul_5_reg_3538 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        mul_7_reg_3598 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_404 <= grp_fu_105_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_409 <= grp_generic_fmax_double_s_fu_381_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        reg_414 <= grp_generic_fmin_double_s_fu_386_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_418 <= grp_generic_fmin_double_s_fu_386_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln14_reg_2941 == 1'd0) 
    & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_422 <= input_ftmap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        reg_426 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        reg_431 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage33_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        reg_436 <= grp_fu_97_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29)))) begin
        reg_441 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_3613 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)))) begin
        reg_446 <= grp_fu_97_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        result_reg_3185 <= result_fu_1050_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln16_1_reg_3054 <= select_ln16_1_fu_789_p3;
        zext_ln1432_reg_3060[7 : 0] <= zext_ln1432_fu_794_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        select_ln16_2_reg_3238 <= select_ln16_2_fu_1247_p3;
        tmp_45_reg_3243 <= bitcast_ln488_3_fu_1254_p1[32'd63];
        tmp_46_reg_3253 <= add_ln515_7_fu_1298_p2[32'd11];
        tmp_47_reg_3263 <= lshr_ln18_7_fu_1338_p2[32'd53];
        zext_ln18_7_reg_3258[31 : 0] <= zext_ln18_7_fu_1334_p1[31 : 0];
        zext_ln515_13_reg_3248[52 : 1] <= zext_ln515_13_fu_1290_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_40_reg_3155 <= add_ln515_fu_952_p2[32'd11];
        tmp_41_reg_3165 <= lshr_ln18_fu_992_p2[32'd53];
        xs_sign_reg_3145 <= data_fu_908_p1[32'd63];
        zext_ln15_reg_3150[52 : 1] <= zext_ln15_fu_944_p1[52 : 1];
        zext_ln18_reg_3160[31 : 0] <= zext_ln18_fu_988_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_42_reg_3198 <= bitcast_ln488_fu_1057_p1[32'd63];
        tmp_43_reg_3208 <= add_ln515_6_fu_1101_p2[32'd11];
        tmp_44_reg_3218 <= lshr_ln18_6_fu_1141_p2[32'd53];
        zext_ln18_6_reg_3213[31 : 0] <= zext_ln18_6_fu_1137_p1[31 : 0];
        zext_ln515_11_reg_3203[52 : 1] <= zext_ln515_11_fu_1093_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_48_reg_3298 <= bitcast_ln488_4_fu_1446_p1[32'd63];
        tmp_49_reg_3308 <= add_ln515_8_fu_1490_p2[32'd11];
        tmp_50_reg_3318 <= lshr_ln18_8_fu_1530_p2[32'd53];
        zext_ln18_8_reg_3313[31 : 0] <= zext_ln18_8_fu_1526_p1[31 : 0];
        zext_ln515_15_reg_3303[52 : 1] <= zext_ln515_15_fu_1482_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_51_reg_3348 <= bitcast_ln488_5_fu_1629_p1[32'd63];
        tmp_52_reg_3358 <= add_ln515_9_fu_1673_p2[32'd11];
        tmp_53_reg_3368 <= lshr_ln18_9_fu_1713_p2[32'd53];
        zext_ln18_9_reg_3363[31 : 0] <= zext_ln18_9_fu_1709_p1[31 : 0];
        zext_ln515_17_reg_3353[52 : 1] <= zext_ln515_17_fu_1665_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_54_reg_3393 <= bitcast_ln488_6_fu_1801_p1[32'd63];
        tmp_55_reg_3403 <= add_ln515_10_fu_1844_p2[32'd11];
        tmp_56_reg_3413 <= lshr_ln18_10_fu_1884_p2[32'd53];
        zext_ln18_10_reg_3408[31 : 0] <= zext_ln18_10_fu_1880_p1[31 : 0];
        zext_ln515_19_reg_3398[52 : 1] <= zext_ln515_19_fu_1836_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_57_reg_3433 <= bitcast_ln488_7_fu_1972_p1[32'd63];
        tmp_58_reg_3443 <= add_ln515_11_fu_2016_p2[32'd11];
        tmp_59_reg_3453 <= lshr_ln18_11_fu_2056_p2[32'd53];
        zext_ln18_11_reg_3448[31 : 0] <= zext_ln18_11_fu_2052_p1[31 : 0];
        zext_ln515_21_reg_3438[52 : 1] <= zext_ln515_21_fu_2008_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp_60_reg_3473 <= bitcast_ln488_8_fu_2144_p1[32'd63];
        tmp_61_reg_3483 <= add_ln515_12_fu_2187_p2[32'd11];
        tmp_62_reg_3493 <= lshr_ln18_12_fu_2227_p2[32'd53];
        zext_ln18_12_reg_3488[31 : 0] <= zext_ln18_12_fu_2223_p1[31 : 0];
        zext_ln515_23_reg_3478[52 : 1] <= zext_ln515_23_fu_2179_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_63_reg_3513 <= bitcast_ln488_9_fu_2315_p1[32'd63];
        tmp_64_reg_3523 <= add_ln515_13_fu_2359_p2[32'd11];
        tmp_65_reg_3533 <= lshr_ln18_13_fu_2399_p2[32'd53];
        zext_ln18_13_reg_3528[31 : 0] <= zext_ln18_13_fu_2395_p1[31 : 0];
        zext_ln515_25_reg_3518[52 : 1] <= zext_ln515_25_fu_2351_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        tmp_66_reg_3558 <= bitcast_ln488_10_fu_2487_p1[32'd63];
        tmp_67_reg_3568 <= add_ln515_14_fu_2530_p2[32'd11];
        tmp_68_reg_3578 <= lshr_ln18_14_fu_2570_p2[32'd53];
        zext_ln18_14_reg_3573[31 : 0] <= zext_ln18_14_fu_2566_p1[31 : 0];
        zext_ln515_27_reg_3563[52 : 1] <= zext_ln515_27_fu_2522_p1[52 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        x_assign_19_4_reg_3288 <= grp_generic_fmin_double_s_fu_386_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        x_assign_19_6_reg_3338 <= grp_generic_fmin_double_s_fu_386_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        x_assign_19_8_reg_3388 <= grp_generic_fmin_double_s_fu_386_ap_return;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2941 == 1'd1) & (1'b0 == ap_block_pp0_stage19_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        ap_condition_exit_pp0_iter0_stage19 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage35_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_biases_ce0 = 1'b1;
    end else begin
        conv1_biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_weights_address0 = zext_ln42_10_fu_894_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_weights_address0 = zext_ln42_9_fu_869_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_weights_address0 = zext_ln42_7_fu_813_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv1_weights_address0 = zext_ln42_5_fu_750_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_weights_address0 = zext_ln42_3_fu_676_p1;
        end else begin
            conv1_weights_address0 = 'bx;
        end
    end else begin
        conv1_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_weights_address1 = zext_ln42_8_fu_859_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_weights_address1 = zext_ln42_6_fu_803_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv1_weights_address1 = zext_ln42_4_fu_740_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_weights_address1 = zext_ln42_2_fu_665_p1;
        end else begin
            conv1_weights_address1 = 'bx;
        end
    end else begin
        conv1_weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv1_weights_ce0 = 1'b1;
    end else begin
        conv1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv1_weights_ce1 = 1'b1;
    end else begin
        conv1_weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_392_p0 = reg_446;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        grp_fu_392_p0 = reg_436;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_392_p0 = select_ln18_14_fu_1621_p3;
    end else begin
        grp_fu_392_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_392_p1 = bitcast_ln14_reg_3632;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_392_p1 = mul_7_reg_3598;
    end else if (((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34))) begin
        grp_fu_392_p1 = mul_5_reg_3538;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
        grp_fu_392_p1 = reg_441;
    end else if ((((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)))) begin
        grp_fu_392_p1 = reg_431;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)))) begin
        grp_fu_392_p1 = reg_426;
    end else begin
        grp_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
            grp_fu_396_p0 = bitcast_ln42_8_fu_2658_p1;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            grp_fu_396_p0 = bitcast_ln42_7_fu_2584_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            grp_fu_396_p0 = bitcast_ln42_6_fu_2413_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            grp_fu_396_p0 = bitcast_ln42_5_fu_2241_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            grp_fu_396_p0 = bitcast_ln42_4_fu_2070_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_396_p0 = bitcast_ln42_3_fu_1898_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            grp_fu_396_p0 = bitcast_ln42_2_fu_1727_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_396_p0 = bitcast_ln42_9_fu_1544_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_396_p0 = bitcast_ln42_fu_1362_p1;
        end else begin
            grp_fu_396_p0 = 'bx;
        end
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
            grp_fu_396_p1 = bitcast_ln42_17_fu_2662_p1;
        end else if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            grp_fu_396_p1 = bitcast_ln42_16_fu_2588_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            grp_fu_396_p1 = bitcast_ln42_15_fu_2417_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            grp_fu_396_p1 = bitcast_ln42_14_fu_2245_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            grp_fu_396_p1 = bitcast_ln42_13_fu_2074_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            grp_fu_396_p1 = bitcast_ln42_12_fu_1902_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            grp_fu_396_p1 = bitcast_ln42_11_fu_1731_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_396_p1 = bitcast_ln42_10_fu_1548_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_396_p1 = bitcast_ln42_1_fu_1366_p1;
        end else begin
            grp_fu_396_p1 = 'bx;
        end
    end else begin
        grp_fu_396_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_400_p0 = zext_ln1432_6_fu_1441_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_400_p0 = zext_ln1432_5_fu_1357_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_400_p0 = zext_ln1432_4_fu_1235_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_400_p0 = zext_ln1432_3_fu_1160_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_400_p0 = zext_ln39_1_fu_1016_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_400_p0 = sext_ln1432_8_fu_1011_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_400_p0 = sext_ln1432_7_fu_903_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_400_p0 = sext_ln1432_6_fu_884_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_400_p0 = sext_ln1432_5_fu_824_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_400_p0 = sext_ln1432_4_fu_774_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_400_p0 = zext_ln39_fu_503_p1;
        end else begin
            grp_fu_400_p0 = 'bx;
        end
    end else begin
        grp_fu_400_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_generic_fmax_double_s_fu_381_x = reg_404;
    end else if (((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_generic_fmax_double_s_fu_381_x = select_ln16_2_reg_3238;
    end else if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_generic_fmax_double_s_fu_381_x = grp_fu_105_p_dout0;
    end else begin
        grp_generic_fmax_double_s_fu_381_x = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_generic_fmin_double_s_fu_386_x = grp_generic_fmax_double_s_fu_381_ap_return;
    end else if ((((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln14_reg_2941 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_generic_fmin_double_s_fu_386_x = reg_409;
    end else begin
        grp_generic_fmin_double_s_fu_386_x = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage25) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
            input_ftmap_address0 = zext_ln42_28_fu_2653_p1;
        end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
            input_ftmap_address0 = zext_ln42_26_fu_2482_p1;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            input_ftmap_address0 = zext_ln42_24_fu_2310_p1;
        end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            input_ftmap_address0 = zext_ln42_22_fu_2139_p1;
        end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            input_ftmap_address0 = zext_ln42_20_fu_1967_p1;
        end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            input_ftmap_address0 = zext_ln42_18_fu_1796_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            input_ftmap_address0 = zext_ln42_16_fu_1613_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            input_ftmap_address0 = zext_ln42_14_fu_1431_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            input_ftmap_address0 = zext_ln42_12_fu_1225_p1;
        end else begin
            input_ftmap_address0 = 'bx;
        end
    end else begin
        input_ftmap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        input_ftmap_ce0 = 1'b1;
    end else begin
        input_ftmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        layer1_output_ce0 = 1'b1;
    end else begin
        layer1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ifzero_reg_3613 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        layer1_output_we0 = 1'b1;
    end else begin
        layer1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage19)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1432_10_fu_1230_p2 = (zext_ln1432_reg_3060 + 9'd2);

assign add_ln1432_11_fu_1352_p2 = (zext_ln1432_reg_3060 + 9'd3);

assign add_ln1432_12_fu_1436_p2 = (zext_ln1432_reg_3060 + 9'd4);

assign add_ln1432_13_fu_758_p2 = ($signed(select_ln18_18_cast_fu_732_p1) + $signed(9'd508));

assign add_ln1432_5_fu_818_p2 = ($signed(zext_ln1432_fu_794_p1) + $signed(9'd508));

assign add_ln1432_6_fu_879_p2 = ($signed(zext_ln1432_reg_3060) + $signed(9'd509));

assign add_ln1432_7_fu_898_p2 = ($signed(zext_ln1432_reg_3060) + $signed(9'd510));

assign add_ln1432_8_fu_1006_p2 = ($signed(zext_ln1432_reg_3060) + $signed(9'd511));

assign add_ln1432_9_fu_1155_p2 = (select_ln16_1_reg_3054 + 8'd1);

assign add_ln1432_fu_768_p2 = ($signed(sext_ln1432_fu_764_p1) + $signed(zext_ln1432_2_fu_755_p1));

assign add_ln14_1_fu_834_p2 = (indvar_flatten48_load_reg_2931 + 26'd1);

assign add_ln14_fu_523_p2 = (out_feat_fu_190 + 7'd1);

assign add_ln16_1_fu_681_p2 = (indvar_flatten15_fu_186 + 20'd1);

assign add_ln16_fu_726_p2 = (select_ln14_fu_710_p3 + 8'd1);

assign add_ln18_1_fu_2678_p2 = (indvar_flatten_load_reg_2921 + 12'd1);

assign add_ln18_fu_621_p2 = (select_ln16_fu_595_p3 + 8'd1);

assign add_ln31_fu_2667_p2 = (select_ln18_12_reg_2985 + 4'd1);

assign add_ln42_10_fu_735_p2 = (add_ln42_1_fu_716_p2 + zext_ln42_1_reg_2997);

assign add_ln42_11_fu_745_p2 = (add_ln42_2_fu_721_p2 + zext_ln42_1_reg_2997);

assign add_ln42_12_fu_798_p2 = (add_ln42_3_fu_779_p2 + zext_ln42_1_reg_2997);

assign add_ln42_13_fu_808_p2 = (add_ln42_4_fu_784_p2 + zext_ln42_1_reg_2997);

assign add_ln42_14_fu_854_p2 = (add_ln42_5_fu_839_p2 + zext_ln42_1_reg_2997);

assign add_ln42_15_fu_864_p2 = (add_ln42_6_fu_844_p2 + zext_ln42_1_reg_2997);

assign add_ln42_16_fu_874_p2 = (add_ln42_7_fu_849_p2 + zext_ln42_1_reg_2997);

assign add_ln42_17_fu_1220_p2 = (sub_ln42_fu_1214_p2 + result_reg_3185);

assign add_ln42_18_fu_1426_p2 = (sub_ln42_1_fu_1420_p2 + result_reg_3185);

assign add_ln42_19_fu_1608_p2 = (sub_ln42_2_fu_1602_p2 + result_reg_3185);

assign add_ln42_1_fu_716_p2 = (mul_ln42_reg_2958 + 13'd18);

assign add_ln42_20_fu_1791_p2 = (sub_ln42_3_fu_1785_p2 + result_reg_3185);

assign add_ln42_21_fu_1962_p2 = (sub_ln42_4_fu_1956_p2 + result_reg_3185);

assign add_ln42_22_fu_2134_p2 = (sub_ln42_5_fu_2128_p2 + result_reg_3185);

assign add_ln42_23_fu_2305_p2 = (sub_ln42_6_fu_2299_p2 + result_reg_3185);

assign add_ln42_24_fu_2477_p2 = (sub_ln42_7_fu_2471_p2 + result_reg_3185);

assign add_ln42_25_fu_2648_p2 = (sub_ln42_8_fu_2642_p2 + result_reg_3185);

assign add_ln42_2_fu_721_p2 = (mul_ln42_reg_2958 + 13'd27);

assign add_ln42_3_fu_779_p2 = (mul_ln42_reg_2958 + 13'd36);

assign add_ln42_4_fu_784_p2 = (mul_ln42_reg_2958 + 13'd45);

assign add_ln42_5_fu_839_p2 = (mul_ln42_reg_2958 + 13'd54);

assign add_ln42_6_fu_844_p2 = (mul_ln42_reg_2958 + 13'd63);

assign add_ln42_7_fu_849_p2 = (mul_ln42_reg_2958 + 13'd72);

assign add_ln42_8_fu_659_p2 = (mul_ln42_fu_547_p2 + zext_ln42_1_fu_655_p1);

assign add_ln42_9_fu_670_p2 = (add_ln42_fu_553_p2 + zext_ln42_1_fu_655_p1);

assign add_ln42_fu_553_p2 = (mul_ln42_fu_547_p2 + 13'd9);

assign add_ln47_1_fu_2762_p2 = (sub_ln47_1_fu_2753_p2 + zext_ln47_3_fu_2759_p1);

assign add_ln47_fu_2731_p2 = ($signed(sext_ln42_fu_2724_p1) + $signed(zext_ln47_2_fu_2728_p1));

assign add_ln515_10_fu_1844_p2 = ($signed(zext_ln515_20_fu_1840_p1) + $signed(12'd3073));

assign add_ln515_11_fu_2016_p2 = ($signed(zext_ln515_22_fu_2012_p1) + $signed(12'd3073));

assign add_ln515_12_fu_2187_p2 = ($signed(zext_ln515_24_fu_2183_p1) + $signed(12'd3073));

assign add_ln515_13_fu_2359_p2 = ($signed(zext_ln515_26_fu_2355_p1) + $signed(12'd3073));

assign add_ln515_14_fu_2530_p2 = ($signed(zext_ln515_28_fu_2526_p1) + $signed(12'd3073));

assign add_ln515_6_fu_1101_p2 = ($signed(zext_ln515_12_fu_1097_p1) + $signed(12'd3073));

assign add_ln515_7_fu_1298_p2 = ($signed(zext_ln515_14_fu_1294_p1) + $signed(12'd3073));

assign add_ln515_8_fu_1490_p2 = ($signed(zext_ln515_16_fu_1486_p1) + $signed(12'd3073));

assign add_ln515_9_fu_1673_p2 = ($signed(zext_ln515_18_fu_1669_p1) + $signed(12'd3073));

assign add_ln515_fu_952_p2 = ($signed(zext_ln515_fu_948_p1) + $signed(12'd3073));

assign and_ln14_1_fu_583_p2 = (xor_ln14_fu_559_p2 & icmp_ln18_fu_577_p2);

assign and_ln14_fu_571_p2 = (xor_ln14_fu_559_p2 & icmp_ln31_fu_565_p2);

assign and_ln16_fu_615_p2 = (or_ln16_1_fu_609_p2 & and_ln14_fu_571_p2);

assign and_ln18_fu_2850_p2 = (xor_ln18_fu_2822_p2 & icmp_ln18_16_fu_2816_p2);

assign and_ln25_fu_2810_p2 = (icmp_ln25_fu_2798_p2 & icmp_ln25_8_fu_2804_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage19;

assign bitcast_ln14_fu_2768_p1 = conv1_biases_load_reg_3627;

assign bitcast_ln42_10_fu_1548_p1 = reg_422;

assign bitcast_ln42_11_fu_1731_p1 = reg_422;

assign bitcast_ln42_12_fu_1902_p1 = reg_422;

assign bitcast_ln42_13_fu_2074_p1 = reg_422;

assign bitcast_ln42_14_fu_2245_p1 = reg_422;

assign bitcast_ln42_15_fu_2417_p1 = reg_422;

assign bitcast_ln42_16_fu_2588_p1 = reg_422;

assign bitcast_ln42_17_fu_2662_p1 = reg_422;

assign bitcast_ln42_1_fu_1366_p1 = reg_422;

assign bitcast_ln42_2_fu_1727_p1 = conv1_weights_load_2_reg_3085;

assign bitcast_ln42_3_fu_1898_p1 = conv1_weights_load_3_reg_3090;

assign bitcast_ln42_4_fu_2070_p1 = conv1_weights_load_4_reg_3115;

assign bitcast_ln42_5_fu_2241_p1 = conv1_weights_load_5_reg_3120;

assign bitcast_ln42_6_fu_2413_p1 = conv1_weights_load_6_reg_3135;

assign bitcast_ln42_7_fu_2584_p1 = conv1_weights_load_7_reg_3140;

assign bitcast_ln42_8_fu_2658_p1 = conv1_weights_load_8_reg_3175;

assign bitcast_ln42_9_fu_1544_p1 = conv1_weights_load_1_reg_3049;

assign bitcast_ln42_fu_1362_p1 = conv1_weights_load_reg_3044;

assign bitcast_ln488_10_fu_2487_p1 = x_assign_19_8_reg_3388;

assign bitcast_ln488_3_fu_1254_p1 = reg_414;

assign bitcast_ln488_4_fu_1446_p1 = reg_418;

assign bitcast_ln488_5_fu_1629_p1 = reg_414;

assign bitcast_ln488_6_fu_1801_p1 = x_assign_19_4_reg_3288;

assign bitcast_ln488_7_fu_1972_p1 = reg_418;

assign bitcast_ln488_8_fu_2144_p1 = x_assign_19_6_reg_3338;

assign bitcast_ln488_9_fu_2315_p1 = reg_414;

assign bitcast_ln488_fu_1057_p1 = reg_414;

assign conv1_biases_address0 = zext_ln14_fu_2700_p1;

assign data_28_fu_2780_p1 = reg_446;

assign data_fu_908_p1 = grp_generic_fmin_double_s_fu_386_ap_return;

assign grp_fu_101_p_ce = 1'b1;

assign grp_fu_101_p_din0 = grp_fu_396_p0;

assign grp_fu_101_p_din1 = grp_fu_396_p1;

assign grp_fu_105_p_ce = 1'b1;

assign grp_fu_105_p_din0 = grp_fu_400_p0;

assign grp_fu_97_p_ce = 1'b1;

assign grp_fu_97_p_din0 = grp_fu_392_p0;

assign grp_fu_97_p_din1 = grp_fu_392_p1;

assign grp_fu_97_p_opcode = 2'd0;

assign icmp_ln14_fu_508_p2 = ((indvar_flatten48_fu_194 == 26'd37454400) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_529_p2 = ((indvar_flatten15_fu_186 == 20'd585225) ? 1'b1 : 1'b0);

assign icmp_ln18_16_fu_2816_p2 = ((y_fp_exp_fu_2784_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_577_p2 = ((indvar_flatten_fu_178 == 12'd2295) ? 1'b1 : 1'b0);

assign icmp_ln25_8_fu_2804_p2 = ((y_fp_sig_fu_2794_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_2798_p2 = ((y_fp_exp_fu_2784_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_565_p2 = ((kernel_x_fu_170 == 4'd9) ? 1'b1 : 1'b0);

assign ifzero_fu_2672_p2 = ((add_ln31_fu_2667_p2 == 4'd9) ? 1'b1 : 1'b0);

assign layer1_output_address0 = layer1_output_addr_reg_3637;

assign layer1_output_d0 = ((and_ln18_fu_2850_p2[0:0] == 1'b1) ? 32'd0 : select_ln25_fu_2842_p3);

assign lshr_ln18_10_fu_1884_p2 = zext_ln515_19_fu_1836_p1 >> zext_ln18_10_fu_1880_p1;

assign lshr_ln18_11_fu_2056_p2 = zext_ln515_21_fu_2008_p1 >> zext_ln18_11_fu_2052_p1;

assign lshr_ln18_12_fu_2227_p2 = zext_ln515_23_fu_2179_p1 >> zext_ln18_12_fu_2223_p1;

assign lshr_ln18_13_fu_2399_p2 = zext_ln515_25_fu_2351_p1 >> zext_ln18_13_fu_2395_p1;

assign lshr_ln18_14_fu_2570_p2 = zext_ln515_27_fu_2522_p1 >> zext_ln18_14_fu_2566_p1;

assign lshr_ln18_6_fu_1141_p2 = zext_ln515_11_fu_1093_p1 >> zext_ln18_6_fu_1137_p1;

assign lshr_ln18_7_fu_1338_p2 = zext_ln515_13_fu_1290_p1 >> zext_ln18_7_fu_1334_p1;

assign lshr_ln18_8_fu_1530_p2 = zext_ln515_15_fu_1482_p1 >> zext_ln18_8_fu_1526_p1;

assign lshr_ln18_9_fu_1713_p2 = zext_ln515_17_fu_1665_p1 >> zext_ln18_9_fu_1709_p1;

assign lshr_ln18_fu_992_p2 = zext_ln15_fu_944_p1 >> zext_ln18_fu_988_p1;

assign mantissa_fu_934_p4 = {{{{1'd1}, {trunc_ln534_fu_930_p1}}}, {1'd0}};

assign mul_ln42_fu_547_p0 = mul_ln42_fu_547_p00;

assign mul_ln42_fu_547_p00 = select_ln14_1_fu_535_p3;

assign mul_ln42_fu_547_p1 = 13'd81;

assign or_ln16_1_fu_609_p2 = (xor_ln16_fu_603_p2 | icmp_ln16_fu_529_p2);

assign or_ln16_fu_589_p2 = (icmp_ln16_fu_529_p2 | and_ln14_1_fu_583_p2);

assign or_ln18_15_fu_633_p2 = (or_ln18_fu_627_p2 | icmp_ln16_fu_529_p2);

assign or_ln18_fu_627_p2 = (and_ln16_fu_615_p2 | and_ln14_1_fu_583_p2);

assign p_shl1_fu_2745_p3 = {{trunc_ln47_fu_2741_p1}, {8'd0}};

assign res_fu_2834_p3 = ((ymaggreater_fu_2828_p2[0:0] == 1'b1) ? reg_446 : 32'd0);

assign result_10_fu_1044_p2 = (16'd0 - val_fu_1037_p3);

assign result_fu_1050_p3 = ((xs_sign_reg_3145[0:0] == 1'b1) ? result_10_fu_1044_p2 : val_fu_1037_p3);

assign select_ln14_1_fu_535_p3 = ((icmp_ln16_fu_529_p2[0:0] == 1'b1) ? add_ln14_fu_523_p2 : out_feat_fu_190);

assign select_ln14_2_fu_1240_p3 = ((icmp_ln16_reg_2945[0:0] == 1'b1) ? 64'd0 : reg_404);

assign select_ln14_fu_710_p3 = ((icmp_ln16_reg_2945[0:0] == 1'b1) ? 8'd0 : out_feat_y_2_reg_2926);

assign select_ln16_1_fu_789_p3 = ((and_ln14_1_reg_2969[0:0] == 1'b1) ? add_ln16_reg_3023 : select_ln14_reg_3018);

assign select_ln16_2_fu_1247_p3 = ((and_ln14_1_reg_2969[0:0] == 1'b1) ? grp_fu_105_p_dout0 : select_ln14_2_fu_1240_p3);

assign select_ln16_3_fu_687_p3 = ((icmp_ln16_fu_529_p2[0:0] == 1'b1) ? 20'd1 : add_ln16_1_fu_681_p2);

assign select_ln16_fu_595_p3 = ((or_ln16_fu_589_p2[0:0] == 1'b1) ? 8'd0 : out_feat_x_fu_174);

assign select_ln18_12_fu_639_p3 = ((or_ln18_15_fu_633_p2[0:0] == 1'b1) ? 4'd0 : kernel_x_fu_170);

assign select_ln18_13_fu_1125_p3 = ((tmp_43_fu_1107_p3[0:0] == 1'b1) ? sext_ln18_13_fu_1121_p1 : add_ln515_6_fu_1101_p2);

assign select_ln18_14_fu_1621_p3 = ((or_ln18_15_reg_2980[0:0] == 1'b1) ? 32'd0 : convolution_fu_166);

assign select_ln18_15_fu_1322_p3 = ((tmp_46_fu_1304_p3[0:0] == 1'b1) ? sext_ln18_15_fu_1318_p1 : add_ln515_7_fu_1298_p2);

assign select_ln18_16_fu_647_p3 = ((and_ln16_fu_615_p2[0:0] == 1'b1) ? add_ln18_fu_621_p2 : select_ln16_fu_595_p3);

assign select_ln18_17_fu_1514_p3 = ((tmp_49_fu_1496_p3[0:0] == 1'b1) ? sext_ln18_17_fu_1510_p1 : add_ln515_8_fu_1490_p2);

assign select_ln18_18_cast_fu_732_p1 = select_ln18_16_reg_2991;

assign select_ln18_19_fu_1697_p3 = ((tmp_52_fu_1679_p3[0:0] == 1'b1) ? sext_ln18_19_fu_1693_p1 : add_ln515_9_fu_1673_p2);

assign select_ln18_20_fu_1182_p3 = ((tmp_43_reg_3208[0:0] == 1'b1) ? zext_ln21_6_fu_1169_p1 : tmp_15_fu_1172_p4);

assign select_ln18_21_fu_1868_p3 = ((tmp_55_fu_1850_p3[0:0] == 1'b1) ? sext_ln18_21_fu_1864_p1 : add_ln515_10_fu_1844_p2);

assign select_ln18_22_fu_1388_p3 = ((tmp_46_reg_3253[0:0] == 1'b1) ? zext_ln21_7_fu_1375_p1 : tmp_17_fu_1378_p4);

assign select_ln18_23_fu_2040_p3 = ((tmp_58_fu_2022_p3[0:0] == 1'b1) ? sext_ln18_23_fu_2036_p1 : add_ln515_11_fu_2016_p2);

assign select_ln18_24_fu_1570_p3 = ((tmp_49_reg_3308[0:0] == 1'b1) ? zext_ln21_8_fu_1557_p1 : tmp_19_fu_1560_p4);

assign select_ln18_25_fu_2211_p3 = ((tmp_61_fu_2193_p3[0:0] == 1'b1) ? sext_ln18_25_fu_2207_p1 : add_ln515_12_fu_2187_p2);

assign select_ln18_26_fu_1753_p3 = ((tmp_52_reg_3358[0:0] == 1'b1) ? zext_ln21_9_fu_1740_p1 : tmp_21_fu_1743_p4);

assign select_ln18_27_fu_2383_p3 = ((tmp_64_fu_2365_p3[0:0] == 1'b1) ? sext_ln18_27_fu_2379_p1 : add_ln515_13_fu_2359_p2);

assign select_ln18_28_fu_1924_p3 = ((tmp_55_reg_3403[0:0] == 1'b1) ? zext_ln21_10_fu_1911_p1 : tmp_23_fu_1914_p4);

assign select_ln18_29_fu_2554_p3 = ((tmp_67_fu_2536_p3[0:0] == 1'b1) ? sext_ln18_29_fu_2550_p1 : add_ln515_14_fu_2530_p2);

assign select_ln18_30_fu_2096_p3 = ((tmp_58_reg_3443[0:0] == 1'b1) ? zext_ln21_11_fu_2083_p1 : tmp_25_fu_2086_p4);

assign select_ln18_31_fu_2267_p3 = ((tmp_61_reg_3483[0:0] == 1'b1) ? zext_ln21_12_fu_2254_p1 : tmp_27_fu_2257_p4);

assign select_ln18_32_fu_2439_p3 = ((tmp_64_reg_3523[0:0] == 1'b1) ? zext_ln21_13_fu_2426_p1 : tmp_29_fu_2429_p4);

assign select_ln18_33_fu_2610_p3 = ((tmp_67_reg_3568[0:0] == 1'b1) ? zext_ln21_14_fu_2597_p1 : tmp_31_fu_2600_p4);

assign select_ln18_35_fu_2683_p3 = ((or_ln16_reg_2975[0:0] == 1'b1) ? 12'd1 : add_ln18_1_fu_2678_p2);

assign select_ln18_fu_976_p3 = ((tmp_40_fu_958_p3[0:0] == 1'b1) ? sext_ln18_fu_972_p1 : add_ln515_fu_952_p2);

assign select_ln25_fu_2842_p3 = ((and_ln25_fu_2810_p2[0:0] == 1'b1) ? reg_446 : res_fu_2834_p3);

assign select_ln59_10_fu_2280_p3 = ((tmp_60_reg_3473[0:0] == 1'b1) ? sub_ln59_10_fu_2274_p2 : select_ln18_31_fu_2267_p3);

assign select_ln59_11_fu_2452_p3 = ((tmp_63_reg_3513[0:0] == 1'b1) ? sub_ln59_11_fu_2446_p2 : select_ln18_32_fu_2439_p3);

assign select_ln59_12_fu_2623_p3 = ((tmp_66_reg_3558[0:0] == 1'b1) ? sub_ln59_12_fu_2617_p2 : select_ln18_33_fu_2610_p3);

assign select_ln59_5_fu_1401_p3 = ((tmp_45_reg_3243[0:0] == 1'b1) ? sub_ln59_5_fu_1395_p2 : select_ln18_22_fu_1388_p3);

assign select_ln59_6_fu_1583_p3 = ((tmp_48_reg_3298[0:0] == 1'b1) ? sub_ln59_6_fu_1577_p2 : select_ln18_24_fu_1570_p3);

assign select_ln59_7_fu_1766_p3 = ((tmp_51_reg_3348[0:0] == 1'b1) ? sub_ln59_7_fu_1760_p2 : select_ln18_26_fu_1753_p3);

assign select_ln59_8_fu_1937_p3 = ((tmp_54_reg_3393[0:0] == 1'b1) ? sub_ln59_8_fu_1931_p2 : select_ln18_28_fu_1924_p3);

assign select_ln59_9_fu_2109_p3 = ((tmp_57_reg_3433[0:0] == 1'b1) ? sub_ln59_9_fu_2103_p2 : select_ln18_30_fu_2096_p3);

assign select_ln59_fu_1195_p3 = ((tmp_42_reg_3198[0:0] == 1'b1) ? sub_ln59_fu_1189_p2 : select_ln18_20_fu_1182_p3);

assign sext_ln1432_4_fu_774_p1 = $signed(add_ln1432_fu_768_p2);

assign sext_ln1432_5_fu_824_p1 = $signed(add_ln1432_5_fu_818_p2);

assign sext_ln1432_6_fu_884_p1 = $signed(add_ln1432_6_fu_879_p2);

assign sext_ln1432_7_fu_903_p1 = $signed(add_ln1432_7_fu_898_p2);

assign sext_ln1432_8_fu_1011_p1 = $signed(add_ln1432_8_fu_1006_p2);

assign sext_ln1432_fu_764_p1 = $signed(add_ln1432_13_fu_758_p2);

assign sext_ln18_12_fu_984_p1 = $signed(select_ln18_fu_976_p3);

assign sext_ln18_13_fu_1121_p1 = $signed(sub_ln18_6_fu_1115_p2);

assign sext_ln18_14_fu_1133_p1 = $signed(select_ln18_13_fu_1125_p3);

assign sext_ln18_15_fu_1318_p1 = $signed(sub_ln18_7_fu_1312_p2);

assign sext_ln18_16_fu_1330_p1 = $signed(select_ln18_15_fu_1322_p3);

assign sext_ln18_17_fu_1510_p1 = $signed(sub_ln18_8_fu_1504_p2);

assign sext_ln18_18_fu_1522_p1 = $signed(select_ln18_17_fu_1514_p3);

assign sext_ln18_19_fu_1693_p1 = $signed(sub_ln18_9_fu_1687_p2);

assign sext_ln18_20_fu_1705_p1 = $signed(select_ln18_19_fu_1697_p3);

assign sext_ln18_21_fu_1864_p1 = $signed(sub_ln18_10_fu_1858_p2);

assign sext_ln18_22_fu_1876_p1 = $signed(select_ln18_21_fu_1868_p3);

assign sext_ln18_23_fu_2036_p1 = $signed(sub_ln18_11_fu_2030_p2);

assign sext_ln18_24_fu_2048_p1 = $signed(select_ln18_23_fu_2040_p3);

assign sext_ln18_25_fu_2207_p1 = $signed(sub_ln18_12_fu_2201_p2);

assign sext_ln18_26_fu_2219_p1 = $signed(select_ln18_25_fu_2211_p3);

assign sext_ln18_27_fu_2379_p1 = $signed(sub_ln18_13_fu_2373_p2);

assign sext_ln18_28_fu_2391_p1 = $signed(select_ln18_27_fu_2383_p3);

assign sext_ln18_29_fu_2550_p1 = $signed(sub_ln18_14_fu_2544_p2);

assign sext_ln18_30_fu_2562_p1 = $signed(select_ln18_29_fu_2554_p3);

assign sext_ln18_fu_972_p1 = $signed(sub_ln18_fu_966_p2);

assign sext_ln42_fu_2724_p1 = $signed(sub_ln47_fu_2718_p2);

assign sext_ln47_fu_2737_p1 = add_ln47_fu_2731_p2;

assign shl_ln18_10_fu_1907_p2 = zext_ln515_19_reg_3398 << zext_ln18_10_reg_3408;

assign shl_ln18_11_fu_2079_p2 = zext_ln515_21_reg_3438 << zext_ln18_11_reg_3448;

assign shl_ln18_12_fu_2250_p2 = zext_ln515_23_reg_3478 << zext_ln18_12_reg_3488;

assign shl_ln18_13_fu_2422_p2 = zext_ln515_25_reg_3518 << zext_ln18_13_reg_3528;

assign shl_ln18_14_fu_2593_p2 = zext_ln515_27_reg_3563 << zext_ln18_14_reg_3573;

assign shl_ln18_6_fu_1165_p2 = zext_ln515_11_reg_3203 << zext_ln18_6_reg_3213;

assign shl_ln18_7_fu_1371_p2 = zext_ln515_13_reg_3248 << zext_ln18_7_reg_3258;

assign shl_ln18_8_fu_1553_p2 = zext_ln515_15_reg_3303 << zext_ln18_8_reg_3313;

assign shl_ln18_9_fu_1736_p2 = zext_ln515_17_reg_3353 << zext_ln18_9_reg_3363;

assign shl_ln18_fu_1020_p2 = zext_ln15_reg_3150 << zext_ln18_reg_3160;

assign sub_ln18_10_fu_1858_p2 = (11'd1023 - xs_exp_3_3_fu_1812_p4);

assign sub_ln18_11_fu_2030_p2 = (11'd1023 - xs_exp_3_4_fu_1984_p4);

assign sub_ln18_12_fu_2201_p2 = (11'd1023 - xs_exp_3_5_fu_2155_p4);

assign sub_ln18_13_fu_2373_p2 = (11'd1023 - xs_exp_3_6_fu_2327_p4);

assign sub_ln18_14_fu_2544_p2 = (11'd1023 - xs_exp_3_7_fu_2498_p4);

assign sub_ln18_6_fu_1115_p2 = (11'd1023 - xs_exp_s_fu_1069_p4);

assign sub_ln18_7_fu_1312_p2 = (11'd1023 - xs_exp_3_s_fu_1266_p4);

assign sub_ln18_8_fu_1504_p2 = (11'd1023 - xs_exp_3_1_fu_1458_p4);

assign sub_ln18_9_fu_1687_p2 = (11'd1023 - xs_exp_3_2_fu_1641_p4);

assign sub_ln18_fu_966_p2 = (11'd1023 - xs_exp_fu_920_p4);

assign sub_ln42_1_fu_1420_p2 = (tmp_18_fu_1412_p3 - zext_ln42_13_fu_1408_p1);

assign sub_ln42_2_fu_1602_p2 = (tmp_20_fu_1594_p3 - zext_ln42_15_fu_1590_p1);

assign sub_ln42_3_fu_1785_p2 = (tmp_22_fu_1777_p3 - zext_ln42_17_fu_1773_p1);

assign sub_ln42_4_fu_1956_p2 = (tmp_24_fu_1948_p3 - zext_ln42_19_fu_1944_p1);

assign sub_ln42_5_fu_2128_p2 = (tmp_26_fu_2120_p3 - zext_ln42_21_fu_2116_p1);

assign sub_ln42_6_fu_2299_p2 = (tmp_28_fu_2291_p3 - zext_ln42_23_fu_2287_p1);

assign sub_ln42_7_fu_2471_p2 = (tmp_30_fu_2463_p3 - zext_ln42_25_fu_2459_p1);

assign sub_ln42_8_fu_2642_p2 = (tmp_32_fu_2634_p3 - zext_ln42_27_fu_2630_p1);

assign sub_ln42_fu_1214_p2 = (tmp_16_fu_1206_p3 - zext_ln42_11_fu_1202_p1);

assign sub_ln47_1_fu_2753_p2 = ($signed(p_shl1_fu_2745_p3) - $signed(sext_ln47_fu_2737_p1));

assign sub_ln47_fu_2718_p2 = (zext_ln47_1_fu_2714_p1 - zext_ln47_fu_2704_p1);

assign sub_ln59_10_fu_2274_p2 = (8'd0 - select_ln18_31_fu_2267_p3);

assign sub_ln59_11_fu_2446_p2 = (8'd0 - select_ln18_32_fu_2439_p3);

assign sub_ln59_12_fu_2617_p2 = (8'd0 - select_ln18_33_fu_2610_p3);

assign sub_ln59_5_fu_1395_p2 = (8'd0 - select_ln18_22_fu_1388_p3);

assign sub_ln59_6_fu_1577_p2 = (8'd0 - select_ln18_24_fu_1570_p3);

assign sub_ln59_7_fu_1760_p2 = (8'd0 - select_ln18_26_fu_1753_p3);

assign sub_ln59_8_fu_1931_p2 = (8'd0 - select_ln18_28_fu_1924_p3);

assign sub_ln59_9_fu_2103_p2 = (8'd0 - select_ln18_30_fu_2096_p3);

assign sub_ln59_fu_1189_p2 = (8'd0 - select_ln18_20_fu_1182_p3);

assign tmp_15_fu_1172_p4 = {{shl_ln18_6_fu_1165_p2[60:53]}};

assign tmp_16_fu_1206_p3 = {{select_ln59_fu_1195_p3}, {8'd0}};

assign tmp_17_fu_1378_p4 = {{shl_ln18_7_fu_1371_p2[60:53]}};

assign tmp_18_fu_1412_p3 = {{select_ln59_5_fu_1401_p3}, {8'd0}};

assign tmp_19_fu_1560_p4 = {{shl_ln18_8_fu_1553_p2[60:53]}};

assign tmp_20_fu_1594_p3 = {{select_ln59_6_fu_1583_p3}, {8'd0}};

assign tmp_21_fu_1743_p4 = {{shl_ln18_9_fu_1736_p2[60:53]}};

assign tmp_22_fu_1777_p3 = {{select_ln59_7_fu_1766_p3}, {8'd0}};

assign tmp_23_fu_1914_p4 = {{shl_ln18_10_fu_1907_p2[60:53]}};

assign tmp_24_fu_1948_p3 = {{select_ln59_8_fu_1937_p3}, {8'd0}};

assign tmp_25_fu_2086_p4 = {{shl_ln18_11_fu_2079_p2[60:53]}};

assign tmp_26_fu_2120_p3 = {{select_ln59_9_fu_2109_p3}, {8'd0}};

assign tmp_27_fu_2257_p4 = {{shl_ln18_12_fu_2250_p2[60:53]}};

assign tmp_28_fu_2291_p3 = {{select_ln59_10_fu_2280_p3}, {8'd0}};

assign tmp_29_fu_2429_p4 = {{shl_ln18_13_fu_2422_p2[60:53]}};

assign tmp_30_fu_2463_p3 = {{select_ln59_11_fu_2452_p3}, {8'd0}};

assign tmp_31_fu_2600_p4 = {{shl_ln18_14_fu_2593_p2[60:53]}};

assign tmp_32_fu_2634_p3 = {{select_ln59_12_fu_2623_p3}, {8'd0}};

assign tmp_40_fu_958_p3 = add_ln515_fu_952_p2[32'd11];

assign tmp_43_fu_1107_p3 = add_ln515_6_fu_1101_p2[32'd11];

assign tmp_46_fu_1304_p3 = add_ln515_7_fu_1298_p2[32'd11];

assign tmp_49_fu_1496_p3 = add_ln515_8_fu_1490_p2[32'd11];

assign tmp_52_fu_1679_p3 = add_ln515_9_fu_1673_p2[32'd11];

assign tmp_55_fu_1850_p3 = add_ln515_10_fu_1844_p2[32'd11];

assign tmp_58_fu_2022_p3 = add_ln515_11_fu_2016_p2[32'd11];

assign tmp_61_fu_2193_p3 = add_ln515_12_fu_2187_p2[32'd11];

assign tmp_64_fu_2365_p3 = add_ln515_13_fu_2359_p2[32'd11];

assign tmp_67_fu_2536_p3 = add_ln515_14_fu_2530_p2[32'd11];

assign tmp_fu_2707_p3 = {{select_ln14_1_reg_2951}, {8'd0}};

assign tmp_s_fu_1027_p4 = {{shl_ln18_fu_1020_p2[68:53]}};

assign trunc_ln47_fu_2741_p1 = add_ln47_fu_2731_p2[13:0];

assign trunc_ln534_10_fu_1468_p1 = bitcast_ln488_4_fu_1446_p1[51:0];

assign trunc_ln534_11_fu_1651_p1 = bitcast_ln488_5_fu_1629_p1[51:0];

assign trunc_ln534_12_fu_1822_p1 = bitcast_ln488_6_fu_1801_p1[51:0];

assign trunc_ln534_13_fu_1994_p1 = bitcast_ln488_7_fu_1972_p1[51:0];

assign trunc_ln534_14_fu_2165_p1 = bitcast_ln488_8_fu_2144_p1[51:0];

assign trunc_ln534_15_fu_2337_p1 = bitcast_ln488_9_fu_2315_p1[51:0];

assign trunc_ln534_16_fu_2508_p1 = bitcast_ln488_10_fu_2487_p1[51:0];

assign trunc_ln534_8_fu_1079_p1 = bitcast_ln488_fu_1057_p1[51:0];

assign trunc_ln534_9_fu_1276_p1 = bitcast_ln488_3_fu_1254_p1[51:0];

assign trunc_ln534_fu_930_p1 = data_fu_908_p1[51:0];

assign val_fu_1037_p3 = ((tmp_40_reg_3155[0:0] == 1'b1) ? zext_ln21_fu_1024_p1 : tmp_s_fu_1027_p4);

assign xor_ln14_fu_559_p2 = (icmp_ln16_fu_529_p2 ^ 1'd1);

assign xor_ln16_fu_603_p2 = (icmp_ln18_fu_577_p2 ^ 1'd1);

assign xor_ln18_fu_2822_p2 = (icmp_ln25_8_fu_2804_p2 ^ 1'd1);

assign xs_exp_3_1_fu_1458_p4 = {{bitcast_ln488_4_fu_1446_p1[62:52]}};

assign xs_exp_3_2_fu_1641_p4 = {{bitcast_ln488_5_fu_1629_p1[62:52]}};

assign xs_exp_3_3_fu_1812_p4 = {{bitcast_ln488_6_fu_1801_p1[62:52]}};

assign xs_exp_3_4_fu_1984_p4 = {{bitcast_ln488_7_fu_1972_p1[62:52]}};

assign xs_exp_3_5_fu_2155_p4 = {{bitcast_ln488_8_fu_2144_p1[62:52]}};

assign xs_exp_3_6_fu_2327_p4 = {{bitcast_ln488_9_fu_2315_p1[62:52]}};

assign xs_exp_3_7_fu_2498_p4 = {{bitcast_ln488_10_fu_2487_p1[62:52]}};

assign xs_exp_3_s_fu_1266_p4 = {{bitcast_ln488_3_fu_1254_p1[62:52]}};

assign xs_exp_fu_920_p4 = {{data_fu_908_p1[62:52]}};

assign xs_exp_s_fu_1069_p4 = {{bitcast_ln488_fu_1057_p1[62:52]}};

assign y_fp_exp_fu_2784_p4 = {{data_28_fu_2780_p1[30:23]}};

assign y_fp_sig_fu_2794_p1 = data_28_fu_2780_p1[22:0];

assign ymaggreater_fu_2828_p2 = (($signed(data_28_fu_2780_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign zext_ln1432_2_fu_755_p1 = select_ln18_12_reg_2985;

assign zext_ln1432_3_fu_1160_p1 = add_ln1432_9_fu_1155_p2;

assign zext_ln1432_4_fu_1235_p1 = add_ln1432_10_fu_1230_p2;

assign zext_ln1432_5_fu_1357_p1 = add_ln1432_11_fu_1352_p2;

assign zext_ln1432_6_fu_1441_p1 = add_ln1432_12_fu_1436_p2;

assign zext_ln1432_fu_794_p1 = select_ln16_1_fu_789_p3;

assign zext_ln14_fu_2700_p1 = select_ln14_1_reg_2951;

assign zext_ln15_fu_944_p1 = mantissa_fu_934_p4;

assign zext_ln18_10_fu_1880_p1 = $unsigned(sext_ln18_22_fu_1876_p1);

assign zext_ln18_11_fu_2052_p1 = $unsigned(sext_ln18_24_fu_2048_p1);

assign zext_ln18_12_fu_2223_p1 = $unsigned(sext_ln18_26_fu_2219_p1);

assign zext_ln18_13_fu_2395_p1 = $unsigned(sext_ln18_28_fu_2391_p1);

assign zext_ln18_14_fu_2566_p1 = $unsigned(sext_ln18_30_fu_2562_p1);

assign zext_ln18_6_fu_1137_p1 = $unsigned(sext_ln18_14_fu_1133_p1);

assign zext_ln18_7_fu_1334_p1 = $unsigned(sext_ln18_16_fu_1330_p1);

assign zext_ln18_8_fu_1526_p1 = $unsigned(sext_ln18_18_fu_1522_p1);

assign zext_ln18_9_fu_1709_p1 = $unsigned(sext_ln18_20_fu_1705_p1);

assign zext_ln18_fu_988_p1 = $unsigned(sext_ln18_12_fu_984_p1);

assign zext_ln21_10_fu_1911_p1 = tmp_56_reg_3413;

assign zext_ln21_11_fu_2083_p1 = tmp_59_reg_3453;

assign zext_ln21_12_fu_2254_p1 = tmp_62_reg_3493;

assign zext_ln21_13_fu_2426_p1 = tmp_65_reg_3533;

assign zext_ln21_14_fu_2597_p1 = tmp_68_reg_3578;

assign zext_ln21_6_fu_1169_p1 = tmp_44_reg_3218;

assign zext_ln21_7_fu_1375_p1 = tmp_47_reg_3263;

assign zext_ln21_8_fu_1557_p1 = tmp_50_reg_3318;

assign zext_ln21_9_fu_1740_p1 = tmp_53_reg_3368;

assign zext_ln21_fu_1024_p1 = tmp_41_reg_3165;

assign zext_ln39_1_fu_1016_p1 = add_ln16_reg_3023;

assign zext_ln39_fu_503_p1 = out_feat_y_fu_182;

assign zext_ln42_10_fu_894_p1 = add_ln42_16_reg_3105;

assign zext_ln42_11_fu_1202_p1 = select_ln59_fu_1195_p3;

assign zext_ln42_12_fu_1225_p1 = add_ln42_17_fu_1220_p2;

assign zext_ln42_13_fu_1408_p1 = select_ln59_5_fu_1401_p3;

assign zext_ln42_14_fu_1431_p1 = add_ln42_18_fu_1426_p2;

assign zext_ln42_15_fu_1590_p1 = select_ln59_6_fu_1583_p3;

assign zext_ln42_16_fu_1613_p1 = add_ln42_19_fu_1608_p2;

assign zext_ln42_17_fu_1773_p1 = select_ln59_7_fu_1766_p3;

assign zext_ln42_18_fu_1796_p1 = add_ln42_20_fu_1791_p2;

assign zext_ln42_19_fu_1944_p1 = select_ln59_8_fu_1937_p3;

assign zext_ln42_1_fu_655_p1 = select_ln18_12_fu_639_p3;

assign zext_ln42_20_fu_1967_p1 = add_ln42_21_fu_1962_p2;

assign zext_ln42_21_fu_2116_p1 = select_ln59_9_fu_2109_p3;

assign zext_ln42_22_fu_2139_p1 = add_ln42_22_fu_2134_p2;

assign zext_ln42_23_fu_2287_p1 = select_ln59_10_fu_2280_p3;

assign zext_ln42_24_fu_2310_p1 = add_ln42_23_fu_2305_p2;

assign zext_ln42_25_fu_2459_p1 = select_ln59_11_fu_2452_p3;

assign zext_ln42_26_fu_2482_p1 = add_ln42_24_fu_2477_p2;

assign zext_ln42_27_fu_2630_p1 = select_ln59_12_fu_2623_p3;

assign zext_ln42_28_fu_2653_p1 = add_ln42_25_fu_2648_p2;

assign zext_ln42_2_fu_665_p1 = add_ln42_8_fu_659_p2;

assign zext_ln42_3_fu_676_p1 = add_ln42_9_fu_670_p2;

assign zext_ln42_4_fu_740_p1 = add_ln42_10_fu_735_p2;

assign zext_ln42_5_fu_750_p1 = add_ln42_11_fu_745_p2;

assign zext_ln42_6_fu_803_p1 = add_ln42_12_fu_798_p2;

assign zext_ln42_7_fu_813_p1 = add_ln42_13_fu_808_p2;

assign zext_ln42_8_fu_859_p1 = add_ln42_14_fu_854_p2;

assign zext_ln42_9_fu_869_p1 = add_ln42_15_fu_864_p2;

assign zext_ln47_1_fu_2714_p1 = tmp_fu_2707_p3;

assign zext_ln47_2_fu_2728_p1 = select_ln16_1_reg_3054;

assign zext_ln47_3_fu_2759_p1 = select_ln18_16_reg_2991;

assign zext_ln47_4_fu_2771_p1 = add_ln47_1_reg_3622;

assign zext_ln47_fu_2704_p1 = select_ln14_1_reg_2951;

assign zext_ln515_11_cast_fu_1083_p4 = {{{{1'd1}, {trunc_ln534_8_fu_1079_p1}}}, {1'd0}};

assign zext_ln515_11_fu_1093_p1 = zext_ln515_11_cast_fu_1083_p4;

assign zext_ln515_12_fu_1097_p1 = xs_exp_s_fu_1069_p4;

assign zext_ln515_13_cast_fu_1280_p4 = {{{{1'd1}, {trunc_ln534_9_fu_1276_p1}}}, {1'd0}};

assign zext_ln515_13_fu_1290_p1 = zext_ln515_13_cast_fu_1280_p4;

assign zext_ln515_14_fu_1294_p1 = xs_exp_3_s_fu_1266_p4;

assign zext_ln515_15_cast_fu_1472_p4 = {{{{1'd1}, {trunc_ln534_10_fu_1468_p1}}}, {1'd0}};

assign zext_ln515_15_fu_1482_p1 = zext_ln515_15_cast_fu_1472_p4;

assign zext_ln515_16_fu_1486_p1 = xs_exp_3_1_fu_1458_p4;

assign zext_ln515_17_cast_fu_1655_p4 = {{{{1'd1}, {trunc_ln534_11_fu_1651_p1}}}, {1'd0}};

assign zext_ln515_17_fu_1665_p1 = zext_ln515_17_cast_fu_1655_p4;

assign zext_ln515_18_fu_1669_p1 = xs_exp_3_2_fu_1641_p4;

assign zext_ln515_19_cast_fu_1826_p4 = {{{{1'd1}, {trunc_ln534_12_fu_1822_p1}}}, {1'd0}};

assign zext_ln515_19_fu_1836_p1 = zext_ln515_19_cast_fu_1826_p4;

assign zext_ln515_20_fu_1840_p1 = xs_exp_3_3_fu_1812_p4;

assign zext_ln515_21_cast_fu_1998_p4 = {{{{1'd1}, {trunc_ln534_13_fu_1994_p1}}}, {1'd0}};

assign zext_ln515_21_fu_2008_p1 = zext_ln515_21_cast_fu_1998_p4;

assign zext_ln515_22_fu_2012_p1 = xs_exp_3_4_fu_1984_p4;

assign zext_ln515_23_cast_fu_2169_p4 = {{{{1'd1}, {trunc_ln534_14_fu_2165_p1}}}, {1'd0}};

assign zext_ln515_23_fu_2179_p1 = zext_ln515_23_cast_fu_2169_p4;

assign zext_ln515_24_fu_2183_p1 = xs_exp_3_5_fu_2155_p4;

assign zext_ln515_25_cast_fu_2341_p4 = {{{{1'd1}, {trunc_ln534_15_fu_2337_p1}}}, {1'd0}};

assign zext_ln515_25_fu_2351_p1 = zext_ln515_25_cast_fu_2341_p4;

assign zext_ln515_26_fu_2355_p1 = xs_exp_3_6_fu_2327_p4;

assign zext_ln515_27_cast_fu_2512_p4 = {{{{1'd1}, {trunc_ln534_16_fu_2508_p1}}}, {1'd0}};

assign zext_ln515_27_fu_2522_p1 = zext_ln515_27_cast_fu_2512_p4;

assign zext_ln515_28_fu_2526_p1 = xs_exp_3_7_fu_2498_p4;

assign zext_ln515_fu_948_p1 = xs_exp_fu_920_p4;

always @ (posedge ap_clk) begin
    zext_ln42_1_reg_2997[12:4] <= 9'b000000000;
    zext_ln1432_reg_3060[8] <= 1'b0;
    zext_ln15_reg_3150[0] <= 1'b0;
    zext_ln15_reg_3150[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_reg_3160[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_11_reg_3203[0] <= 1'b0;
    zext_ln515_11_reg_3203[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_6_reg_3213[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_13_reg_3248[0] <= 1'b0;
    zext_ln515_13_reg_3248[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_7_reg_3258[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_15_reg_3303[0] <= 1'b0;
    zext_ln515_15_reg_3303[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_8_reg_3313[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_17_reg_3353[0] <= 1'b0;
    zext_ln515_17_reg_3353[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_9_reg_3363[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_19_reg_3398[0] <= 1'b0;
    zext_ln515_19_reg_3398[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_10_reg_3408[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_21_reg_3438[0] <= 1'b0;
    zext_ln515_21_reg_3438[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_11_reg_3448[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_23_reg_3478[0] <= 1'b0;
    zext_ln515_23_reg_3478[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_12_reg_3488[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_25_reg_3518[0] <= 1'b0;
    zext_ln515_25_reg_3518[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_13_reg_3528[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    zext_ln515_27_reg_3563[0] <= 1'b0;
    zext_ln515_27_reg_3563[136:53] <= 84'b000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_14_reg_3573[136:32] <= 105'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //srcnn_conv1
