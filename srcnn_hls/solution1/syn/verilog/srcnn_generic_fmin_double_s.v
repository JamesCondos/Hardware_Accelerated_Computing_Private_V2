// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_generic_fmin_double_s (
        ap_ready,
        x,
        ap_return
);


output   ap_ready;
input  [63:0] x;
output  [63:0] ap_return;

wire   [63:0] data_fu_24_p1;
wire   [10:0] x_fp_exp_fu_28_p4;
wire   [51:0] x_fp_sig_fu_38_p1;
wire   [0:0] icmp_ln18_fu_42_p2;
wire   [0:0] icmp_ln18_1_fu_48_p2;
wire   [0:0] ymaggreater_fu_60_p2;
wire   [0:0] and_ln18_fu_54_p2;
wire   [63:0] res_fu_66_p3;
wire    ap_ce_reg;

assign and_ln18_fu_54_p2 = (icmp_ln18_fu_42_p2 & icmp_ln18_1_fu_48_p2);

assign ap_ready = 1'b1;

assign data_fu_24_p1 = x;

assign res_fu_66_p3 = ((ymaggreater_fu_60_p2[0:0] == 1'b1) ? x : 64'd4643140847074803712);

assign x_fp_exp_fu_28_p4 = {{data_fu_24_p1[62:52]}};

assign x_fp_sig_fu_38_p1 = data_fu_24_p1[51:0];

assign ymaggreater_fu_60_p2 = (($signed(data_fu_24_p1) < $signed(64'd4643140847074803712)) ? 1'b1 : 1'b0);

assign ap_return = ((and_ln18_fu_54_p2[0:0] == 1'b1) ? 64'd4643140847074803712 : res_fu_66_p3);

assign icmp_ln18_1_fu_48_p2 = ((x_fp_sig_fu_38_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_42_p2 = ((x_fp_exp_fu_28_p4 == 11'd2047) ? 1'b1 : 1'b0);

endmodule //srcnn_generic_fmin_double_s
