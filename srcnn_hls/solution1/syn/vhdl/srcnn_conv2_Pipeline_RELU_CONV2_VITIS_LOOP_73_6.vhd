-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv2_Pipeline_RELU_CONV2_VITIS_LOOP_73_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    add_ln63 : IN STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_ce0 : OUT STD_LOGIC;
    layer2_output_tile_we0 : OUT STD_LOGIC;
    layer2_output_tile_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_ce1 : OUT STD_LOGIC;
    layer2_output_tile_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_1_ce0 : OUT STD_LOGIC;
    layer2_output_tile_1_we0 : OUT STD_LOGIC;
    layer2_output_tile_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_1_ce1 : OUT STD_LOGIC;
    layer2_output_tile_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_2_ce0 : OUT STD_LOGIC;
    layer2_output_tile_2_we0 : OUT STD_LOGIC;
    layer2_output_tile_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_2_ce1 : OUT STD_LOGIC;
    layer2_output_tile_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_3_ce0 : OUT STD_LOGIC;
    layer2_output_tile_3_we0 : OUT STD_LOGIC;
    layer2_output_tile_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_3_ce1 : OUT STD_LOGIC;
    layer2_output_tile_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_4_ce0 : OUT STD_LOGIC;
    layer2_output_tile_4_we0 : OUT STD_LOGIC;
    layer2_output_tile_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_4_ce1 : OUT STD_LOGIC;
    layer2_output_tile_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_5_ce0 : OUT STD_LOGIC;
    layer2_output_tile_5_we0 : OUT STD_LOGIC;
    layer2_output_tile_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_5_ce1 : OUT STD_LOGIC;
    layer2_output_tile_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_6_ce0 : OUT STD_LOGIC;
    layer2_output_tile_6_we0 : OUT STD_LOGIC;
    layer2_output_tile_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_6_ce1 : OUT STD_LOGIC;
    layer2_output_tile_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_7_ce0 : OUT STD_LOGIC;
    layer2_output_tile_7_we0 : OUT STD_LOGIC;
    layer2_output_tile_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_7_ce1 : OUT STD_LOGIC;
    layer2_output_tile_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_8_ce0 : OUT STD_LOGIC;
    layer2_output_tile_8_we0 : OUT STD_LOGIC;
    layer2_output_tile_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_8_ce1 : OUT STD_LOGIC;
    layer2_output_tile_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_9_ce0 : OUT STD_LOGIC;
    layer2_output_tile_9_we0 : OUT STD_LOGIC;
    layer2_output_tile_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_9_ce1 : OUT STD_LOGIC;
    layer2_output_tile_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_10_ce0 : OUT STD_LOGIC;
    layer2_output_tile_10_we0 : OUT STD_LOGIC;
    layer2_output_tile_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_10_ce1 : OUT STD_LOGIC;
    layer2_output_tile_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_11_ce0 : OUT STD_LOGIC;
    layer2_output_tile_11_we0 : OUT STD_LOGIC;
    layer2_output_tile_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_11_ce1 : OUT STD_LOGIC;
    layer2_output_tile_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_12_ce0 : OUT STD_LOGIC;
    layer2_output_tile_12_we0 : OUT STD_LOGIC;
    layer2_output_tile_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_12_ce1 : OUT STD_LOGIC;
    layer2_output_tile_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_13_ce0 : OUT STD_LOGIC;
    layer2_output_tile_13_we0 : OUT STD_LOGIC;
    layer2_output_tile_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_13_ce1 : OUT STD_LOGIC;
    layer2_output_tile_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_14_ce0 : OUT STD_LOGIC;
    layer2_output_tile_14_we0 : OUT STD_LOGIC;
    layer2_output_tile_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_14_ce1 : OUT STD_LOGIC;
    layer2_output_tile_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_15_ce0 : OUT STD_LOGIC;
    layer2_output_tile_15_we0 : OUT STD_LOGIC;
    layer2_output_tile_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_15_ce1 : OUT STD_LOGIC;
    layer2_output_tile_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_16_ce0 : OUT STD_LOGIC;
    layer2_output_tile_16_we0 : OUT STD_LOGIC;
    layer2_output_tile_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    layer2_output_tile_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    layer2_output_tile_16_ce1 : OUT STD_LOGIC;
    layer2_output_tile_16_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1882_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1882_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1882_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_1882_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_1882_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv2_Pipeline_RELU_CONV2_VITIS_LOOP_73_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv9_121 : STD_LOGIC_VECTOR (8 downto 0) := "100100001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln72_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln72_fu_489_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln72_reg_662 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln72_reg_662_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal layer2_output_tile_addr_reg_667 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_addr_reg_667_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_1_addr_reg_673 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_1_addr_reg_673_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_2_addr_reg_679 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_2_addr_reg_679_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_3_addr_reg_685 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_3_addr_reg_685_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_4_addr_reg_691 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_4_addr_reg_691_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_5_addr_reg_697 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_5_addr_reg_697_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_6_addr_reg_703 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_6_addr_reg_703_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_7_addr_reg_709 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_7_addr_reg_709_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_8_addr_reg_715 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_8_addr_reg_715_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_9_addr_reg_721 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_9_addr_reg_721_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_10_addr_reg_727 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_10_addr_reg_727_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_11_addr_reg_733 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_11_addr_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_12_addr_reg_739 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_12_addr_reg_739_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_13_addr_reg_745 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_13_addr_reg_745_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_14_addr_reg_751 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_14_addr_reg_751_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_15_addr_reg_757 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_15_addr_reg_757_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_16_addr_reg_763 : STD_LOGIC_VECTOR (9 downto 0);
    signal layer2_output_tile_16_addr_reg_763_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_557_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln75_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_1_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_1_reg_779 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln75_1_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal j_fu_112 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln73_fu_536_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_fu_116 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln72_1_fu_497_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i_5_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten158_fu_120 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln72_1_fu_465_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten158_load : STD_LOGIC_VECTOR (8 downto 0);
    signal and_ln75_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln73_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln72_fu_477_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln75_fu_505_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln75_fu_509_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln75_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_601_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln75_fu_611_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln75_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_mux_17_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_17_5_32_1_1_U2142 : component srcnn_mux_17_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => layer2_output_tile_q1,
        din1 => layer2_output_tile_1_q1,
        din2 => layer2_output_tile_2_q1,
        din3 => layer2_output_tile_3_q1,
        din4 => layer2_output_tile_4_q1,
        din5 => layer2_output_tile_5_q1,
        din6 => layer2_output_tile_6_q1,
        din7 => layer2_output_tile_7_q1,
        din8 => layer2_output_tile_8_q1,
        din9 => layer2_output_tile_9_q1,
        din10 => layer2_output_tile_10_q1,
        din11 => layer2_output_tile_11_q1,
        din12 => layer2_output_tile_12_q1,
        din13 => layer2_output_tile_13_q1,
        din14 => layer2_output_tile_14_q1,
        din15 => layer2_output_tile_15_q1,
        din16 => layer2_output_tile_16_q1,
        din17 => select_ln72_reg_662,
        dout => tmp_1_fu_557_p19);

    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_5_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln72_fu_459_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_5_fu_116 <= select_ln72_1_fu_497_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_5_fu_116 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten158_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln72_fu_459_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten158_fu_120 <= add_ln72_1_fu_465_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten158_fu_120 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln72_fu_459_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_112 <= add_ln73_fu_536_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_112 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln75_1_reg_779 <= icmp_ln75_1_fu_621_p2;
                icmp_ln75_reg_774 <= icmp_ln75_fu_615_p2;
                layer2_output_tile_10_addr_reg_727_pp0_iter1_reg <= layer2_output_tile_10_addr_reg_727;
                layer2_output_tile_11_addr_reg_733_pp0_iter1_reg <= layer2_output_tile_11_addr_reg_733;
                layer2_output_tile_12_addr_reg_739_pp0_iter1_reg <= layer2_output_tile_12_addr_reg_739;
                layer2_output_tile_13_addr_reg_745_pp0_iter1_reg <= layer2_output_tile_13_addr_reg_745;
                layer2_output_tile_14_addr_reg_751_pp0_iter1_reg <= layer2_output_tile_14_addr_reg_751;
                layer2_output_tile_15_addr_reg_757_pp0_iter1_reg <= layer2_output_tile_15_addr_reg_757;
                layer2_output_tile_16_addr_reg_763_pp0_iter1_reg <= layer2_output_tile_16_addr_reg_763;
                layer2_output_tile_1_addr_reg_673_pp0_iter1_reg <= layer2_output_tile_1_addr_reg_673;
                layer2_output_tile_2_addr_reg_679_pp0_iter1_reg <= layer2_output_tile_2_addr_reg_679;
                layer2_output_tile_3_addr_reg_685_pp0_iter1_reg <= layer2_output_tile_3_addr_reg_685;
                layer2_output_tile_4_addr_reg_691_pp0_iter1_reg <= layer2_output_tile_4_addr_reg_691;
                layer2_output_tile_5_addr_reg_697_pp0_iter1_reg <= layer2_output_tile_5_addr_reg_697;
                layer2_output_tile_6_addr_reg_703_pp0_iter1_reg <= layer2_output_tile_6_addr_reg_703;
                layer2_output_tile_7_addr_reg_709_pp0_iter1_reg <= layer2_output_tile_7_addr_reg_709;
                layer2_output_tile_8_addr_reg_715_pp0_iter1_reg <= layer2_output_tile_8_addr_reg_715;
                layer2_output_tile_9_addr_reg_721_pp0_iter1_reg <= layer2_output_tile_9_addr_reg_721;
                layer2_output_tile_addr_reg_667_pp0_iter1_reg <= layer2_output_tile_addr_reg_667;
                select_ln72_reg_662_pp0_iter1_reg <= select_ln72_reg_662;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_459_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer2_output_tile_10_addr_reg_727 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_11_addr_reg_733 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_12_addr_reg_739 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_13_addr_reg_745 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_14_addr_reg_751 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_15_addr_reg_757 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_16_addr_reg_763 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_1_addr_reg_673 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_2_addr_reg_679 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_3_addr_reg_685 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_4_addr_reg_691 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_5_addr_reg_697 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_6_addr_reg_703 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_7_addr_reg_709 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_8_addr_reg_715 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_9_addr_reg_721 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                layer2_output_tile_addr_reg_667 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);
                select_ln72_reg_662 <= select_ln72_fu_489_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln72_1_fu_465_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten158_load) + unsigned(ap_const_lv9_1));
    add_ln72_fu_477_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_5_load) + unsigned(ap_const_lv5_1));
    add_ln73_fu_536_p2 <= std_logic_vector(unsigned(select_ln72_fu_489_p3) + unsigned(ap_const_lv5_1));
    add_ln75_fu_509_p2 <= std_logic_vector(unsigned(add_ln63) + unsigned(zext_ln75_fu_505_p1));
    and_ln75_fu_631_p2 <= (or_ln75_fu_627_p2 and grp_fu_1882_p_dout0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln72_fu_459_p2)
    begin
        if (((icmp_ln72_fu_459_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_5_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_5_fu_116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_5_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_5_load <= i_5_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten158_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten158_fu_120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten158_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten158_load <= indvar_flatten158_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_112, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_112;
        end if; 
    end process;

    bitcast_ln75_fu_597_p1 <= tmp_1_fu_557_p19;
    grp_fu_1882_p_ce <= ap_const_logic_1;
    grp_fu_1882_p_din0 <= tmp_1_fu_557_p19;
    grp_fu_1882_p_din1 <= ap_const_lv32_0;
    grp_fu_1882_p_opcode <= ap_const_lv5_4;
    icmp_ln72_fu_459_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten158_load = ap_const_lv9_121) else "0";
    icmp_ln73_fu_483_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv5_11) else "0";
    icmp_ln75_1_fu_621_p2 <= "1" when (trunc_ln75_fu_611_p1 = ap_const_lv23_0) else "0";
    icmp_ln75_fu_615_p2 <= "0" when (tmp_2_fu_601_p4 = ap_const_lv8_FF) else "1";
    layer2_output_tile_10_address0 <= layer2_output_tile_10_addr_reg_727_pp0_iter1_reg;
    layer2_output_tile_10_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_10_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_10_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_10_d0 <= ap_const_lv32_0;

    layer2_output_tile_10_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_A))) then 
            layer2_output_tile_10_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_11_address0 <= layer2_output_tile_11_addr_reg_733_pp0_iter1_reg;
    layer2_output_tile_11_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_11_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_11_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_11_d0 <= ap_const_lv32_0;

    layer2_output_tile_11_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_B))) then 
            layer2_output_tile_11_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_12_address0 <= layer2_output_tile_12_addr_reg_739_pp0_iter1_reg;
    layer2_output_tile_12_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_12_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_12_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_12_d0 <= ap_const_lv32_0;

    layer2_output_tile_12_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_C))) then 
            layer2_output_tile_12_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_13_address0 <= layer2_output_tile_13_addr_reg_745_pp0_iter1_reg;
    layer2_output_tile_13_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_13_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_13_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_13_d0 <= ap_const_lv32_0;

    layer2_output_tile_13_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_D))) then 
            layer2_output_tile_13_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_14_address0 <= layer2_output_tile_14_addr_reg_751_pp0_iter1_reg;
    layer2_output_tile_14_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_14_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_14_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_14_d0 <= ap_const_lv32_0;

    layer2_output_tile_14_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_E))) then 
            layer2_output_tile_14_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_15_address0 <= layer2_output_tile_15_addr_reg_757_pp0_iter1_reg;
    layer2_output_tile_15_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_15_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_15_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_15_d0 <= ap_const_lv32_0;

    layer2_output_tile_15_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_F))) then 
            layer2_output_tile_15_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_16_address0 <= layer2_output_tile_16_addr_reg_763_pp0_iter1_reg;
    layer2_output_tile_16_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_16_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_16_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_16_d0 <= ap_const_lv32_0;

    layer2_output_tile_16_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if ((not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_F)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_E)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_D)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_C)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_B)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_A)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_9)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_8)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_7)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_6)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_5)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_4)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_3)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_2)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_1)) and not((select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_0)) and (ap_const_lv1_1 = and_ln75_fu_631_p2) 
    and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_16_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_1_address0 <= layer2_output_tile_1_addr_reg_673_pp0_iter1_reg;
    layer2_output_tile_1_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_1_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_1_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_1_d0 <= ap_const_lv32_0;

    layer2_output_tile_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_1))) then 
            layer2_output_tile_1_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_2_address0 <= layer2_output_tile_2_addr_reg_679_pp0_iter1_reg;
    layer2_output_tile_2_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_2_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_2_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_2_d0 <= ap_const_lv32_0;

    layer2_output_tile_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_2))) then 
            layer2_output_tile_2_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_3_address0 <= layer2_output_tile_3_addr_reg_685_pp0_iter1_reg;
    layer2_output_tile_3_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_3_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_3_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_3_d0 <= ap_const_lv32_0;

    layer2_output_tile_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_3))) then 
            layer2_output_tile_3_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_4_address0 <= layer2_output_tile_4_addr_reg_691_pp0_iter1_reg;
    layer2_output_tile_4_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_4_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_4_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_4_d0 <= ap_const_lv32_0;

    layer2_output_tile_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_4))) then 
            layer2_output_tile_4_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_5_address0 <= layer2_output_tile_5_addr_reg_697_pp0_iter1_reg;
    layer2_output_tile_5_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_5_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_5_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_5_d0 <= ap_const_lv32_0;

    layer2_output_tile_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_5))) then 
            layer2_output_tile_5_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_6_address0 <= layer2_output_tile_6_addr_reg_703_pp0_iter1_reg;
    layer2_output_tile_6_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_6_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_6_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_6_d0 <= ap_const_lv32_0;

    layer2_output_tile_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_6))) then 
            layer2_output_tile_6_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_7_address0 <= layer2_output_tile_7_addr_reg_709_pp0_iter1_reg;
    layer2_output_tile_7_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_7_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_7_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_7_d0 <= ap_const_lv32_0;

    layer2_output_tile_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_7))) then 
            layer2_output_tile_7_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_8_address0 <= layer2_output_tile_8_addr_reg_715_pp0_iter1_reg;
    layer2_output_tile_8_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_8_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_8_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_8_d0 <= ap_const_lv32_0;

    layer2_output_tile_8_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_8))) then 
            layer2_output_tile_8_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_9_address0 <= layer2_output_tile_9_addr_reg_721_pp0_iter1_reg;
    layer2_output_tile_9_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_9_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_9_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_9_d0 <= ap_const_lv32_0;

    layer2_output_tile_9_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_9))) then 
            layer2_output_tile_9_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_address0 <= layer2_output_tile_addr_reg_667_pp0_iter1_reg;
    layer2_output_tile_address1 <= zext_ln75_1_fu_515_p1(10 - 1 downto 0);

    layer2_output_tile_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            layer2_output_tile_ce0 <= ap_const_logic_1;
        else 
            layer2_output_tile_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    layer2_output_tile_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer2_output_tile_ce1 <= ap_const_logic_1;
        else 
            layer2_output_tile_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    layer2_output_tile_d0 <= ap_const_lv32_0;

    layer2_output_tile_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln72_reg_662_pp0_iter1_reg, and_ln75_fu_631_p2)
    begin
        if (((ap_const_lv1_1 = and_ln75_fu_631_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln72_reg_662_pp0_iter1_reg = ap_const_lv5_0))) then 
            layer2_output_tile_we0 <= ap_const_logic_1;
        else 
            layer2_output_tile_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln75_fu_627_p2 <= (icmp_ln75_reg_774 or icmp_ln75_1_reg_779);
    select_ln72_1_fu_497_p3 <= 
        add_ln72_fu_477_p2 when (icmp_ln73_fu_483_p2(0) = '1') else 
        ap_sig_allocacmp_i_5_load;
    select_ln72_fu_489_p3 <= 
        ap_const_lv5_0 when (icmp_ln73_fu_483_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    tmp_2_fu_601_p4 <= bitcast_ln75_fu_597_p1(30 downto 23);
    trunc_ln75_fu_611_p1 <= bitcast_ln75_fu_597_p1(23 - 1 downto 0);
    zext_ln75_1_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_509_p2),64));
    zext_ln75_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln72_1_fu_497_p3),10));
end behav;
